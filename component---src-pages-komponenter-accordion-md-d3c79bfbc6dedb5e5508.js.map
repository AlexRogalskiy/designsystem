{"version":3,"file":"component---src-pages-komponenter-accordion-md-d3c79bfbc6dedb5e5508.js","mappings":"sNAUsBA,E,6DAFTC,EAAe,GAOtBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,wCACA,iQACA,mCACA,gNAEA,QAACT,EAAD,CAAWF,KAAK,sBAAsBW,QAAQ,eAC9C,oCACA,kLAAoK,gBAAMC,WAAW,IACjL,UAAa,iBADmJ,eAApK,OAGA,QAACV,EAAD,CAAWF,KAAK,2BAA2BW,QAAQ,eACnD,0BAAY,gBAAMC,WAAW,IACzB,UAAa,iBADL,qBAAZ,oNAKA,gCAAkB,gBAAMA,WAAW,IAC/B,UAAa,iBADC,UAAlB,2EAGA,QAACV,EAAD,CAAWF,KAAK,8BAA8BW,QAAQ,eAK1DF,EAAWI,gBAAiB","sources":["webpack://@sb1/designsystem-cms/./src/pages/komponenter/accordion.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/designsystem-docs/designsystem-docs/src/templates/MDXPage.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst DSExample = makeShortcode(\"DSExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Bruk av accordion`}</h2>\n    <p>{`Accordion brukes der du har mye informasjon som du ønsker å gjøre tilgjengelig for brukere, uten at alt er visuelt synlig samtidig. En accordion er bygget opp av en «header» og et «panel», og i SpareBank 1 er hele «headeren» klikkbar. `}</p>\n    <h2>{`Komponentene`}</h2>\n    <p>{`En accordion er bygget opp av to komponenter: Accordion og AccordionItem.\nAccordion-komponenten legges rundt alle AccordionItem's, for å gruppere og sette samme overskriftsnivå på alle.`}</p>\n    <DSExample name=\"accordion_Accordion\" mdxType=\"DSExample\" />\n    <h2>{`AccordionItem`}</h2>\n    <p>{`AccordionItem er hver enkel «header»- og «panel»-seksjon. De er lukket by default, men du kan velge at den skal være åpen fra start ved å sende med property `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`defaultOpen`}</code>{`. `}</p>\n    <DSExample name=\"accordion_Accordion_open\" mdxType=\"DSExample\" />\n    <p>{`Alle `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`<AccordionItem />`}</code>{`-komponenter har innebygget funksjonalitet for å styre\nåpning og lukking. Men om ønskelig kan du også overstyre dette. Et bruksområde\nkan være å lage en komponent som kun kan ha 1. element åpent om gangen.`}</p>\n    <p>{`Bruker man `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`isOpen`}</code>{`-propen vil intern-logikk som styrer åpning og lukking være skrudd av.`}</p>\n    <DSExample name=\"accordion_Accordion_managed\" mdxType=\"DSExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","DSExample","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}