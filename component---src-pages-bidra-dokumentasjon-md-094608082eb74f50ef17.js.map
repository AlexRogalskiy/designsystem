{"version":3,"file":"component---src-pages-bidra-dokumentasjon-md-094608082eb74f50ef17.js","mappings":"oRAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,8CACA,+BAAiB,aAAGC,WAAW,IAC3B,KAAQ,sCADK,gBAAjB,mDAE4E,aAAGA,WAAW,IACtF,KAAQ,wBADgE,SAF5E,6DAKqD,gBAAMA,WAAW,IAClE,UAAa,iBADoC,sBALrD,iLASgB,aAAGA,WAAW,IAC1B,KAAQ,4CADI,kBAThB,WAWsC,aAAGA,WAAW,IAChD,KAAQ,oCAD0B,qBAXtC,MAcA,uKAAyJ,gBAAMA,WAAW,IACtK,UAAa,iBADwI,sBAAzJ,yCAE2E,gBAAMA,WAAW,IACxF,UAAa,iBAD0D,sBAF3E,0BAKA,eACE,UAAa,mBACb,gBAAiB,SAChB,eAAKA,WAAW,MACf,UAAa,kBACZ,gBAAMA,WAAW,MAChB,UAAa,iBADd,oGASTJ,EAAWK,gBAAiB","sources":["webpack://@sb1/designsystem-cms/./src/pages/bidra/dokumentasjon.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/designsystem-docs/designsystem-docs/src/templates/MDXPage.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Hvordan dokumenterer vi`}</h2>\n    <p>{`Vi bruker `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-styleguidist.js.org/\"\n      }}>{`Styleguidist`}</a>{` til å dokumentere komponentene våre, både med `}<a parentName=\"p\" {...{\n        \"href\": \"http://usejsdoc.org/\"\n      }}>{`JSDoc`}</a>{`\nog eksempel-filer. Alle React-komponenter har sin egen `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`<KomponentNavn>.md`}</code>{` fil, hvor vi beskriver de mest vanlige\nbruksscenarioene. Er du usikker på hvordan disse burde se ut, anbefaler vi deg å se på noen av de som eksisterer\nallerede - f.eks. `}<a parentName=\"p\" {...{\n        \"href\": \"./packages/ffe-core-react/src/typography\"\n      }}>{`ffe-core-react`}</a>{` eller `}<a parentName=\"p\" {...{\n        \"href\": \"./packages/ffe-buttons-react/src\"\n      }}>{`ffe-buttons-react`}</a>{`.`}</p>\n    <p>{`Noen komponenter er designet for mørke bakgrunnsfarger. Eksempelimplementasjoner kan vises på mørk bakgrunn i styleguiden ved å sende CSS-klassen `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`sb1ds-example-dark`}</code>{` med til kodeeksempelet som ligger i `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`<KomponentNavn>.md`}</code>{`, som en custom prop:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`    \\`\\`\\`js { \"props\": { \"className\": \"sb1ds-example-dark\" } }\n    /* Kodeeksempel */\n    \\`\\`\\``}</code></pre></div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}