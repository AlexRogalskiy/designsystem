"use strict";(self.webpackChunk_sb1_designsystem_cms=self.webpackChunk_sb1_designsystem_cms||[]).push([[992],{26163:function(e,n,t){t.d(n,{$R:function(){return yi},B9:function(){return en}});var o=t(67294),r=t(99130),a=t(44900),s=t(56191),i=t(34430),c=t(8132),l=t(2959),u=t(29277),d=t(87770),p=t(9942),m=t(74425),f=t(45818),b=t(4201),g=t(11027),k=t(28090),h=t(59961),C=t(11206),I=t(80519),S=t(2462),B=t(1326),_=t(70763),v=t(88328),x=t(12878),y=t(47507),T=t(48469),N=t(55248),G=t(54721),D=t(95417),M=t(86120),L=t(45425),w=t(32943),R=t(85658),j=t(78765),P=t(47952),A=t(58778),O=t(85802),E=t(36281),F=t(58248),z=t(73661),Z=t(81658),V=t(19585),H=t(95160),U=t(97480),K=t(74249),q=t(45970),J=t(25958),W=t(91473),$=t(66325),Q=t(82234),X=t(45324),Y=t(97926),ee=t(35802),ne=t(6094),te=t(87598),oe=t(7684),re=t(51566),ae=t(16195),se=t(42539),ie=t(26409),ce=t(93984),le=t(82333),ue=t(39302),de=t(26770),pe=t(70681),me=t(76376),fe=t(41674),be=t(80204),ge=t(92294),ke=t(8978),he=t(90789),Ce=t(85642),Ie=t(44569),Se=t(47887),Be=t(45152),_e=t(61105),ve=t(1791),xe=t(92518),ye=t(67902),Te=t(66123),Ne=t(73024),Ge=t(38558),De=t(1773),Me=t(27084),Le=t(9785),we=t(83859),Re=t(76452),je=t(13741),Pe=t(68032),Ae=t(24010),Oe=t(58),Ee=t(34249),Fe=t(47499),ze=t(69573),Ze=t(31645),Ve=t(31736),He=t(41078),Ue=t(74508),Ke=t(19691),qe=t(74505),Je=t(34179),We=t(70231),$e=t(47274),Qe=t(62467),Xe=t(39845),Ye=t(93483),en=[{name:"@sb1/ffe-accordion-react",version:"9.2.3",private:!1,location:"/packages/ffe-accordion-react"},{name:"@sb1/ffe-accordion",version:"8.0.0",private:!1,location:"/packages/ffe-accordion"},{name:"@sb1/ffe-account-selector-react",version:"18.0.2",private:!1,location:"/packages/ffe-account-selector-react"},{name:"@sb1/ffe-buttons-react",version:"14.0.1",private:!1,location:"/packages/ffe-buttons-react"},{name:"@sb1/ffe-buttons",version:"13.0.2",private:!1,location:"/packages/ffe-buttons"},{name:"@sb1/ffe-cards-react",version:"5.0.0",private:!1,location:"/packages/ffe-cards-react"},{name:"@sb1/ffe-cards",version:"12.0.0",private:!1,location:"/packages/ffe-cards"},{name:"@sb1/ffe-chart-donut-react",version:"4.0.0",private:!1,location:"/packages/ffe-chart-donut-react"},{name:"@sb1/ffe-checkbox-react",version:"7.0.6",private:!1,location:"/packages/ffe-checkbox-react"},{name:"@sb1/ffe-collapse-react",version:"1.1.6",private:!1,location:"/packages/ffe-collapse-react"},{name:"@sb1/ffe-context-message-react",version:"5.2.3",private:!1,location:"/packages/ffe-context-message-react"},{name:"@sb1/ffe-context-message",version:"5.0.6",private:!1,location:"/packages/ffe-context-message"},{name:"@sb1/ffe-core-react",version:"4.2.5",private:!1,location:"/packages/ffe-core-react"},{name:"@sb1/ffe-core",version:"19.1.0",private:!1,location:"/packages/ffe-core"},{name:"@sb1/ffe-datepicker-react",version:"5.0.21",private:!1,location:"/packages/ffe-datepicker-react"},{name:"@sb1/ffe-datepicker",version:"10.0.3",private:!1,location:"/packages/ffe-datepicker"},{name:"@sb1/ffe-decorators-react",version:"3.0.3",private:!1,location:"/packages/ffe-decorators-react"},{name:"@sb1/ffe-details-list-react",version:"3.0.37",private:!1,location:"/packages/ffe-details-list-react"},{name:"@sb1/ffe-details-list",version:"10.0.0",private:!1,location:"/packages/ffe-details-list"},{name:"@sb1/ffe-dropdown-react",version:"5.1.5",private:!1,location:"/packages/ffe-dropdown-react"},{name:"@sb1/ffe-file-upload-react",version:"5.0.4",private:!1,location:"/packages/ffe-file-upload-react"},{name:"@sb1/ffe-file-upload",version:"6.0.2",private:!1,location:"/packages/ffe-file-upload"},{name:"@sb1/ffe-form-react",version:"8.1.0",private:!1,location:"/packages/ffe-form-react"},{name:"@sb1/ffe-form",version:"19.0.2",private:!1,location:"/packages/ffe-form"},{name:"@sb1/ffe-formatters",version:"4.0.1",private:!1,location:"/packages/ffe-formatters"},{name:"@sb1/ffe-grid-react",version:"10.1.5",private:!1,location:"/packages/ffe-grid-react"},{name:"@sb1/ffe-grid",version:"11.0.26",private:!1,location:"/packages/ffe-grid"},{name:"@sb1/ffe-header",version:"17.0.2",private:!1,location:"/packages/ffe-header"},{name:"@sb1/ffe-icons-react",version:"7.2.18",private:!1,location:"/packages/ffe-icons-react"},{name:"@sb1/ffe-icons",version:"12.15.2",private:!1,location:"/packages/ffe-icons"},{name:"@sb1/ffe-layout-legacy",version:"1.0.5",private:!1,location:"/packages/ffe-layout-legacy"},{name:"@sb1/ffe-lists-react",version:"5.0.3",private:!1,location:"/packages/ffe-lists-react"},{name:"@sb1/ffe-lists",version:"10.0.4",private:!1,location:"/packages/ffe-lists"},{name:"@sb1/ffe-message-box-react",version:"7.0.0",private:!1,location:"/packages/ffe-message-box-react"},{name:"@sb1/ffe-message-box",version:"9.0.0",private:!1,location:"/packages/ffe-message-box"},{name:"@sb1/ffe-radio-button-react",version:"5.0.31",private:!1,location:"/packages/ffe-radio-button-react"},{name:"@sb1/ffe-sb1-logos",version:"1.1.3",private:!1,location:"/packages/ffe-sb1-logos"},{name:"@sb1/ffe-searchable-dropdown-react",version:"13.0.2",private:!1,location:"/packages/ffe-searchable-dropdown-react"},{name:"@sb1/ffe-spinner-react",version:"5.0.3",private:!1,location:"/packages/ffe-spinner-react"},{name:"@sb1/ffe-spinner",version:"4.0.0",private:!1,location:"/packages/ffe-spinner"},{name:"@sb1/ffe-system-message-react",version:"6.2.7",private:!1,location:"/packages/ffe-system-message-react"},{name:"@sb1/ffe-system-message",version:"6.0.4",private:!1,location:"/packages/ffe-system-message"},{name:"@sb1/ffe-tables-react",version:"6.0.26",private:!1,location:"/packages/ffe-tables-react"},{name:"@sb1/ffe-tables",version:"12.0.1",private:!1,location:"/packages/ffe-tables"},{name:"@sb1/ffe-tabs-react",version:"5.0.5",private:!1,location:"/packages/ffe-tabs-react"},{name:"@sb1/ffe-tabs",version:"11.0.2",private:!1,location:"/packages/ffe-tabs"},{name:"@sb1/ffe-webfonts",version:"3.0.0",private:!1,location:"/packages/ffe-webfonts"}],nn={useState:o.useState,Datepicker:r.ZP},tn=Object.freeze({__proto__:null,scope:nn,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            fullWidth={true}\n            inputProps={{ id: \'datepicker-example-full-width\' }}\n            label="Velg dato"\n            language="nb"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\n\n() => {\n    const [date, setDate] = useState('01.01.2016');\n\n    return (\n        <Datepicker\n            fullWidth={true}\n            inputProps={{ id: 'datepicker-example-full-width' }}\n            label=\"Velg dato\"\n            language=\"nb\"\n            maxDate=\"31.12.2016\"\n            minDate=\"01.01.2016\"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker-fullWidth.jsx"}),on={useState:o.useState,Datepicker:r.ZP},rn=Object.freeze({__proto__:null,scope:on,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            calendarAbove={true}\n            inputProps={{ id: \'datepicker-example-calendar-above\' }}\n            label="Velg dato"\n            language="nb"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\n\n() => {\n    const [date, setDate] = useState('01.01.2016');\n\n    return (\n        <Datepicker\n            calendarAbove={true}\n            inputProps={{ id: 'datepicker-example-calendar-above' }}\n            label=\"Velg dato\"\n            language=\"nb\"\n            maxDate=\"31.12.2016\"\n            minDate=\"01.01.2016\"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker-calendarAbove.jsx"}),an={Calendar:a.Z},sn=Object.freeze({__proto__:null,scope:an,code:'<Calendar language="en" onDatePicked={f => console.log(f)} />;',sourceCode:"import { Calendar } from '@sb1/ffe-datepicker-react';\n\n<Calendar language=\"en\" onDatePicked={f => console.log(f)} />;\n",sourceImports:"import { Calendar } from '@sb1/ffe-datepicker-react';",dependencies:["@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Calendar-en.jsx"}),cn={useState:o.useState,Datepicker:r.ZP},ln=Object.freeze({__proto__:null,scope:cn,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            aria-invalid="true"\n            inputProps={{ id: \'datepicker-example-aria-invalid\' }}\n            label="Velg dato"\n            language="nn"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport Datepicker from \'@sb1/ffe-datepicker-react\';\n\n() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            aria-invalid="true"\n            inputProps={{ id: \'datepicker-example-aria-invalid\' }}\n            label="Velg dato"\n            language="nn"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker-invalid.jsx"}),un={Calendar:a.Z},dn=Object.freeze({__proto__:null,scope:un,code:'<Calendar language="nb" onDatePicked={f => console.log(f)} />;',sourceCode:"import { Calendar } from '@sb1/ffe-datepicker-react';\n\n<Calendar language=\"nb\" onDatePicked={f => console.log(f)} />;\n",sourceImports:"import { Calendar } from '@sb1/ffe-datepicker-react';",dependencies:["@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Calendar.jsx"}),pn={useState:o.useState,Datepicker:r.ZP},mn=Object.freeze({__proto__:null,scope:pn,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            inputProps={{ id: \'datepicker-example\' }}\n            label="Velg dato"\n            language="en"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\n\n() => {\n    const [date, setDate] = useState('01.01.2016');\n\n    return (\n        <Datepicker\n            inputProps={{ id: 'datepicker-example' }}\n            label=\"Velg dato\"\n            language=\"en\"\n            maxDate=\"31.12.2016\"\n            minDate=\"01.01.2016\"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker-en.jsx"}),fn={Calendar:a.Z},bn=Object.freeze({__proto__:null,scope:fn,code:'<Calendar language="nn" onDatePicked={f => console.log(f)} />;',sourceCode:"import { Calendar } from '@sb1/ffe-datepicker-react';\n\n<Calendar language=\"nn\" onDatePicked={f => console.log(f)} />;\n",sourceImports:"import { Calendar } from '@sb1/ffe-datepicker-react';",dependencies:["@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Calendar-nn.jsx"}),gn={useState:o.useState,Datepicker:r.ZP},kn=Object.freeze({__proto__:null,scope:gn,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            inputProps={{ id: \'datepicker-example\' }}\n            label="Velg dato"\n            language="nb"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\n\n() => {\n    const [date, setDate] = useState('01.01.2016');\n\n    return (\n        <Datepicker\n            inputProps={{ id: 'datepicker-example' }}\n            label=\"Velg dato\"\n            language=\"nb\"\n            maxDate=\"31.12.2016\"\n            minDate=\"01.01.2016\"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker.jsx"}),hn={useState:o.useState,Datepicker:r.ZP},Cn=Object.freeze({__proto__:null,scope:hn,code:'() => {\n    const [date, setDate] = useState(\'01.01.2016\');\n\n    return (\n        <Datepicker\n            inputProps={{ id: \'datepicker-example\' }}\n            label="Velg dato"\n            language="nn"\n            maxDate="31.12.2016"\n            minDate="01.01.2016"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};',sourceCode:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\n\n() => {\n    const [date, setDate] = useState('01.01.2016');\n\n    return (\n        <Datepicker\n            inputProps={{ id: 'datepicker-example' }}\n            label=\"Velg dato\"\n            language=\"nn\"\n            maxDate=\"31.12.2016\"\n            minDate=\"01.01.2016\"\n            onChange={setDate}\n            value={date}\n        />\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';",dependencies:["react","@sb1/ffe-datepicker-react"],sourceFileName:"datepicker/Datepicker-nn.jsx"}),In={TabButton:s.Z},Sn=Object.freeze({__proto__:null,scope:In,code:"<TabButton selected={true}>Dette er en valgt tab button</TabButton>;",sourceCode:"import { TabButton } from '@sb1/ffe-tabs-react';\n\n<TabButton selected={true}>Dette er en valgt tab button</TabButton>;\n",sourceImports:"import { TabButton } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabButton-selected.jsx"}),Bn={TabButton:s.Z},_n=Object.freeze({__proto__:null,scope:Bn,code:"<TabButton>Dette er en tab button</TabButton>;",sourceCode:"import { TabButton } from '@sb1/ffe-tabs-react';\n\n<TabButton>Dette er en tab button</TabButton>;\n",sourceImports:"import { TabButton } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabButton.jsx"}),vn={Tab:i.Z,TabGroup:c.Z},xn=Object.freeze({__proto__:null,scope:vn,code:"<TabGroup thin={true}>\n    <Tab>Dette er en tab</Tab>\n    <Tab selected={true}>Dette er en valgt tab</Tab>\n    <Tab>Dette er en annen tab</Tab>\n</TabGroup>;",sourceCode:"import { Tab, TabGroup } from '@sb1/ffe-tabs-react';\n\n<TabGroup thin={true}>\n    <Tab>Dette er en tab</Tab>\n    <Tab selected={true}>Dette er en valgt tab</Tab>\n    <Tab>Dette er en annen tab</Tab>\n</TabGroup>;\n",sourceImports:"import { Tab, TabGroup } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabGroup-thin.jsx"}),yn={TabButton:s.Z,TabButtonGroup:l.Z},Tn=Object.freeze({__proto__:null,scope:yn,code:"<TabButtonGroup thin={true}>\n    <TabButton>Dette er en tab button</TabButton>\n    <TabButton>Dette er en annen tab button</TabButton>\n</TabButtonGroup>;",sourceCode:"import { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';\n\n<TabButtonGroup thin={true}>\n    <TabButton>Dette er en tab button</TabButton>\n    <TabButton>Dette er en annen tab button</TabButton>\n</TabButtonGroup>;\n",sourceImports:"import { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabButtonGroup-thin.jsx"}),Nn={useState:o.useState,TabButton:s.Z,TabButtonGroup:l.Z,HusIkon:u.Z,BilIkon:d.Z,IconCard:v.Z},Gn=Object.freeze({__proto__:null,scope:Nn,code:"() => {\n    const displayNone = {\n        display: 'none',\n    };\n\n    const loan = { house: 'house', car: 'car' };\n    const [activeTabId, setActiveTabId] = useState(loan.house);\n\n    return (\n        <>\n            <TabButtonGroup>\n                <TabButton\n                    selected={activeTabId === loan.house}\n                    onClick={() => setActiveTabId(loan.house)}\n                    aria-controls={loan.house}\n                >\n                    Huslån\n                </TabButton>\n\n                <TabButton\n                    selected={activeTabId === loan.car}\n                    onClick={() => setActiveTabId(loan.car)}\n                    aria-controls={loan.car}\n                >\n                    Billån\n                </TabButton>\n            </TabButtonGroup>\n\n            <IconCard\n                icon={<HusIkon />}\n                id={loan.house}\n                style={activeTabId === loan.house ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Huslån</Title>\n                        <Subtext>Ta opp huslån</Subtext>\n                    </>\n                )}\n            </IconCard>\n\n            <IconCard\n                icon={<BilIkon />}\n                id={loan.car}\n                style={activeTabId === loan.car ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Billån</Title>\n                        <Subtext>Ta opp billån</Subtext>\n                    </>\n                )}\n            </IconCard>\n        </>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';\nimport { HusIkon, BilIkon } from '@sb1/ffe-icons-react';\nimport { IconCard } from '@sb1/ffe-cards-react';\n\n() => {\n    const displayNone = {\n        display: 'none',\n    };\n\n    const loan = { house: 'house', car: 'car' };\n    const [activeTabId, setActiveTabId] = useState(loan.house);\n\n    return (\n        <>\n            <TabButtonGroup>\n                <TabButton\n                    selected={activeTabId === loan.house}\n                    onClick={() => setActiveTabId(loan.house)}\n                    aria-controls={loan.house}\n                >\n                    Huslån\n                </TabButton>\n\n                <TabButton\n                    selected={activeTabId === loan.car}\n                    onClick={() => setActiveTabId(loan.car)}\n                    aria-controls={loan.car}\n                >\n                    Billån\n                </TabButton>\n            </TabButtonGroup>\n\n            <IconCard\n                icon={<HusIkon />}\n                id={loan.house}\n                style={activeTabId === loan.house ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Huslån</Title>\n                        <Subtext>Ta opp huslån</Subtext>\n                    </>\n                )}\n            </IconCard>\n\n            <IconCard\n                icon={<BilIkon />}\n                id={loan.car}\n                style={activeTabId === loan.car ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Billån</Title>\n                        <Subtext>Ta opp billån</Subtext>\n                    </>\n                )}\n            </IconCard>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';\nimport { HusIkon, BilIkon } from '@sb1/ffe-icons-react';\nimport { IconCard } from '@sb1/ffe-cards-react';",dependencies:["react","@sb1/ffe-tabs-react","@sb1/ffe-icons-react","@sb1/ffe-cards-react"],sourceFileName:"tabs/TabButtonGroup-advanced.jsx"}),Dn={TabButton:s.Z},Mn=Object.freeze({__proto__:null,scope:Dn,code:"<TabButton\n    onClick={() => {\n        alert('Hei');\n    }}\n    data-analytics-track=\"logMe\"\n>\n    Dette er en tab button\n</TabButton>;",sourceCode:"import { TabButton } from '@sb1/ffe-tabs-react';\n\n<TabButton\n    onClick={() => {\n        alert('Hei');\n    }}\n    data-analytics-track=\"logMe\"\n>\n    Dette er en tab button\n</TabButton>;\n",sourceImports:"import { TabButton } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabButton-customProps.jsx"}),Ln={Tab:i.Z,Grid:N.Z,GridRow:G.Z,GridCol:D.Z},wn=Object.freeze({__proto__:null,scope:Ln,code:"<Grid>\n    <GridRow>\n        <GridCol sm={12}>\n            <div>\n                <Tab condensed={true}>Dette er en kompakt fane</Tab>\n            </div>\n        </GridCol>\n    </GridRow>\n</Grid>;",sourceCode:"import { Tab } from '@sb1/ffe-tabs-react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\n\n<Grid>\n    <GridRow>\n        <GridCol sm={12}>\n            <div>\n                <Tab condensed={true}>Dette er en kompakt fane</Tab>\n            </div>\n        </GridCol>\n    </GridRow>\n</Grid>;\n",sourceImports:"import { Tab } from '@sb1/ffe-tabs-react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-tabs-react","@sb1/ffe-grid-react"],sourceFileName:"tabs/Tab-condensed.jsx"}),Rn={Tab:i.Z},jn=Object.freeze({__proto__:null,scope:Rn,code:"<Tab selected={true}>Dette er en valgt fane</Tab>;",sourceCode:"import { Tab } from '@sb1/ffe-tabs-react';\n\n<Tab selected={true}>Dette er en valgt fane</Tab>;\n",sourceImports:"import { Tab } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/Tab-selected.jsx"}),Pn={Tab:i.Z},An=Object.freeze({__proto__:null,scope:Pn,code:"<Tab\n    onClick={() => {\n        alert('Hei');\n    }}\n    data-analytics-track=\"logMe\"\n>\n    Dette er en fane\n</Tab>;",sourceCode:"import { Tab } from '@sb1/ffe-tabs-react';\n\n<Tab\n    onClick={() => {\n        alert('Hei');\n    }}\n    data-analytics-track=\"logMe\"\n>\n    Dette er en fane\n</Tab>;\n",sourceImports:"import { Tab } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/Tab-customProps.jsx"}),On={TabButton:s.Z,Grid:N.Z,GridRow:G.Z,GridCol:D.Z},En=Object.freeze({__proto__:null,scope:On,code:'<Grid>\n    <GridRow background="sand" topPadding={true}>\n        <GridCol sm={12}>\n            <div>\n                <TabButton ghost={true} condensed={true}>\n                    Dette er en transparent og kompakt tab button\n                </TabButton>\n            </div>\n        </GridCol>\n    </GridRow>\n</Grid>;',sourceCode:"import { TabButton } from '@sb1/ffe-tabs-react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\n\n<Grid>\n    <GridRow background=\"sand\" topPadding={true}>\n        <GridCol sm={12}>\n            <div>\n                <TabButton ghost={true} condensed={true}>\n                    Dette er en transparent og kompakt tab button\n                </TabButton>\n            </div>\n        </GridCol>\n    </GridRow>\n</Grid>;\n",sourceImports:"import { TabButton } from '@sb1/ffe-tabs-react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-tabs-react","@sb1/ffe-grid-react"],sourceFileName:"tabs/TabButton-condensed.jsx"}),Fn={TabButton:s.Z,TabButtonGroup:l.Z},zn=Object.freeze({__proto__:null,scope:Fn,code:"<TabButtonGroup>\n    <TabButton>Dette er en tab</TabButton>\n    <TabButton selected={true}>Dette er en valgt tab</TabButton>\n    <TabButton>Dette er en annen tab</TabButton>\n</TabButtonGroup>;",sourceCode:"import { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';\n\n<TabButtonGroup>\n    <TabButton>Dette er en tab</TabButton>\n    <TabButton selected={true}>Dette er en valgt tab</TabButton>\n    <TabButton>Dette er en annen tab</TabButton>\n</TabButtonGroup>;\n",sourceImports:"import { TabButton, TabButtonGroup } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabButtonGroup.jsx"}),Zn={Tab:i.Z,TabGroup:c.Z},Vn=Object.freeze({__proto__:null,scope:Zn,code:"<TabGroup>\n    <Tab>Dette er en tab</Tab>\n    <Tab selected={true}>Dette er en valgt tab</Tab>\n    <Tab>Dette er en annen tab</Tab>\n</TabGroup>;",sourceCode:"import { Tab, TabGroup } from '@sb1/ffe-tabs-react';\n\n<TabGroup>\n    <Tab>Dette er en tab</Tab>\n    <Tab selected={true}>Dette er en valgt tab</Tab>\n    <Tab>Dette er en annen tab</Tab>\n</TabGroup>;\n",sourceImports:"import { Tab, TabGroup } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/TabGroup.jsx"}),Hn={useState:o.useState,Tab:i.Z,TabGroup:c.Z,HusIkon:u.Z,BilIkon:d.Z,IconCard:v.Z},Un=Object.freeze({__proto__:null,scope:Hn,code:"() => {\n    const displayNone = {\n        display: 'none',\n    };\n\n    const loan = { house: 'house', car: 'car' };\n    const [activeTabId, setActiveTabId] = useState(loan.house);\n\n    return (\n        <>\n            <TabGroup>\n                <Tab\n                    selected={activeTabId === loan.house}\n                    onClick={() => setActiveTabId(loan.house)}\n                    aria-controls={loan.house}\n                >\n                    Huslån\n                </Tab>\n\n                <Tab\n                    selected={activeTabId === loan.car}\n                    onClick={() => setActiveTabId(loan.car)}\n                    aria-controls={loan.car}\n                >\n                    Billån\n                </Tab>\n            </TabGroup>\n\n            <IconCard\n                icon={<HusIkon />}\n                id={loan.house}\n                style={activeTabId === loan.house ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Huslån</Title>\n                        <Subtext>Ta opp huslån</Subtext>\n                    </>\n                )}\n            </IconCard>\n\n            <IconCard\n                icon={<BilIkon />}\n                id={loan.car}\n                style={activeTabId === loan.car ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Billån</Title>\n                        <Subtext>Ta opp billån</Subtext>\n                    </>\n                )}\n            </IconCard>\n        </>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { Tab, TabGroup } from '@sb1/ffe-tabs-react';\nimport { HusIkon, BilIkon } from '@sb1/ffe-icons-react';\nimport { IconCard } from '@sb1/ffe-cards-react';\n\n() => {\n    const displayNone = {\n        display: 'none',\n    };\n\n    const loan = { house: 'house', car: 'car' };\n    const [activeTabId, setActiveTabId] = useState(loan.house);\n\n    return (\n        <>\n            <TabGroup>\n                <Tab\n                    selected={activeTabId === loan.house}\n                    onClick={() => setActiveTabId(loan.house)}\n                    aria-controls={loan.house}\n                >\n                    Huslån\n                </Tab>\n\n                <Tab\n                    selected={activeTabId === loan.car}\n                    onClick={() => setActiveTabId(loan.car)}\n                    aria-controls={loan.car}\n                >\n                    Billån\n                </Tab>\n            </TabGroup>\n\n            <IconCard\n                icon={<HusIkon />}\n                id={loan.house}\n                style={activeTabId === loan.house ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Huslån</Title>\n                        <Subtext>Ta opp huslån</Subtext>\n                    </>\n                )}\n            </IconCard>\n\n            <IconCard\n                icon={<BilIkon />}\n                id={loan.car}\n                style={activeTabId === loan.car ? null : displayNone}\n            >\n                {({ Title, Subtext }) => (\n                    <>\n                        <Title>Billån</Title>\n                        <Subtext>Ta opp billån</Subtext>\n                    </>\n                )}\n            </IconCard>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { Tab, TabGroup } from '@sb1/ffe-tabs-react';\nimport { HusIkon, BilIkon } from '@sb1/ffe-icons-react';\nimport { IconCard } from '@sb1/ffe-cards-react';",dependencies:["react","@sb1/ffe-tabs-react","@sb1/ffe-icons-react","@sb1/ffe-cards-react"],sourceFileName:"tabs/TabGroup-advanced.jsx"}),Kn={Tab:i.Z},qn=Object.freeze({__proto__:null,scope:Kn,code:"<Tab>Dette er en fane</Tab>;",sourceCode:"import { Tab } from '@sb1/ffe-tabs-react';\n\n<Tab>Dette er en fane</Tab>;\n",sourceImports:"import { Tab } from '@sb1/ffe-tabs-react';",dependencies:["@sb1/ffe-tabs-react"],sourceFileName:"tabs/Tab.jsx"}),Jn={InfoMessage:L.Z,Paragraph:A.Z,HandlevognIkon:p.Z},Wn=Object.freeze({__proto__:null,scope:Jn,code:'<InfoMessage title="Handlevognen din er tom" icon={<HandlevognIkon />}>\n    <Paragraph>Du har ingenting i handlevognen din.</Paragraph>\n</InfoMessage>;',sourceCode:"import { InfoMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\nimport { HandlevognIkon } from '@sb1/ffe-icons-react';\n\n<InfoMessage title=\"Handlevognen din er tom\" icon={<HandlevognIkon />}>\n    <Paragraph>Du har ingenting i handlevognen din.</Paragraph>\n</InfoMessage>;\n",sourceImports:"import { InfoMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\nimport { HandlevognIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react","@sb1/ffe-icons-react"],sourceFileName:"message-box/InfoMessage-customIcon.jsx"}),$n={InfoMessage:L.Z,Paragraph:A.Z},Qn=Object.freeze({__proto__:null,scope:$n,code:'<InfoMessage title="Du har ingen kort">\n    <Paragraph>\n        Denne tjenesten er kun tilgjengelig for deg med et debitkort eller\n        kredittkort fra SpareBank 1.\n    </Paragraph>\n</InfoMessage>;',sourceCode:"import { InfoMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<InfoMessage title=\"Du har ingen kort\">\n    <Paragraph>\n        Denne tjenesten er kun tilgjengelig for deg med et debitkort eller\n        kredittkort fra SpareBank 1.\n    </Paragraph>\n</InfoMessage>;\n",sourceImports:"import { InfoMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react"],sourceFileName:"message-box/InfoMessage.jsx"}),Xn={InfoMessage:L.Z,InfoMessageList:w.T,InfoMessageListItem:w.v},Yn=Object.freeze({__proto__:null,scope:Xn,code:'<InfoMessage title="Viktige ting å huske på">\n    <InfoMessageList>\n        <InfoMessageListItem>\n            SpareBank 1 gir deg full oversikt\n        </InfoMessageListItem>\n        <InfoMessageListItem>\n            Ikke vær redd for å ta kontakt\n        </InfoMessageListItem>\n    </InfoMessageList>\n</InfoMessage>;',sourceCode:"import {\n    InfoMessage,\n    InfoMessageList,\n    InfoMessageListItem,\n} from '@sb1/ffe-message-box-react';\n\n<InfoMessage title=\"Viktige ting å huske på\">\n    <InfoMessageList>\n        <InfoMessageListItem>\n            SpareBank 1 gir deg full oversikt\n        </InfoMessageListItem>\n        <InfoMessageListItem>\n            Ikke vær redd for å ta kontakt\n        </InfoMessageListItem>\n    </InfoMessageList>\n</InfoMessage>;\n",sourceImports:"import {\n    InfoMessage,\n    InfoMessageList,\n    InfoMessageListItem,\n} from '@sb1/ffe-message-box-react';",dependencies:["@sb1/ffe-message-box-react"],sourceFileName:"message-box/InfoMessageList.jsx"}),et={SuccessMessage:R.Z,Paragraph:A.Z},nt=Object.freeze({__proto__:null,scope:et,code:'<SuccessMessage title="Betalingen ble gjennomført">\n    <Paragraph>Nå er du helt gjeldsfri! Hurra!</Paragraph>\n</SuccessMessage>;',sourceCode:"import { SuccessMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<SuccessMessage title=\"Betalingen ble gjennomført\">\n    <Paragraph>Nå er du helt gjeldsfri! Hurra!</Paragraph>\n</SuccessMessage>;\n",sourceImports:"import { SuccessMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react"],sourceFileName:"message-box/SuccessMessage.jsx"}),tt={ErrorMessage:j.Z,Paragraph:A.Z},ot=Object.freeze({__proto__:null,scope:tt,code:'<ErrorMessage title="Fikk ikke kalkulert pris">\n    <Paragraph>\n        Det ser ut til at vi har litt problemer med priskalkuleringstjenestene\n        våre akkurat nå. Hvis problemet vedvarer, kan du ta kontakt med\n        kundesupport, så hjelper vi deg.\n    </Paragraph>\n</ErrorMessage>;',sourceCode:"import { ErrorMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<ErrorMessage title=\"Fikk ikke kalkulert pris\">\n    <Paragraph>\n        Det ser ut til at vi har litt problemer med priskalkuleringstjenestene\n        våre akkurat nå. Hvis problemet vedvarer, kan du ta kontakt med\n        kundesupport, så hjelper vi deg.\n    </Paragraph>\n</ErrorMessage>;\n",sourceImports:"import { ErrorMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react"],sourceFileName:"message-box/ErrorMessage.jsx"}),rt={ErrorMessage:j.Z,Paragraph:A.Z},at=Object.freeze({__proto__:null,scope:rt,code:'<ErrorMessage title="Fikk ikke kalkulert pris" alert={false}>\n    <Paragraph>\n        Det ser ut til at vi har litt problemer med priskalkuleringstjenestene\n        våre akkurat nå. Hvis problemet vedvarer, kan du ta kontakt med\n        kundesupport, så hjelper vi deg.\n    </Paragraph>\n</ErrorMessage>;',sourceCode:"import { ErrorMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<ErrorMessage title=\"Fikk ikke kalkulert pris\" alert={false}>\n    <Paragraph>\n        Det ser ut til at vi har litt problemer med priskalkuleringstjenestene\n        våre akkurat nå. Hvis problemet vedvarer, kan du ta kontakt med\n        kundesupport, så hjelper vi deg.\n    </Paragraph>\n</ErrorMessage>;\n",sourceImports:"import { ErrorMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react"],sourceFileName:"message-box/ErrorMessage-alertFalse.jsx"}),st={TipsMessage:P.Z,Paragraph:A.Z},it=Object.freeze({__proto__:null,scope:st,code:'<TipsMessage title="Reiseforsikringen dekker alt utenfor hjemmet!">\n    <Paragraph>\n        Reiseforsikringen gjelder ikke bare når du er på ferie. Les mer om hva\n        som dekkes i vilkårene.\n    </Paragraph>\n</TipsMessage>;',sourceCode:"import { TipsMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<TipsMessage title=\"Reiseforsikringen dekker alt utenfor hjemmet!\">\n    <Paragraph>\n        Reiseforsikringen gjelder ikke bare når du er på ferie. Les mer om hva\n        som dekkes i vilkårene.\n    </Paragraph>\n</TipsMessage>;\n",sourceImports:"import { TipsMessage } from '@sb1/ffe-message-box-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-message-box-react","@sb1/ffe-core-react"],sourceFileName:"message-box/TipsMessage.jsx"}),ct={useState:o.useState,ExpandButton:K.Z},lt=Object.freeze({__proto__:null,scope:ct,code:"() => {\n    const [isExpanded, setExpanded] = useState(false);\n\n    return (\n        <div>\n            <ExpandButton\n                isExpanded={isExpanded}\n                onClick={() => setExpanded(!isExpanded)}\n            >\n                Vis mer\n            </ExpandButton>\n        </div>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { ExpandButton } from '@sb1/ffe-buttons-react';\n\n() => {\n    const [isExpanded, setExpanded] = useState(false);\n\n    return (\n        <div>\n            <ExpandButton\n                isExpanded={isExpanded}\n                onClick={() => setExpanded(!isExpanded)}\n            >\n                Vis mer\n            </ExpandButton>\n        </div>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { ExpandButton } from '@sb1/ffe-buttons-react';",dependencies:["react","@sb1/ffe-buttons-react"],sourceFileName:"buttons/ExpandButton.jsx"}),ut={TertiaryButton:q.Z,ButtonGroup:J.Z},dt=Object.freeze({__proto__:null,scope:ut,code:"<ButtonGroup thin={true}>\n    <TertiaryButton onClick={f => f}>Tertiærknapp</TertiaryButton>\n</ButtonGroup>;",sourceCode:"import { TertiaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';\n\n<ButtonGroup thin={true}>\n    <TertiaryButton onClick={f => f}>Tertiærknapp</TertiaryButton>\n</ButtonGroup>;\n",sourceImports:"import { TertiaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/TertiaryButton.jsx"}),pt={useState:o.useState,InlineExpandButton:W.Z,Collapse:te.Z,Paragraph:A.Z},mt=Object.freeze({__proto__:null,scope:pt,code:'() => {\n    const [isExpanded, setExpanded] = useState(false);\n    return (\n        <>\n            <Paragraph>\n                Jeg samtykker til at selskapene i SpareBank 1 deler og benytter\n                opplysningene om meg, slik at jeg kan få bedre og relevante\n                tilbud.\n                <InlineExpandButton\n                    aria-controls="inline-expand-example-details"\n                    aria-expanded={isExpanded}\n                    isExpanded={isExpanded}\n                    onClick={() => setExpanded(!isExpanded)}\n                >\n                    {isExpanded ? \'Vis mindre\' : \'Vis mer\'}\n                </InlineExpandButton>\n            </Paragraph>\n\n            <Collapse\n                id="inline-expand-example-details"\n                isOpen={isExpanded}\n                role="region"\n            >\n                <div>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                </div>\n            </Collapse>\n        </>\n    );\n};',sourceCode:"import { useState } from 'react';\nimport { InlineExpandButton } from '@sb1/ffe-buttons-react';\nimport Collapse from '@sb1/ffe-collapse-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n() => {\n    const [isExpanded, setExpanded] = useState(false);\n    return (\n        <>\n            <Paragraph>\n                Jeg samtykker til at selskapene i SpareBank 1 deler og benytter\n                opplysningene om meg, slik at jeg kan få bedre og relevante\n                tilbud.\n                <InlineExpandButton\n                    aria-controls=\"inline-expand-example-details\"\n                    aria-expanded={isExpanded}\n                    isExpanded={isExpanded}\n                    onClick={() => setExpanded(!isExpanded)}\n                >\n                    {isExpanded ? 'Vis mindre' : 'Vis mer'}\n                </InlineExpandButton>\n            </Paragraph>\n\n            <Collapse\n                id=\"inline-expand-example-details\"\n                isOpen={isExpanded}\n                role=\"region\"\n            >\n                <div>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                    <Paragraph>\n                        Jeg samtykker til at selskapene i SpareBank 1 deler og\n                        benytter opplysningene om meg, slik at jeg kan få bedre\n                        og relevante tilbud. Jeg samtykker til at selskapene i\n                        SpareBank 1 deler og benytter opplysningene om meg, slik\n                        at jeg kan få bedre og relevante tilbud.\n                    </Paragraph>\n                </div>\n            </Collapse>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { InlineExpandButton } from '@sb1/ffe-buttons-react';\nimport Collapse from '@sb1/ffe-collapse-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["react","@sb1/ffe-buttons-react","@sb1/ffe-collapse-react","@sb1/ffe-core-react"],sourceFileName:"buttons/InlineExpandButton.jsx"}),ft={ButtonGroup:J.Z,ActionButton:$.Z,PrimaryButton:Q.Z,SecondaryButton:X.Z,TertiaryButton:q.Z},bt=Object.freeze({__proto__:null,scope:ft,code:'<>\n    <ButtonGroup thin={true}>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup thin={true}>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;',sourceCode:'import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from \'@sb1/ffe-buttons-react\';\n\n<>\n    <ButtonGroup thin={true}>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup thin={true}>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;\n',sourceImports:"import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ButtonGroup-thin.jsx"}),gt={TaskButton:Y.Z,ButtonGroup:J.Z,PlussIkon:m.Z},kt=Object.freeze({__proto__:null,scope:gt,code:"<ButtonGroup thin={true}>\n    <TaskButton icon={<PlussIkon />}>Legg til bruker</TaskButton>\n    <TaskButton icon={<PlussIkon />} condensed={true}>\n        Legg til bruker\n    </TaskButton>\n</ButtonGroup>;",sourceCode:"import { TaskButton, ButtonGroup } from '@sb1/ffe-buttons-react';\nimport { PlussIkon } from '@sb1/ffe-icons-react';\n\n<ButtonGroup thin={true}>\n    <TaskButton icon={<PlussIkon />}>Legg til bruker</TaskButton>\n    <TaskButton icon={<PlussIkon />} condensed={true}>\n        Legg til bruker\n    </TaskButton>\n</ButtonGroup>;\n",sourceImports:"import { TaskButton, ButtonGroup } from '@sb1/ffe-buttons-react';\nimport { PlussIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-buttons-react","@sb1/ffe-icons-react"],sourceFileName:"buttons/TaskButton.jsx"}),ht={SecondaryButton:X.Z,ButtonGroup:J.Z,BindersIkon:f.Z},Ct=Object.freeze({__proto__:null,scope:ht,code:'<ButtonGroup thin={true}>\n    <SecondaryButton onClick={f => f}>Secondary knapp</SecondaryButton>\n    <SecondaryButton leftIcon={<BindersIkon />} onClick={f => f}>\n        Secondary m/ ikon\n    </SecondaryButton>\n    <SecondaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Secondary knapp\n    </SecondaryButton>\n</ButtonGroup>;',sourceCode:"import { SecondaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';\nimport { BindersIkon } from '@sb1/ffe-icons-react';\n\n<ButtonGroup thin={true}>\n    <SecondaryButton onClick={f => f}>Secondary knapp</SecondaryButton>\n    <SecondaryButton leftIcon={<BindersIkon />} onClick={f => f}>\n        Secondary m/ ikon\n    </SecondaryButton>\n    <SecondaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage=\"Vennligst vent...\"\n    >\n        Secondary knapp\n    </SecondaryButton>\n</ButtonGroup>;\n",sourceImports:"import { SecondaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';\nimport { BindersIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-buttons-react","@sb1/ffe-icons-react"],sourceFileName:"buttons/SecondaryButton.jsx"}),It={ActionButton:$.Z,ButtonGroup:J.Z},St=Object.freeze({__proto__:null,scope:It,code:'<>\n    <div>\n        <ButtonGroup thin={true}>\n            <ActionButton onClick={f => f}>Action knapp</ActionButton>\n            <ActionButton\n                isLoading={true}\n                onClick={f => f}\n                ariaLoadingMessage="Vennligst vent..."\n            >\n                Action knapp\n            </ActionButton>\n        </ButtonGroup>\n    </div>\n    <div>\n        <ButtonGroup thin={true}>\n            <ActionButton onClick={f => f} ghost={true}>\n                Action knapp\n            </ActionButton>\n\n            <ActionButton\n                ariaLoadingMessage="Vennligst vent..."\n                isLoading={true}\n                ghost={true}\n                onClick={f => f}\n            >\n                Action knapp\n            </ActionButton>\n        </ButtonGroup>\n    </div>\n</>;',sourceCode:'import { ActionButton, ButtonGroup } from \'@sb1/ffe-buttons-react\';\n\n<>\n    <div>\n        <ButtonGroup thin={true}>\n            <ActionButton onClick={f => f}>Action knapp</ActionButton>\n            <ActionButton\n                isLoading={true}\n                onClick={f => f}\n                ariaLoadingMessage="Vennligst vent..."\n            >\n                Action knapp\n            </ActionButton>\n        </ButtonGroup>\n    </div>\n    <div>\n        <ButtonGroup thin={true}>\n            <ActionButton onClick={f => f} ghost={true}>\n                Action knapp\n            </ActionButton>\n\n            <ActionButton\n                ariaLoadingMessage="Vennligst vent..."\n                isLoading={true}\n                ghost={true}\n                onClick={f => f}\n            >\n                Action knapp\n            </ActionButton>\n        </ButtonGroup>\n    </div>\n</>;\n',sourceImports:"import { ActionButton, ButtonGroup } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ActionButton.jsx"}),Bt={ButtonGroup:J.Z,ShortcutButton:ee.Z},_t=Object.freeze({__proto__:null,scope:Bt,code:'<ButtonGroup thin={true}>\n    <ShortcutButton element="a" href="#shortcutbutton">\n        Snarvei\n    </ShortcutButton>\n</ButtonGroup>;',sourceCode:'import { ButtonGroup, ShortcutButton } from \'@sb1/ffe-buttons-react\';\n\n<ButtonGroup thin={true}>\n    <ShortcutButton element="a" href="#shortcutbutton">\n        Snarvei\n    </ShortcutButton>\n</ButtonGroup>;\n',sourceImports:"import { ButtonGroup, ShortcutButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ShortcutButton.jsx"}),vt={ButtonGroup:J.Z,ActionButton:$.Z,PrimaryButton:Q.Z,SecondaryButton:X.Z,TertiaryButton:q.Z},xt=Object.freeze({__proto__:null,scope:vt,code:'<>\n    <ButtonGroup inline={true}>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup inline={true}>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;',sourceCode:'import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from \'@sb1/ffe-buttons-react\';\n\n<>\n    <ButtonGroup inline={true}>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup inline={true}>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;\n',sourceImports:"import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ButtonGroup-inline.jsx"}),yt={PrimaryButton:Q.Z,ButtonGroup:J.Z},Tt=Object.freeze({__proto__:null,scope:yt,code:'<ButtonGroup thin={true}>\n    <PrimaryButton onClick={f => f}>Primary knapp</PrimaryButton>\n    <PrimaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Primary knapp\n    </PrimaryButton>\n</ButtonGroup>;',sourceCode:"import { PrimaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';\n\n<ButtonGroup thin={true}>\n    <PrimaryButton onClick={f => f}>Primary knapp</PrimaryButton>\n    <PrimaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage=\"Vennligst vent...\"\n    >\n        Primary knapp\n    </PrimaryButton>\n</ButtonGroup>;\n",sourceImports:"import { PrimaryButton, ButtonGroup } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/PrimaryButton.jsx"}),Nt={ButtonGroup:J.Z,ActionButton:$.Z,PrimaryButton:Q.Z,SecondaryButton:X.Z,TertiaryButton:q.Z},Gt=Object.freeze({__proto__:null,scope:Nt,code:'<>\n    <ButtonGroup>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;',sourceCode:'import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from \'@sb1/ffe-buttons-react\';\n\n<>\n    <ButtonGroup>\n        <ActionButton>Neste</ActionButton>\n        <ActionButton element="a" href="#buttongroup">\n            Lenke\n        </ActionButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n    <ButtonGroup>\n        <PrimaryButton>Neste</PrimaryButton>\n        <PrimaryButton element="a" href="#buttongroup">\n            Lenke\n        </PrimaryButton>\n        <SecondaryButton>Avbryt</SecondaryButton>\n        <SecondaryButton element="a" href="#buttongroup">\n            Lenke\n        </SecondaryButton>\n        <TertiaryButton>Hopp over</TertiaryButton>\n        <TertiaryButton element="a" href="#buttongroup">\n            Lenke\n        </TertiaryButton>\n    </ButtonGroup>\n</>;\n',sourceImports:"import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n    TertiaryButton,\n} from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ButtonGroup.jsx"}),Dt={BackButton:ne.Z},Mt=Object.freeze({__proto__:null,scope:Dt,code:"<BackButton onClick={f => f}>Tilbake</BackButton>;",sourceCode:"import { BackButton } from '@sb1/ffe-buttons-react';\n\n<BackButton onClick={f => f}>Tilbake</BackButton>;\n",sourceImports:"import { BackButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/BackButton.jsx"}),Lt={ButtonGroup:J.Z,ActionButton:$.Z,PrimaryButton:Q.Z,SecondaryButton:X.Z},wt=Object.freeze({__proto__:null,scope:Lt,code:'<ButtonGroup>\n    <ActionButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Action knapp\n    </ActionButton>\n    <PrimaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Primary knapp\n    </PrimaryButton>\n    <SecondaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Secondary knapp\n    </SecondaryButton>\n</ButtonGroup>;',sourceCode:'import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n} from \'@sb1/ffe-buttons-react\';\n\n<ButtonGroup>\n    <ActionButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Action knapp\n    </ActionButton>\n    <PrimaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Primary knapp\n    </PrimaryButton>\n    <SecondaryButton\n        isLoading={true}\n        onClick={f => f}\n        ariaLoadingMessage="Vennligst vent..."\n    >\n        Secondary knapp\n    </SecondaryButton>\n</ButtonGroup>;\n',sourceImports:"import {\n    ButtonGroup,\n    ActionButton,\n    PrimaryButton,\n    SecondaryButton,\n} from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-buttons-react"],sourceFileName:"buttons/ariaLoadingMessage.jsx"}),Rt={Input:oe.Z,Label:re.Z},jt=Object.freeze({__proto__:null,scope:Rt,code:'<>\n    <Label htmlFor="input-first-name">Fornavn</Label>\n    <Input id="input-first-name" />\n</>;',sourceCode:'import { Input, Label } from \'@sb1/ffe-form-react\';\n\n<>\n    <Label htmlFor="input-first-name">Fornavn</Label>\n    <Input id="input-first-name" />\n</>;\n',sourceImports:"import { Input, Label } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Input.jsx"}),Pt={TextArea:ae.Z,ButtonGroup:J.Z,PrimaryButton:Q.Z},At=Object.freeze({__proto__:null,scope:Pt,code:'class Example extends React.Component {\n    constructor() {\n        super();\n        this.inputRef = React.createRef();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.inputRef.current.focus();\n    }\n    render() {\n        return (\n            <>\n                <TextArea\n                    ref={this.inputRef}\n                    placeholder="Trykk på knappen for fokus"\n                />\n                <ButtonGroup>\n                    <PrimaryButton onClick={this.handleClick}>\n                        Klikk for å fokusere input\n                    </PrimaryButton>\n                </ButtonGroup>\n            </>\n        );\n    }\n}',sourceCode:"import { TextArea } from '@sb1/ffe-form-react';\nimport { ButtonGroup, PrimaryButton } from '@sb1/ffe-buttons-react';\n\nclass Example extends React.Component {\n    constructor() {\n        super();\n        this.inputRef = React.createRef();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.inputRef.current.focus();\n    }\n    render() {\n        return (\n            <>\n                <TextArea\n                    ref={this.inputRef}\n                    placeholder=\"Trykk på knappen for fokus\"\n                />\n                <ButtonGroup>\n                    <PrimaryButton onClick={this.handleClick}>\n                        Klikk for å fokusere input\n                    </PrimaryButton>\n                </ButtonGroup>\n            </>\n        );\n    }\n}\n",sourceImports:"import { TextArea } from '@sb1/ffe-form-react';\nimport { ButtonGroup, PrimaryButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/TextArea-ref.jsx"}),Ot={InputGroup:se.Z,Input:oe.Z,ErrorFieldMessage:ie.Z},Et=Object.freeze({__proto__:null,scope:Ot,code:'<>\n    <InputGroup\n        label="Fornavn"\n        fieldMessage="Jeg er en string-fieldMessage som gir feilmelding"\n    >\n        <Input\n            name="firstname"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label="Etternavn"\n        fieldMessage={\n            <ErrorFieldMessage>\n                Jeg er en ErrorFieldMessage-fieldMessage som gir feilmelding\n            </ErrorFieldMessage>\n        }\n    >\n        <Input\n            name="lastname"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label="Telefonnummer"\n        fieldMessage={\n            <div>Jeg er en div-fieldMessage som ikke gir feilmelding</div>\n        }\n    >\n        <Input\n            name="phone"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n</>;',sourceCode:"import { InputGroup, Input, ErrorFieldMessage } from '@sb1/ffe-form-react';\n\n<>\n    <InputGroup\n        label=\"Fornavn\"\n        fieldMessage=\"Jeg er en string-fieldMessage som gir feilmelding\"\n    >\n        <Input\n            name=\"firstname\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label=\"Etternavn\"\n        fieldMessage={\n            <ErrorFieldMessage>\n                Jeg er en ErrorFieldMessage-fieldMessage som gir feilmelding\n            </ErrorFieldMessage>\n        }\n    >\n        <Input\n            name=\"lastname\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label=\"Telefonnummer\"\n        fieldMessage={\n            <div>Jeg er en div-fieldMessage som ikke gir feilmelding</div>\n        }\n    >\n        <Input\n            name=\"phone\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n</>;\n",sourceImports:"import { InputGroup, Input, ErrorFieldMessage } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/InputGroup-fieldMessage.jsx"}),Ft={useState:o.useState,RadioBlock:ce.Z,RadioButtonInputGroup:le.Z},zt=Object.freeze({__proto__:null,scope:Ft,code:'() => {\n    const [selected, setSelected] = useState(\'you\');\n\n    return (\n        <RadioButtonInputGroup\n            label="Hvem eier bilen du skal forsikre?"\n            name="owner"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioBlock {...inputProps} label="Du" value="you" />\n                    <RadioBlock\n                        {...inputProps}\n                        label="Ektefelle, samboer eller registrert partner"\n                        showChildren={true}\n                        value="partner"\n                    >\n                        Da må ektefelle, samboer eller registrert partner skrive\n                        inn detaljene sine under.\n                    </RadioBlock>\n                    <RadioBlock\n                        {...inputProps}\n                        label="Leasingselskap"\n                        value="leasing-company"\n                    >\n                        Da må leasingselskapet gi deg noen detaljer som du må\n                        skrive inn under.\n                    </RadioBlock>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioBlock, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState(\'you\');\n\n    return (\n        <RadioButtonInputGroup\n            label="Hvem eier bilen du skal forsikre?"\n            name="owner"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioBlock {...inputProps} label="Du" value="you" />\n                    <RadioBlock\n                        {...inputProps}\n                        label="Ektefelle, samboer eller registrert partner"\n                        showChildren={true}\n                        value="partner"\n                    >\n                        Da må ektefelle, samboer eller registrert partner skrive\n                        inn detaljene sine under.\n                    </RadioBlock>\n                    <RadioBlock\n                        {...inputProps}\n                        label="Leasingselskap"\n                        value="leasing-company"\n                    >\n                        Da må leasingselskapet gi deg noen detaljer som du må\n                        skrive inn under.\n                    </RadioBlock>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioBlock, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioBlock.jsx"}),Zt={InfoFieldMessage:ue.Z},Vt=Object.freeze({__proto__:null,scope:Zt,code:"<InfoFieldMessage>Husk på det her</InfoFieldMessage>;",sourceCode:"import { InfoFieldMessage } from '@sb1/ffe-form-react';\n\n<InfoFieldMessage>Husk på det her</InfoFieldMessage>;\n",sourceImports:"import { InfoFieldMessage } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/InfoFieldMessage.jsx"}),Ht={useState:o.useState,RadioSwitch:de.Z,RadioButtonInputGroup:le.Z},Ut=Object.freeze({__proto__:null,scope:Ht,code:'() => {\n    const [selected, setSelected] = useState();\n    const fieldMessageLeasing =\n        \'Bilen kan ikke være leaset hvis du har billån med pant i bilen.\';\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroupWithFieldMessage"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n            fieldMessage="Du må gjøre et valg"\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="ja"\n                    rightLabel="Nei"\n                    rightValue="nei"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioSwitch, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState();\n    const fieldMessageLeasing =\n        \'Bilen kan ikke være leaset hvis du har billån med pant i bilen.\';\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroupWithFieldMessage"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n            fieldMessage="Du må gjøre et valg"\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="ja"\n                    rightLabel="Nei"\n                    rightValue="nei"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioSwitch, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioSwitch-fieldMessageUnselected.jsx"}),Kt={useState:o.useState,RadioButton:pe.Z,RadioButtonInputGroup:le.Z},qt=Object.freeze({__proto__:null,scope:Kt,code:'() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Hvordan vil du betale?"\n            name="invoice"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton\n                        {...inputProps}\n                        tooltip="Månedlig fakturering er enklest å planlegge for. Passer for deg som liker å planlegge litt etter hvert."\n                        value="monthly"\n                    >\n                        Månedlig fakturering\n                    </RadioButton>\n                    <RadioButton\n                        {...inputProps}\n                        tooltip="Årlig fakturering er for deg som har stell på økonomien. Her sparer du mest penger!"\n                        value="annually"\n                    >\n                        Årlig fakturering\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioButton, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Hvordan vil du betale?"\n            name="invoice"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton\n                        {...inputProps}\n                        tooltip="Månedlig fakturering er enklest å planlegge for. Passer for deg som liker å planlegge litt etter hvert."\n                        value="monthly"\n                    >\n                        Månedlig fakturering\n                    </RadioButton>\n                    <RadioButton\n                        {...inputProps}\n                        tooltip="Årlig fakturering er for deg som har stell på økonomien. Her sparer du mest penger!"\n                        value="annually"\n                    >\n                        Årlig fakturering\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioButton, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioButton-tooltip.jsx"}),Jt={useState:o.useState,RadioButton:pe.Z,RadioButtonInputGroup:le.Z},Wt=Object.freeze({__proto__:null,scope:Jt,code:'() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Kundetype"\n            name="customerType"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton {...inputProps} value="bank">\n                        Bankkunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="insurance">\n                        Forsikringskunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="both">\n                        Totalkunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="none">\n                        Ikke kunde enda\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioButton, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Kundetype"\n            name="customerType"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton {...inputProps} value="bank">\n                        Bankkunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="insurance">\n                        Forsikringskunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="both">\n                        Totalkunde\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="none">\n                        Ikke kunde enda\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioButton, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioButton.jsx"}),$t={useState:o.useState,Datepicker:r.ZP,Dropdown:ke.Z,InputGroup:se.Z,Checkbox:me.Z,Input:oe.Z,TextArea:ae.Z,SecondaryButton:X.Z},Qt=Object.freeze({__proto__:null,scope:$t,code:'() => {\n    const [showErrors, setShowErrors] = useState(false);\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <InputGroup\n                label="Telefonnummer"\n                tooltip="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n                fieldMessage={showErrors ? \'Ugyldig telefonnummer\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <Input\n                            type="tel"\n                            name="mobile"\n                            onChange={e =>\n                                console.log(\'onChange\', e.target.value)\n                            }\n                            onBlur={e => console.log(\'onBlur\', e.target.value)}\n                            {...inputProps}\n                        />\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </InputGroup>\n\n            <InputGroup\n                label="E-postadresse"\n                fieldMessage={showErrors ? \'Ugyldig e-postadresse\' : null}\n            >\n                <Input />\n            </InputGroup>\n\n            <InputGroup\n                label="Måned"\n                fieldMessage={showErrors ? \'Du må velge måned\' : null}\n            >\n                <Dropdown defaultValue="placeholder">\n                    <option value="placeholder" disabled>\n                        Velg måned\n                    </option>\n                    <option value="jan">Januar</option>\n                    <option value="feb">Februar</option>\n                    <option value="mar">Mars</option>\n                </Dropdown>\n            </InputGroup>\n\n            <InputGroup\n                label="Fritekst"\n                fieldMessage={showErrors ? \'Du må skrive noe lurt\' : null}\n            >\n                <TextArea rows={4} />\n            </InputGroup>\n\n            <InputGroup\n                label="Dato"\n                fieldMessage={showErrors ? \'Feil dato\' : null}\n            >\n                <Datepicker\n                    language="nb"\n                    maxDate="31.12.2016"\n                    minDate="01.01.2016"\n                    onChange={f => f}\n                    value={\'01.01.2016\'}\n                />\n            </InputGroup>\n\n            <InputGroup fieldMessage={showErrors ? \'Ooops\' : null}>\n                <Checkbox name="check">Kryssboks</Checkbox>\n            </InputGroup>\n        </>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport Datepicker from \'@sb1/ffe-datepicker-react\';\nimport Dropdown from \'@sb1/ffe-dropdown-react\';\nimport { InputGroup, Checkbox, Input, TextArea } from \'@sb1/ffe-form-react\';\nimport { SecondaryButton } from \'@sb1/ffe-buttons-react\';\n\n() => {\n    const [showErrors, setShowErrors] = useState(false);\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <InputGroup\n                label="Telefonnummer"\n                tooltip="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n                fieldMessage={showErrors ? \'Ugyldig telefonnummer\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <Input\n                            type="tel"\n                            name="mobile"\n                            onChange={e =>\n                                console.log(\'onChange\', e.target.value)\n                            }\n                            onBlur={e => console.log(\'onBlur\', e.target.value)}\n                            {...inputProps}\n                        />\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </InputGroup>\n\n            <InputGroup\n                label="E-postadresse"\n                fieldMessage={showErrors ? \'Ugyldig e-postadresse\' : null}\n            >\n                <Input />\n            </InputGroup>\n\n            <InputGroup\n                label="Måned"\n                fieldMessage={showErrors ? \'Du må velge måned\' : null}\n            >\n                <Dropdown defaultValue="placeholder">\n                    <option value="placeholder" disabled>\n                        Velg måned\n                    </option>\n                    <option value="jan">Januar</option>\n                    <option value="feb">Februar</option>\n                    <option value="mar">Mars</option>\n                </Dropdown>\n            </InputGroup>\n\n            <InputGroup\n                label="Fritekst"\n                fieldMessage={showErrors ? \'Du må skrive noe lurt\' : null}\n            >\n                <TextArea rows={4} />\n            </InputGroup>\n\n            <InputGroup\n                label="Dato"\n                fieldMessage={showErrors ? \'Feil dato\' : null}\n            >\n                <Datepicker\n                    language="nb"\n                    maxDate="31.12.2016"\n                    minDate="01.01.2016"\n                    onChange={f => f}\n                    value={\'01.01.2016\'}\n                />\n            </InputGroup>\n\n            <InputGroup fieldMessage={showErrors ? \'Ooops\' : null}>\n                <Checkbox name="check">Kryssboks</Checkbox>\n            </InputGroup>\n        </>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { InputGroup, Checkbox, Input, TextArea } from '@sb1/ffe-form-react';\nimport { SecondaryButton } from '@sb1/ffe-buttons-react';",dependencies:["react","@sb1/ffe-datepicker-react","@sb1/ffe-dropdown-react","@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/InputGroup.jsx"}),Xt={Checkbox:me.Z},Yt=Object.freeze({__proto__:null,scope:Xt,code:"<Checkbox\n    name=\"clicked\"\n    onChange={e => alert(`Nå er jeg ${e.target.checked ? 'på' : 'av'}!`)}\n>\n    Trykk for å lære litt om meg\n</Checkbox>;",sourceCode:"import { Checkbox } from '@sb1/ffe-form-react';\n\n<Checkbox\n    name=\"clicked\"\n    onChange={e => alert(`Nå er jeg ${e.target.checked ? 'på' : 'av'}!`)}\n>\n    Trykk for å lære litt om meg\n</Checkbox>;\n",sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox-onChange.jsx"}),eo={Checkbox:me.Z},no=Object.freeze({__proto__:null,scope:eo,code:'<fieldset className="ffe-fieldset">\n    <legend className="ffe-form-label ffe-form-label--block">\n        Hvilke aviser leser du?\n    </legend>\n    <Checkbox name="newspapers" value="vg">\n        VG\n    </Checkbox>\n    <Checkbox name="newspapers" value="dagbladet">\n        Dagbladet\n    </Checkbox>\n    <Checkbox name="newspapers" value="aftenposten">\n        Aftenposten\n    </Checkbox>\n</fieldset>;',sourceCode:'import { Checkbox } from \'@sb1/ffe-form-react\';\n\n<fieldset className="ffe-fieldset">\n    <legend className="ffe-form-label ffe-form-label--block">\n        Hvilke aviser leser du?\n    </legend>\n    <Checkbox name="newspapers" value="vg">\n        VG\n    </Checkbox>\n    <Checkbox name="newspapers" value="dagbladet">\n        Dagbladet\n    </Checkbox>\n    <Checkbox name="newspapers" value="aftenposten">\n        Aftenposten\n    </Checkbox>\n</fieldset>;\n',sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox.jsx"}),to={useState:o.useState,Datepicker:r.ZP,Dropdown:ke.Z,InputGroup:se.Z,Input:oe.Z,TextArea:ae.Z,Checkbox:me.Z,SecondaryButton:X.Z},oo=Object.freeze({__proto__:null,scope:to,code:'() => {\n    const [showErrors, setShowErrors] = useState(false);\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <InputGroup\n                extraMargin={false}\n                label="Telefonnummer"\n                tooltip="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n                fieldMessage={showErrors ? \'Ugyldig telefonnummer\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <Input\n                            type="tel"\n                            name="mobile"\n                            onChange={e =>\n                                console.log(\'onChange\', e.target.value)\n                            }\n                            onBlur={e => console.log(\'onBlur\', e.target.value)}\n                            {...inputProps}\n                        />\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="E-postadresse"\n                fieldMessage={showErrors ? \'Ugyldig e-postadresse\' : null}\n            >\n                <Input />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Måned"\n                fieldMessage={showErrors ? \'Du må velge måned\' : null}\n            >\n                <Dropdown defaultValue="placeholder">\n                    <option value="placeholder" disabled>\n                        Velg måned\n                    </option>\n                    <option value="jan">Januar</option>\n                    <option value="feb">Februar</option>\n                    <option value="mar">Mars</option>\n                </Dropdown>\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Fritekst"\n                fieldMessage={showErrors ? \'Du må skrive noe lurt\' : null}\n            >\n                <TextArea rows={4} />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Dato"\n                fieldMessage={showErrors ? \'Feil dato\' : null}\n            >\n                <Datepicker\n                    language="nb"\n                    maxDate="31.12.2016"\n                    minDate="01.01.2016"\n                    onChange={f => f}\n                    value={\'01.01.2016\'}\n                />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                fieldMessage={showErrors ? \'Ooops\' : null}\n            >\n                <Checkbox name="check">Kryssboks</Checkbox>\n            </InputGroup>\n        </>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport Datepicker from \'@sb1/ffe-datepicker-react\';\nimport Dropdown from \'@sb1/ffe-dropdown-react\';\nimport { InputGroup, Input, TextArea, Checkbox } from \'@sb1/ffe-form-react\';\nimport { SecondaryButton } from \'@sb1/ffe-buttons-react\';\n\n() => {\n    const [showErrors, setShowErrors] = useState(false);\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <InputGroup\n                extraMargin={false}\n                label="Telefonnummer"\n                tooltip="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n                fieldMessage={showErrors ? \'Ugyldig telefonnummer\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <Input\n                            type="tel"\n                            name="mobile"\n                            onChange={e =>\n                                console.log(\'onChange\', e.target.value)\n                            }\n                            onBlur={e => console.log(\'onBlur\', e.target.value)}\n                            {...inputProps}\n                        />\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="E-postadresse"\n                fieldMessage={showErrors ? \'Ugyldig e-postadresse\' : null}\n            >\n                <Input />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Måned"\n                fieldMessage={showErrors ? \'Du må velge måned\' : null}\n            >\n                <Dropdown defaultValue="placeholder">\n                    <option value="placeholder" disabled>\n                        Velg måned\n                    </option>\n                    <option value="jan">Januar</option>\n                    <option value="feb">Februar</option>\n                    <option value="mar">Mars</option>\n                </Dropdown>\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Fritekst"\n                fieldMessage={showErrors ? \'Du må skrive noe lurt\' : null}\n            >\n                <TextArea rows={4} />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                label="Dato"\n                fieldMessage={showErrors ? \'Feil dato\' : null}\n            >\n                <Datepicker\n                    language="nb"\n                    maxDate="31.12.2016"\n                    minDate="01.01.2016"\n                    onChange={f => f}\n                    value={\'01.01.2016\'}\n                />\n            </InputGroup>\n\n            <InputGroup\n                extraMargin={false}\n                fieldMessage={showErrors ? \'Ooops\' : null}\n            >\n                <Checkbox name="check">Kryssboks</Checkbox>\n            </InputGroup>\n        </>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport Datepicker from '@sb1/ffe-datepicker-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { InputGroup, Input, TextArea, Checkbox } from '@sb1/ffe-form-react';\nimport { SecondaryButton } from '@sb1/ffe-buttons-react';",dependencies:["react","@sb1/ffe-datepicker-react","@sb1/ffe-dropdown-react","@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/InputGroup-extraMarginFalse.jsx"}),ro={InputGroup:se.Z,Input:oe.Z,ErrorFieldMessage:ie.Z},ao=Object.freeze({__proto__:null,scope:ro,code:'<>\n    <InputGroup\n        label="Fornavn"\n        fieldMessage="Jeg er en string-fieldMessage som gir feilmelding"\n    >\n        <Input\n            name="firstname"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label="Etternavn"\n        fieldMessage={\n            <ErrorFieldMessage>\n                Jeg er en ErrorFieldMessage-fieldMessage som gir feilmelding\n            </ErrorFieldMessage>\n        }\n    >\n        <Input\n            name="lastname"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label="Telefonnummer"\n        fieldMessage={\n            <div>Jeg er en div-fieldMessage som ikke gir feilmelding</div>\n        }\n    >\n        <Input\n            name="phone"\n            onChange={e => console.log(\'onChange\', e.target.value)}\n            onBlur={e => console.log(\'onBlur\', e.target.value)}\n        />\n    </InputGroup>\n</>;',sourceCode:"import { InputGroup, Input, ErrorFieldMessage } from '@sb1/ffe-form-react';\n\n<>\n    <InputGroup\n        label=\"Fornavn\"\n        fieldMessage=\"Jeg er en string-fieldMessage som gir feilmelding\"\n    >\n        <Input\n            name=\"firstname\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label=\"Etternavn\"\n        fieldMessage={\n            <ErrorFieldMessage>\n                Jeg er en ErrorFieldMessage-fieldMessage som gir feilmelding\n            </ErrorFieldMessage>\n        }\n    >\n        <Input\n            name=\"lastname\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n\n    <InputGroup\n        label=\"Telefonnummer\"\n        fieldMessage={\n            <div>Jeg er en div-fieldMessage som ikke gir feilmelding</div>\n        }\n    >\n        <Input\n            name=\"phone\"\n            onChange={e => console.log('onChange', e.target.value)}\n            onBlur={e => console.log('onBlur', e.target.value)}\n        />\n    </InputGroup>\n</>;\n",sourceImports:"import { InputGroup, Input, ErrorFieldMessage } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/InputGroup-multiChildren.jsx"}),so={PhoneNumber:fe.Z},io=Object.freeze({__proto__:null,scope:so,code:'<PhoneNumber\n    number=""\n    countryCode=""\n    countryCodeAndNumberFieldMessage="Både landkode og telefonnummer feltene er påkrevd"\n/>;',sourceCode:'import { PhoneNumber } from \'@sb1/ffe-form-react\';\n\n<PhoneNumber\n    number=""\n    countryCode=""\n    countryCodeAndNumberFieldMessage="Både landkode og telefonnummer feltene er påkrevd"\n/>;\n',sourceImports:"import { PhoneNumber } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/PhoneNumber-PhoneNumber-countryCode-invalid.jsx"}),co={Label:re.Z},lo=Object.freeze({__proto__:null,scope:co,code:'<Label htmlFor="e-post">E-post</Label>;',sourceCode:"import { Label } from '@sb1/ffe-form-react';\n\n<Label htmlFor=\"e-post\">E-post</Label>;\n",sourceImports:"import { Label } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Label.jsx"}),uo={useState:o.useState,RadioSwitch:de.Z,RadioButtonInputGroup:le.Z},po=Object.freeze({__proto__:null,scope:uo,code:'() => {\n    const [selected, setSelected] = useState(\'n\');\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroup"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="y"\n                    rightLabel="Nei"\n                    rightValue="n"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioSwitch, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState(\'n\');\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroup"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="y"\n                    rightLabel="Nei"\n                    rightValue="n"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioSwitch, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioSwitch-selectedValue.jsx"}),mo={Checkbox:me.Z},fo=Object.freeze({__proto__:null,scope:mo,code:'<Checkbox name="loves-ads" aria-invalid="true" checked={true} onChange={f => f}>\n    Ja, jeg vil gjerne motta reklame!\n</Checkbox>;',sourceCode:'import { Checkbox } from \'@sb1/ffe-form-react\';\n\n<Checkbox name="loves-ads" aria-invalid="true" checked={true} onChange={f => f}>\n    Ja, jeg vil gjerne motta reklame!\n</Checkbox>;\n',sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox-invalid.jsx"}),bo={SuccessFieldMessage:be.Z},go=Object.freeze({__proto__:null,scope:bo,code:"<SuccessFieldMessage>Hurra!</SuccessFieldMessage>;",sourceCode:"import { SuccessFieldMessage } from '@sb1/ffe-form-react';\n\n<SuccessFieldMessage>Hurra!</SuccessFieldMessage>;\n",sourceImports:"import { SuccessFieldMessage } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/SuccessFieldMessage.jsx"}),ko={PhoneNumber:fe.Z},ho=Object.freeze({__proto__:null,scope:ko,code:'<PhoneNumber number="123123123" />;',sourceCode:"import { PhoneNumber } from '@sb1/ffe-form-react';\n\n<PhoneNumber number=\"123123123\" />;\n",sourceImports:"import { PhoneNumber } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/PhoneNumber.jsx"}),Co={Checkbox:me.Z},Io=Object.freeze({__proto__:null,scope:Co,code:'<fieldset className="ffe-fieldset">\n    <legend className="ffe-form-label">Hva er du interessert i?</legend>\n    <Checkbox name="interests" value="sport" inline={false}>\n        Sport\n    </Checkbox>\n    <Checkbox name="interests" value="food" inline={false}>\n        Matlaging\n    </Checkbox>\n    <Checkbox name="interests" value="moon" inline={false}>\n        Månen\n    </Checkbox>\n</fieldset>;',sourceCode:'import { Checkbox } from \'@sb1/ffe-form-react\';\n\n<fieldset className="ffe-fieldset">\n    <legend className="ffe-form-label">Hva er du interessert i?</legend>\n    <Checkbox name="interests" value="sport" inline={false}>\n        Sport\n    </Checkbox>\n    <Checkbox name="interests" value="food" inline={false}>\n        Matlaging\n    </Checkbox>\n    <Checkbox name="interests" value="moon" inline={false}>\n        Månen\n    </Checkbox>\n</fieldset>;\n',sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox-inlineFalse.jsx"}),So={PhoneNumber:fe.Z},Bo=Object.freeze({__proto__:null,scope:So,code:'<PhoneNumber number="123123123" countryCode="" countryCodeFieldMessage="Dette feltet er påkrevd" />',sourceCode:'import { PhoneNumber } from \'@sb1/ffe-form-react\';\n\n<PhoneNumber number="123123123" countryCode="" countryCodeFieldMessage="Dette feltet er påkrevd" />\n',sourceImports:"import { PhoneNumber } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/PhoneNumber-countryCode-invalid.jsx"}),_o={InputGroup:se.Z,Input:oe.Z},vo=Object.freeze({__proto__:null,scope:_o,code:'<InputGroup\n    label="Telefonnummer"\n    description="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n>\n    <Input\n        type="tel"\n        name="mobile"\n        onChange={e => console.log(\'onChange\', e.target.value)}\n        onBlur={e => console.log(\'onBlur\', e.target.value)}\n    />\n</InputGroup>;',sourceCode:'import { InputGroup, Input } from \'@sb1/ffe-form-react\';\n\n<InputGroup\n    label="Telefonnummer"\n    description="Vi bruker telefonnummer for å sende deg kvittering på SMS"\n>\n    <Input\n        type="tel"\n        name="mobile"\n        onChange={e => console.log(\'onChange\', e.target.value)}\n        onBlur={e => console.log(\'onBlur\', e.target.value)}\n    />\n</InputGroup>;\n',sourceImports:"import { InputGroup, Input } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/InputGroup-description.jsx"}),xo={useState:o.useState,RadioButtonInputGroup:le.Z,RadioBlock:ce.Z,RadioSwitch:de.Z,RadioButton:pe.Z,Tooltip:ge.Z,SecondaryButton:X.Z},yo=Object.freeze({__proto__:null,scope:xo,code:'() => {\n    const [showErrors, setShowErrors] = useState(false);\n    const [selectedColor, setSelectedColor] = useState(\'red\');\n    const [selectedSmell, setSelectedSmell] = useState();\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Hva er din favorittfarge?"\n                inline={true}\n                name="color"\n                fieldMessage={showErrors ? \'Feil farge.\' : null}\n                tooltip={\n                    <Tooltip>\n                        Din favorittfarge er viktig for oss. Vår er blå!\n                    </Tooltip>\n                }\n                selectedValue={selectedColor}\n                onChange={e => setSelectedColor(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="red">\n                            Rød\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="blue">\n                            Blå\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="yellow">\n                            Gul\n                        </RadioButton>\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Hva er din favorittlukt?"\n                inline={true}\n                name="smell"\n                fieldMessage={showErrors ? \'Feil lukt.\' : null}\n                selectedValue={selectedSmell}\n                onChange={e => setSelectedSmell(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="grass">\n                            Gress\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="asphalt">\n                            Asfalt\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="pollen">\n                            Pollen\n                        </RadioButton>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                description="Du kan ikke velge begge"\n                label="Velg ja eller nei"\n                name="switch"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <RadioSwitch\n                        leftLabel="Ja"\n                        leftValue={true}\n                        rightLabel="Nei"\n                        rightValue={false}\n                        {...inputProps}\n                    />\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Velg ja eller nei"\n                name="block1"\n                selectedValue="yes"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <RadioBlock {...inputProps} label="Ja" value="yes" />\n                        <RadioBlock\n                            {...inputProps}\n                            label="Nei"\n                            showChildren={true}\n                            value="no"\n                        >\n                            Vil ikke!\n                        </RadioBlock>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n        </>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport {\n    RadioButtonInputGroup,\n    RadioBlock,\n    RadioSwitch,\n    RadioButton,\n    Tooltip,\n} from \'@sb1/ffe-form-react\';\nimport { SecondaryButton } from \'@sb1/ffe-buttons-react\';\n\n() => {\n    const [showErrors, setShowErrors] = useState(false);\n    const [selectedColor, setSelectedColor] = useState(\'red\');\n    const [selectedSmell, setSelectedSmell] = useState();\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Hva er din favorittfarge?"\n                inline={true}\n                name="color"\n                fieldMessage={showErrors ? \'Feil farge.\' : null}\n                tooltip={\n                    <Tooltip>\n                        Din favorittfarge er viktig for oss. Vår er blå!\n                    </Tooltip>\n                }\n                selectedValue={selectedColor}\n                onChange={e => setSelectedColor(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="red">\n                            Rød\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="blue">\n                            Blå\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="yellow">\n                            Gul\n                        </RadioButton>\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Hva er din favorittlukt?"\n                inline={true}\n                name="smell"\n                fieldMessage={showErrors ? \'Feil lukt.\' : null}\n                selectedValue={selectedSmell}\n                onChange={e => setSelectedSmell(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="grass">\n                            Gress\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="asphalt">\n                            Asfalt\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="pollen">\n                            Pollen\n                        </RadioButton>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                description="Du kan ikke velge begge"\n                label="Velg ja eller nei"\n                name="switch"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <RadioSwitch\n                        leftLabel="Ja"\n                        leftValue={true}\n                        rightLabel="Nei"\n                        rightValue={false}\n                        {...inputProps}\n                    />\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                extraMargin={false}\n                label="Velg ja eller nei"\n                name="block1"\n                selectedValue="yes"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <RadioBlock {...inputProps} label="Ja" value="yes" />\n                        <RadioBlock\n                            {...inputProps}\n                            label="Nei"\n                            showChildren={true}\n                            value="no"\n                        >\n                            Vil ikke!\n                        </RadioBlock>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n        </>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport {\n    RadioButtonInputGroup,\n    RadioBlock,\n    RadioSwitch,\n    RadioButton,\n    Tooltip,\n} from '@sb1/ffe-form-react';\nimport { SecondaryButton } from '@sb1/ffe-buttons-react';",dependencies:["react","@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/RadioButtonInputGroup-extraMarginFalse.jsx"}),To={useState:o.useState,RadioSwitch:de.Z,RadioButtonInputGroup:le.Z},No=Object.freeze({__proto__:null,scope:To,code:'() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroup"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="true"\n                    rightLabel="Nei"\n                    rightValue="false"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioSwitch, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            label="Vil bilen bli kjørt av sjåfører under 23 år?"\n            tooltip="Unge sjåfører har en statistisk høyere sjanse for å bulke bilen."\n            name="radioButtonInputGroup"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="true"\n                    rightLabel="Nei"\n                    rightValue="false"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioSwitch, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioSwitch.jsx"}),Go={TextArea:ae.Z,Label:re.Z},Do=Object.freeze({__proto__:null,scope:Go,code:'<>\n    <Label htmlFor="textarea-example">Beskriv skaden</Label>\n    <TextArea\n        defaultValue="Dette er et tekstfelt for lengre tekster."\n        id="textarea-example"\n        rows="8"\n    />\n</>;',sourceCode:'import { TextArea, Label } from \'@sb1/ffe-form-react\';\n\n<>\n    <Label htmlFor="textarea-example">Beskriv skaden</Label>\n    <TextArea\n        defaultValue="Dette er et tekstfelt for lengre tekster."\n        id="textarea-example"\n        rows="8"\n    />\n</>;\n',sourceImports:"import { TextArea, Label } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/TextArea.jsx"}),Mo={useState:o.useState,Tooltip:ge.Z},Lo=Object.freeze({__proto__:null,scope:Mo,code:'() => {\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <Tooltip\n                aria-controls="tooltip-text"\n                onClick={() => setOpen(!open)}\n            />\n            <div hidden={open} id="tooltip-text">\n                Titt tei!\n            </div>\n        </>\n    );\n};',sourceCode:"import { useState } from 'react';\nimport { Tooltip } from '@sb1/ffe-form-react';\n\n() => {\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <Tooltip\n                aria-controls=\"tooltip-text\"\n                onClick={() => setOpen(!open)}\n            />\n            <div hidden={open} id=\"tooltip-text\">\n                Titt tei!\n            </div>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { Tooltip } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/Tooltip-external.jsx"}),wo={Checkbox:me.Z},Ro=Object.freeze({__proto__:null,scope:wo,code:'<Checkbox\n    defaultChecked={true}\n    aria-label="Jeg har en ingen label"\n    hiddenLabel={true}\n    inline={false}\n/>;',sourceCode:"import { Checkbox } from '@sb1/ffe-form-react';\n\n<Checkbox\n    defaultChecked={true}\n    aria-label=\"Jeg har en ingen label\"\n    hiddenLabel={true}\n    inline={false}\n/>;\n",sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox-hiddenLabel.jsx"}),jo={ErrorFieldMessage:ie.Z},Po=Object.freeze({__proto__:null,scope:jo,code:"<ErrorFieldMessage>Noe er feil her</ErrorFieldMessage>;",sourceCode:"import { ErrorFieldMessage } from '@sb1/ffe-form-react';\n\n<ErrorFieldMessage>Noe er feil her</ErrorFieldMessage>;\n",sourceImports:"import { ErrorFieldMessage } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/ErrorFieldMessage.jsx"}),Ao={useState:o.useState,RadioSwitch:de.Z,RadioButtonInputGroup:le.Z},Oo=Object.freeze({__proto__:null,scope:Ao,code:'() => {\n    const [selected, setSelected] = useState(\'nei\');\n    const fieldMessageLeasing =\n        \'Bilen kan ikke være leaset hvis du har billån med pant i bilen.\';\n\n    return (\n        <RadioButtonInputGroup\n            label="Er bilen leaset?"\n            name="hasLeasing"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n            fieldMessage={fieldMessageLeasing}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="ja"\n                    rightLabel="Nei"\n                    rightValue="nei"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioSwitch, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState(\'nei\');\n    const fieldMessageLeasing =\n        \'Bilen kan ikke være leaset hvis du har billån med pant i bilen.\';\n\n    return (\n        <RadioButtonInputGroup\n            label="Er bilen leaset?"\n            name="hasLeasing"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n            fieldMessage={fieldMessageLeasing}\n        >\n            {inputProps => (\n                <RadioSwitch\n                    leftLabel="Ja"\n                    leftValue="ja"\n                    rightLabel="Nei"\n                    rightValue="nei"\n                    {...inputProps}\n                />\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioSwitch, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioSwitch-fieldMessage.jsx"}),Eo={useState:o.useState,RadioButton:pe.Z,RadioButtonInputGroup:le.Z},Fo=Object.freeze({__proto__:null,scope:Eo,code:'() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            inline={true}\n            label="Hva er din favorittfarge?"\n            name="favoriteColor"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton {...inputProps} value="red">\n                        Rød\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="blue">\n                        Blå\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="yellow">\n                        Gul\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { RadioButton, RadioButtonInputGroup } from \'@sb1/ffe-form-react\';\n\n() => {\n    const [selected, setSelected] = useState();\n\n    return (\n        <RadioButtonInputGroup\n            inline={true}\n            label="Hva er din favorittfarge?"\n            name="favoriteColor"\n            onChange={e => setSelected(e.target.value)}\n            selectedValue={selected}\n        >\n            {inputProps => (\n                <>\n                    <RadioButton {...inputProps} value="red">\n                        Rød\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="blue">\n                        Blå\n                    </RadioButton>\n                    <RadioButton {...inputProps} value="yellow">\n                        Gul\n                    </RadioButton>\n                </>\n            )}\n        </RadioButtonInputGroup>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { RadioButton, RadioButtonInputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-form-react"],sourceFileName:"form/RadioButton-inline.jsx"}),zo={Input:oe.Z,Paragraph:A.Z},Zo=Object.freeze({__proto__:null,scope:zo,code:"<Paragraph>\n    Jeg er{' '}\n    <Input\n        aria-label=\"Skriv inn alder\"\n        style={{ width: '47px' }}\n        textLike={true}\n    />{' '}\n    år gammel\n</Paragraph>;",sourceCode:"import { Input } from '@sb1/ffe-form-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<Paragraph>\n    Jeg er{' '}\n    <Input\n        aria-label=\"Skriv inn alder\"\n        style={{ width: '47px' }}\n        textLike={true}\n    />{' '}\n    år gammel\n</Paragraph>;\n",sourceImports:"import { Input } from '@sb1/ffe-form-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-core-react"],sourceFileName:"form/Input-textLike.jsx"}),Vo={PhoneNumber:fe.Z},Ho=Object.freeze({__proto__:null,scope:Vo,code:'<PhoneNumber number="" countryCode="47" numberFieldMessage="Dette feltet er påkrevd" />',sourceCode:'import { PhoneNumber } from \'@sb1/ffe-form-react\';\n\n<PhoneNumber number="" countryCode="47" numberFieldMessage="Dette feltet er påkrevd" />\n',sourceImports:"import { PhoneNumber } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/PhoneNumber-PhoneNumber-invalid.jsx"}),Uo={Checkbox:me.Z},Ko=Object.freeze({__proto__:null,scope:Uo,code:"<Checkbox>\n    {labelProps => (\n        <label htmlFor={labelProps.htmlFor} className={labelProps.className}>\n            Her benyttes render props\n        </label>\n    )}\n</Checkbox>;",sourceCode:"import { Checkbox } from '@sb1/ffe-form-react';\n\n<Checkbox>\n    {labelProps => (\n        <label htmlFor={labelProps.htmlFor} className={labelProps.className}>\n            Her benyttes render props\n        </label>\n    )}\n</Checkbox>;\n",sourceImports:"import { Checkbox } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Checkbox-renderProps.jsx"}),qo={Input:oe.Z,ButtonGroup:J.Z,PrimaryButton:Q.Z},Jo=Object.freeze({__proto__:null,scope:qo,code:'class Example extends React.Component {\n    constructor() {\n        super();\n        this.inputRef = React.createRef();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.inputRef.current.focus();\n    }\n    render() {\n        return (\n            <>\n                <Input ref={this.inputRef} placeholder="Trykk på knappen" />\n                <ButtonGroup>\n                    <PrimaryButton onClick={this.handleClick}>\n                        Klikk for å fokusere input\n                    </PrimaryButton>\n                </ButtonGroup>\n            </>\n        );\n    }\n}',sourceCode:"import { Input } from '@sb1/ffe-form-react';\nimport { ButtonGroup, PrimaryButton } from '@sb1/ffe-buttons-react';\n\nclass Example extends React.Component {\n    constructor() {\n        super();\n        this.inputRef = React.createRef();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.inputRef.current.focus();\n    }\n    render() {\n        return (\n            <>\n                <Input ref={this.inputRef} placeholder=\"Trykk på knappen\" />\n                <ButtonGroup>\n                    <PrimaryButton onClick={this.handleClick}>\n                        Klikk for å fokusere input\n                    </PrimaryButton>\n                </ButtonGroup>\n            </>\n        );\n    }\n}\n",sourceImports:"import { Input } from '@sb1/ffe-form-react';\nimport { ButtonGroup, PrimaryButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/Input-ref.jsx"}),Wo={useState:o.useState,RadioButtonInputGroup:le.Z,RadioBlock:ce.Z,RadioSwitch:de.Z,RadioButton:pe.Z,Tooltip:ge.Z,SecondaryButton:X.Z},$o=Object.freeze({__proto__:null,scope:Wo,code:'() => {\n    const [showErrors, setShowErrors] = useState(false);\n    const [selectedColor, setSelectedColor] = useState(\'red\');\n    const [selectedSmell, setSelectedSmell] = useState();\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <RadioButtonInputGroup\n                label="Hva er din favorittfarge?"\n                inline={true}\n                name="color"\n                fieldMessage={showErrors ? \'Feil farge.\' : null}\n                tooltip={\n                    <Tooltip>\n                        Din favorittfarge er viktig for oss. Vår er blå!\n                    </Tooltip>\n                }\n                selectedValue={selectedColor}\n                onChange={e => setSelectedColor(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="red">\n                            Rød\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="blue">\n                            Blå\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="yellow">\n                            Gul\n                        </RadioButton>\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                label="Hva er din favorittlukt?"\n                inline={true}\n                name="smell"\n                fieldMessage={showErrors ? \'Feil lukt.\' : null}\n                selectedValue={selectedSmell}\n                onChange={e => setSelectedSmell(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="grass">\n                            Gress\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="asphalt">\n                            Asfalt\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="pollen">\n                            Pollen\n                        </RadioButton>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                description="Du kan ikke velge begge"\n                label="Velg ja eller nei"\n                name="switch"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <RadioSwitch\n                        leftLabel="Ja"\n                        leftValue={true}\n                        rightLabel="Nei"\n                        rightValue={false}\n                        {...inputProps}\n                    />\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                label="Velg ja eller nei"\n                name="block1"\n                selectedValue="yes"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <RadioBlock {...inputProps} label="Ja" value="yes" />\n                        <RadioBlock\n                            {...inputProps}\n                            label="Nei"\n                            showChildren={true}\n                            value="no"\n                        >\n                            Vil ikke!\n                        </RadioBlock>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n        </>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport {\n    RadioButtonInputGroup,\n    RadioBlock,\n    RadioSwitch,\n    RadioButton,\n    Tooltip,\n} from \'@sb1/ffe-form-react\';\nimport { SecondaryButton } from \'@sb1/ffe-buttons-react\';\n\n() => {\n    const [showErrors, setShowErrors] = useState(false);\n    const [selectedColor, setSelectedColor] = useState(\'red\');\n    const [selectedSmell, setSelectedSmell] = useState();\n\n    return (\n        <>\n            <div className="ffe-button-group">\n                <SecondaryButton onClick={() => setShowErrors(!showErrors)}>\n                    Skru feilmeldinger av/på\n                </SecondaryButton>\n            </div>\n            <RadioButtonInputGroup\n                label="Hva er din favorittfarge?"\n                inline={true}\n                name="color"\n                fieldMessage={showErrors ? \'Feil farge.\' : null}\n                tooltip={\n                    <Tooltip>\n                        Din favorittfarge er viktig for oss. Vår er blå!\n                    </Tooltip>\n                }\n                selectedValue={selectedColor}\n                onChange={e => setSelectedColor(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="red">\n                            Rød\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="blue">\n                            Blå\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="yellow">\n                            Gul\n                        </RadioButton>\n                        <p>Ekstra innhold</p>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                label="Hva er din favorittlukt?"\n                inline={true}\n                name="smell"\n                fieldMessage={showErrors ? \'Feil lukt.\' : null}\n                selectedValue={selectedSmell}\n                onChange={e => setSelectedSmell(e.target.value)}\n            >\n                {inputProps => (\n                    <>\n                        <RadioButton {...inputProps} value="grass">\n                            Gress\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="asphalt">\n                            Asfalt\n                        </RadioButton>\n                        <RadioButton {...inputProps} value="pollen">\n                            Pollen\n                        </RadioButton>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                description="Du kan ikke velge begge"\n                label="Velg ja eller nei"\n                name="switch"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <RadioSwitch\n                        leftLabel="Ja"\n                        leftValue={true}\n                        rightLabel="Nei"\n                        rightValue={false}\n                        {...inputProps}\n                    />\n                )}\n            </RadioButtonInputGroup>\n\n            <RadioButtonInputGroup\n                label="Velg ja eller nei"\n                name="block1"\n                selectedValue="yes"\n                fieldMessage={showErrors ? \'Feil valg\' : null}\n            >\n                {inputProps => (\n                    <>\n                        <RadioBlock {...inputProps} label="Ja" value="yes" />\n                        <RadioBlock\n                            {...inputProps}\n                            label="Nei"\n                            showChildren={true}\n                            value="no"\n                        >\n                            Vil ikke!\n                        </RadioBlock>\n                    </>\n                )}\n            </RadioButtonInputGroup>\n        </>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport {\n    RadioButtonInputGroup,\n    RadioBlock,\n    RadioSwitch,\n    RadioButton,\n    Tooltip,\n} from '@sb1/ffe-form-react';\nimport { SecondaryButton } from '@sb1/ffe-buttons-react';",dependencies:["react","@sb1/ffe-form-react","@sb1/ffe-buttons-react"],sourceFileName:"form/RadioButtonInputGroup.jsx"}),Qo={Tooltip:ge.Z},Xo=Object.freeze({__proto__:null,scope:Qo,code:"<Tooltip>Dette er lurt å tenke på</Tooltip>;",sourceCode:"import { Tooltip } from '@sb1/ffe-form-react';\n\n<Tooltip>Dette er lurt å tenke på</Tooltip>;\n",sourceImports:"import { Tooltip } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-form-react"],sourceFileName:"form/Tooltip.jsx"}),Yo={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},er=Object.freeze({__proto__:null,scope:Yo,code:"() => {\n    const listWithThirtyThousandElements = new Array(30000)\n        .fill(null)\n        .map((_, i) => ({ organizationName: `Navn ${i}` }));\n\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName']}\n                dropdownList={listWithThirtyThousandElements}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName']}\n                locale=\"nb\"\n                highCapacity={true}\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const listWithThirtyThousandElements = new Array(30000)\n        .fill(null)\n        .map((_, i) => ({ organizationName: `Navn ${i}` }));\n\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName']}\n                dropdownList={listWithThirtyThousandElements}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName']}\n                locale=\"nb\"\n                highCapacity={true}\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable-highCapacity.jsx"}),nr={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},tr=Object.freeze({__proto__:null,scope:nr,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    },\n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(companies[2]);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                onChange={item => setSelectedOption({ item })}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n                selectedItem={selectedOption}\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    },\n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(companies[2]);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                onChange={item => setSelectedOption({ item })}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n                selectedItem={selectedOption}\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable-selectedItem.jsx"}),or={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},rr=Object.freeze({__proto__:null,scope:or,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable-2-attributes.jsx"}),ar={Dropdown:ke.Z,Label:re.Z},sr=Object.freeze({__proto__:null,scope:ar,code:'<>\n    <Label htmlFor="dropdown-example">Måned</Label>\n    <Dropdown id="dropdown-example">\n        <option value="jan">Januar</option>\n        <option value="feb">Februar</option>\n        <option value="mar">Mars</option>\n        <option value="apr">April</option>\n        <option value="mai">Mai</option>\n    </Dropdown>\n</>;',sourceCode:'import Dropdown from \'@sb1/ffe-dropdown-react\';\nimport { Label } from \'@sb1/ffe-form-react\';\n\n<>\n    <Label htmlFor="dropdown-example">Måned</Label>\n    <Dropdown id="dropdown-example">\n        <option value="jan">Januar</option>\n        <option value="feb">Februar</option>\n        <option value="mar">Mars</option>\n        <option value="apr">April</option>\n        <option value="mai">Mai</option>\n    </Dropdown>\n</>;\n',sourceImports:"import Dropdown from '@sb1/ffe-dropdown-react';\nimport { Label } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-dropdown-react","@sb1/ffe-form-react"],sourceFileName:"dropdown/Dropdown.jsx"}),ir={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState,SmallText:O.Z},cr=Object.freeze({__proto__:null,scope:ir,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    const CustomListElementBody = ({ item, isHighlighted }) => {\n        return (\n            <div\n                style={{\n                    padding: '8px',\n                    background: isHighlighted ? '#ff9100' : 'white',\n                }}\n            >\n                <div>{item.organizationName}</div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <SmallText>{item.organizationNumber}</SmallText>\n                    <SmallText>{item.quantityUnprocessedMessages} ulest</SmallText>\n                </div>\n            </div>\n        );\n    };\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                listElementBody={CustomListElementBody}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\nimport { SmallText } from '@sb1/ffe-core-react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    const CustomListElementBody = ({ item, isHighlighted }) => {\n        return (\n            <div\n                style={{\n                    padding: '8px',\n                    background: isHighlighted ? '#ff9100' : 'white',\n                }}\n            >\n                <div>{item.organizationName}</div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <SmallText>{item.organizationNumber}</SmallText>\n                    <SmallText>{item.quantityUnprocessedMessages} ulest</SmallText>\n                </div>\n            </div>\n        );\n    };\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                listElementBody={CustomListElementBody}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\nimport { SmallText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react","@sb1/ffe-core-react"],sourceFileName:"dropdown/Dropdown-searchable-customListElementBody.jsx"}),lr={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},ur=Object.freeze({__proto__:null,scope:lr,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }, \n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n    \n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    const cleanString = value => `${value}`.replace(/\\s/g, '').toLowerCase();\n    const searchMatcher = (inputValue, searchAttributes) => item => {\n        const cleanedInputValue = cleanString(inputValue);\n        return searchAttributes\n            .map(searchAttribute => cleanString(item[searchAttribute]))\n            .some(cleanedItemAttribute =>\n                cleanedItemAttribute.includes(cleanedInputValue),\n            );\n    };\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n                searchMatcher={searchMatcher}\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }, \n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n    \n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    const cleanString = value => `${value}`.replace(/\\s/g, '').toLowerCase();\n    const searchMatcher = (inputValue, searchAttributes) => item => {\n        const cleanedInputValue = cleanString(inputValue);\n        return searchAttributes\n            .map(searchAttribute => cleanString(item[searchAttribute]))\n            .some(cleanedItemAttribute =>\n                cleanedItemAttribute.includes(cleanedInputValue),\n            );\n    };\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n                searchMatcher={searchMatcher}\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable-customMatchFunction.jsx"}),dr={Dropdown:ke.Z,InputGroup:se.Z},pr=Object.freeze({__proto__:null,scope:dr,code:'<InputGroup label="Måned" fieldMessage="Du må velge måned">\n    <Dropdown defaultValue="placeholder">\n        <option value="placeholder" disabled>\n            Velg måned\n        </option>\n        <option value="jan">Januar</option>\n        <option value="feb">Februar</option>\n        <option value="mar">Mars</option>\n        <option value="apr">April</option>\n        <option value="mai">Mai</option>\n    </Dropdown>\n</InputGroup>;',sourceCode:'import Dropdown from \'@sb1/ffe-dropdown-react\';\nimport { InputGroup } from \'@sb1/ffe-form-react\';\n\n<InputGroup label="Måned" fieldMessage="Du må velge måned">\n    <Dropdown defaultValue="placeholder">\n        <option value="placeholder" disabled>\n            Velg måned\n        </option>\n        <option value="jan">Januar</option>\n        <option value="feb">Februar</option>\n        <option value="mar">Mars</option>\n        <option value="apr">April</option>\n        <option value="mai">Mai</option>\n    </Dropdown>\n</InputGroup>;\n',sourceImports:"import Dropdown from '@sb1/ffe-dropdown-react';\nimport { InputGroup } from '@sb1/ffe-form-react';",dependencies:["@sb1/ffe-dropdown-react","@sb1/ffe-form-react"],sourceFileName:"dropdown/Dropdown-invalid.jsx"}),mr={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},fr=Object.freeze({__proto__:null,scope:mr,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }, \n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n    \n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{\n                    text: 'Søket ga ingen treff',\n                    dropdownList: companies.slice(1, 4),\n                }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }, \n    {\n        organizationName: 'Kaffekoppen',\n        organizationNumber: '812602222',\n        quantityUnprocessedMessages: 8,\n    },\n    {\n        organizationName: 'Sats',\n        organizationNumber: '809602772',\n        quantityUnprocessedMessages: 2,\n    }];\n    \n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName', 'organizationNumber']}\n                dropdownList={companies}\n                noMatch={{\n                    text: 'Søket ga ingen treff',\n                    dropdownList: companies.slice(1, 4),\n                }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName', 'organizationNumber']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable-extraresults.jsx"}),br={InputGroup:se.Z,SearchableDropdown:he.Z,useState:o.useState},gr=Object.freeze({__proto__:null,scope:br,code:"() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceCode:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';\n\n() => {\n    const companies = [{\n        organizationName: 'Bedriften',\n        organizationNumber: '912602370',\n        quantityUnprocessedMessages: 5,\n    },\n    {\n        organizationName: 'Sønn & co',\n        organizationNumber: '812602372',\n        quantityUnprocessedMessages: 3,\n    },\n    {\n        organizationName: 'Beslag skytter',\n        organizationNumber: '812602552',\n        quantityUnprocessedMessages: 1,\n    }]\n    const labelId = 'labelId1';\n    const [selectedOption, setSelectedOption] = useState(null);\n    return (\n        <InputGroup label=\"Velg bedrift\" labelId={labelId}>\n            <SearchableDropdown\n                labelId={labelId}\n                inputProps={{ placeholder: 'Velg' }}\n                dropdownAttributes={['organizationName']}\n                dropdownList={companies}\n                noMatch={{ text: 'Søket ga ingen treff' }}\n                onChange={item => setSelectedOption(item)}\n                searchAttributes={['organizationName']}\n                locale=\"nb\"\n            />\n        </InputGroup>\n    );\n}",sourceImports:"import { InputGroup } from '@sb1/ffe-form-react';\nimport SearchableDropdown from '@sb1/ffe-searchable-dropdown-react';\nimport { useState } from 'react';",dependencies:["@sb1/ffe-form-react","@sb1/ffe-searchable-dropdown-react","react"],sourceFileName:"dropdown/Dropdown-searchable.jsx"}),kr={FileUpload:Ce.Z},hr=Object.freeze({__proto__:null,scope:kr,code:"<FileUpload\n    id=\"ffe-file-upload-example\"\n    label={'Velg filer'}\n    title={'Dokumentasjon'}\n    infoText={\n        'Det kan være vanskelig å estimere fremtiden, derfor kan du laste opp eventuelle filer som viser til fremtidig budsjett eller inntjening.'\n    }\n    infoSubText={\n        'Husk å ikke laste opp personsensitive opplysninger eller dokumenter som bedriften ikke vil dele.'\n    }\n    uploadTitle={'Dra filene hit'}\n    uploadMicroText={'Eller'}\n    uploadSubText={'PDF-filer, maks 50 MB'}\n    files={{}}\n    cancelText={'Avbryt'}\n    deleteText={'Slett'}\n    onFileDeleted={() => {}}\n    onFilesSelected={() => {}}\n    onFilesDropped={() => {}}\n    multiple\n/>;",sourceCode:"import FileUpload from '@sb1/ffe-file-upload-react';\n\n<FileUpload\n    id=\"ffe-file-upload-example\"\n    label={'Velg filer'}\n    title={'Dokumentasjon'}\n    infoText={\n        'Det kan være vanskelig å estimere fremtiden, derfor kan du laste opp eventuelle filer som viser til fremtidig budsjett eller inntjening.'\n    }\n    infoSubText={\n        'Husk å ikke laste opp personsensitive opplysninger eller dokumenter som bedriften ikke vil dele.'\n    }\n    uploadTitle={'Dra filene hit'}\n    uploadMicroText={'Eller'}\n    uploadSubText={'PDF-filer, maks 50 MB'}\n    files={{}}\n    cancelText={'Avbryt'}\n    deleteText={'Slett'}\n    onFileDeleted={() => {}}\n    onFilesSelected={() => {}}\n    onFilesDropped={() => {}}\n    multiple\n/>;\n",sourceImports:"import FileUpload from '@sb1/ffe-file-upload-react';",dependencies:["@sb1/ffe-file-upload-react"],sourceFileName:"file-upload/FileUpload.jsx"}),Cr={useState:o.useState,AccountSelector:Ie.Z,InputGroup:se.Z},Ir=Object.freeze({__proto__:null,scope:Cr,code:"() => {\n    const label3 = 'label3';\n    const [selectedAccount, setSelectedAccount] = useState(null);\n\n    return (\n    <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label3}>\n        <AccountSelector\n            accounts={[\n                {\n                    accountNumber: '1234 56 789101',\n                    name: 'Brukskonto',\n                    currencyCode: 'NOK',\n                    balance: 1337,\n                },\n                {\n                    accountNumber: '1234 56 789102',\n                    name: 'Brukskonto2',\n                    currencyCode: 'NOK',\n                    balance: 13337,\n                },\n                {\n                    accountNumber: '2234 56 789102',\n                    name: 'Sparekonto1',\n                    currencyCode: 'NOK',\n                    balance: 109236,\n                },\n                {\n                    accountNumber: '1253 47 789102',\n                    name: 'Sparekonto2',\n                    currencyCode: 'NOK',\n                    balance: 0,\n                },\n            ]}\n            id=\"account-selector-single\"\n            locale=\"nb\"\n            onAccountSelected={value => setSelectedAccount(value)}\n            onReset={() => setSelectedAccount(null)}\n            selectedAccount={selectedAccount}\n            formatAccountNumber={false}\n            labelId={label3}\n            ariaInvalid={false}\n        />\n    </InputGroup>);\n}",sourceCode:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\n\n() => {\n    const label3 = 'label3';\n    const [selectedAccount, setSelectedAccount] = useState(null);\n\n    return (\n    <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label3}>\n        <AccountSelector\n            accounts={[\n                {\n                    accountNumber: '1234 56 789101',\n                    name: 'Brukskonto',\n                    currencyCode: 'NOK',\n                    balance: 1337,\n                },\n                {\n                    accountNumber: '1234 56 789102',\n                    name: 'Brukskonto2',\n                    currencyCode: 'NOK',\n                    balance: 13337,\n                },\n                {\n                    accountNumber: '2234 56 789102',\n                    name: 'Sparekonto1',\n                    currencyCode: 'NOK',\n                    balance: 109236,\n                },\n                {\n                    accountNumber: '1253 47 789102',\n                    name: 'Sparekonto2',\n                    currencyCode: 'NOK',\n                    balance: 0,\n                },\n            ]}\n            id=\"account-selector-single\"\n            locale=\"nb\"\n            onAccountSelected={value => setSelectedAccount(value)}\n            onReset={() => setSelectedAccount(null)}\n            selectedAccount={selectedAccount}\n            formatAccountNumber={false}\n            labelId={label3}\n            ariaInvalid={false}\n        />\n    </InputGroup>);\n}",sourceImports:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react"],sourceFileName:"account-selector/AccountSelector-accountNumberFormatting-off.jsx"}),Sr={useState:o.useState,AccountSelector:Ie.Z,InputGroup:se.Z},Br=Object.freeze({__proto__:null,scope:Sr,code:"() => {\n    const [selectedAccount, setSelectedAccount] = useState(null);\n    const label2 = 'label2';\n\n    return (\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label2}>\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'EUR',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={value => setSelectedAccount(value)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                allowCustomAccount={true}\n                labelId={label2}\n                ariaInvalid={false}\n            />\n        </InputGroup>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\n\n() => {\n    const [selectedAccount, setSelectedAccount] = useState(null);\n    const label2 = 'label2';\n\n    return (\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label2}>\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'EUR',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={value => setSelectedAccount(value)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                allowCustomAccount={true}\n                labelId={label2}\n                ariaInvalid={false}\n            />\n        </InputGroup>\n    );\n};",sourceImports:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react"],sourceFileName:"account-selector/AccountSelector-allowCustomAccount.jsx"}),_r={useState:o.useState,AccountSelectorMulti:Se.Z,Label:re.Z},vr=Object.freeze({__proto__:null,scope:_r,code:"() => {\n    const [value, setValue] = useState();\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n    const accounts = [\n        {\n            accountNumber: '123456789101',\n            name: 'Brukskonto',\n            currencyCode: 'NOK',\n            balance: 1337,\n        },\n        {\n            accountNumber: '123456789102',\n            name: 'Sparekonto',\n            currencyCode: 'NOK',\n            balance: 13337,\n        },\n    ];\n\n    const onAccountSelected = acc => {\n        const filteredAccounts = selectedAccounts.filter(\n            a => a.accountNumber !== acc.accountNumber,\n        );\n\n        const accountAlreadySelectedAndShouldBeRemoved =\n            filteredAccounts.length !== selectedAccounts.length;\n\n        if (accountAlreadySelectedAndShouldBeRemoved) {\n            setSelectedAccounts(filteredAccounts);\n        } else {\n            setSelectedAccounts([...selectedAccounts, acc]);\n        }\n    };\n\n    return (\n        <>\n            <Label htmlFor=\"account-selector-multi\">Velg konto</Label>\n            <AccountSelectorMulti\n                id=\"account-selector-multi\"\n                locale=\"nb\"\n                accounts={accounts}\n                onAccountSelected={onAccountSelected}\n                onBlur={f => f}\n                selectedAccounts={selectedAccounts}\n                value={value}\n            />\n        </>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { AccountSelectorMulti } from '@sb1/ffe-account-selector-react';\nimport { Label } from '@sb1/ffe-form-react';\n\n() => {\n    const [value, setValue] = useState();\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n    const accounts = [\n        {\n            accountNumber: '123456789101',\n            name: 'Brukskonto',\n            currencyCode: 'NOK',\n            balance: 1337,\n        },\n        {\n            accountNumber: '123456789102',\n            name: 'Sparekonto',\n            currencyCode: 'NOK',\n            balance: 13337,\n        },\n    ];\n\n    const onAccountSelected = acc => {\n        const filteredAccounts = selectedAccounts.filter(\n            a => a.accountNumber !== acc.accountNumber,\n        );\n\n        const accountAlreadySelectedAndShouldBeRemoved =\n            filteredAccounts.length !== selectedAccounts.length;\n\n        if (accountAlreadySelectedAndShouldBeRemoved) {\n            setSelectedAccounts(filteredAccounts);\n        } else {\n            setSelectedAccounts([...selectedAccounts, acc]);\n        }\n    };\n\n    return (\n        <>\n            <Label htmlFor=\"account-selector-multi\">Velg konto</Label>\n            <AccountSelectorMulti\n                id=\"account-selector-multi\"\n                locale=\"nb\"\n                accounts={accounts}\n                onAccountSelected={onAccountSelected}\n                onBlur={f => f}\n                selectedAccounts={selectedAccounts}\n                value={value}\n            />\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { AccountSelectorMulti } from '@sb1/ffe-account-selector-react';\nimport { Label } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react"],sourceFileName:"account-selector/AccountSelectorMulti.jsx"}),xr={useState:o.useState,AccountSelector:Ie.Z,InputGroup:se.Z},yr=Object.freeze({__proto__:null,scope:xr,code:"() => {\nconst [selectedAccount, setSelectedAccount] = useState(null);\nconst label2 = 'label2';\n\nreturn (\n<InputGroup label=\"Velg konto\" extraMargin={false} labelId={label2}>\n    <AccountSelector\n        accounts={[\n            {\n                accountNumber: '1234 56 789101',\n                name: 'Brukskonto',\n                currencyCode: 'NOK',\n                balance: 1337,\n            },\n            {\n                accountNumber: '1234 56 789102',\n                name: 'Brukskonto2',\n                currencyCode: 'NOK',\n                balance: 13337,\n            },\n            {\n                accountNumber: '2234 56 789102',\n                name: 'Sparekonto1',\n                currencyCode: 'EUR',\n                balance: 109236,\n            },\n            {\n                accountNumber: '1253 47 789102',\n                name: 'Sparekonto2',\n                currencyCode: 'NOK',\n                balance: 0,\n            },\n        ]}\n        id=\"account-selector-single\"\n        locale=\"nb\"\n        onAccountSelected={value => setSelectedAccount(value)}\n        onReset={() => setSelectedAccount(null)}\n        selectedAccount={selectedAccount}\n        showBalance\n        labelId={label2}\n        ariaInvalid={false}\n    />\n</InputGroup>\n);\n};",sourceCode:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\n\n() => {\nconst [selectedAccount, setSelectedAccount] = useState(null);\nconst label2 = 'label2';\n\nreturn (\n<InputGroup label=\"Velg konto\" extraMargin={false} labelId={label2}>\n    <AccountSelector\n        accounts={[\n            {\n                accountNumber: '1234 56 789101',\n                name: 'Brukskonto',\n                currencyCode: 'NOK',\n                balance: 1337,\n            },\n            {\n                accountNumber: '1234 56 789102',\n                name: 'Brukskonto2',\n                currencyCode: 'NOK',\n                balance: 13337,\n            },\n            {\n                accountNumber: '2234 56 789102',\n                name: 'Sparekonto1',\n                currencyCode: 'EUR',\n                balance: 109236,\n            },\n            {\n                accountNumber: '1253 47 789102',\n                name: 'Sparekonto2',\n                currencyCode: 'NOK',\n                balance: 0,\n            },\n        ]}\n        id=\"account-selector-single\"\n        locale=\"nb\"\n        onAccountSelected={value => setSelectedAccount(value)}\n        onReset={() => setSelectedAccount(null)}\n        selectedAccount={selectedAccount}\n        showBalance\n        labelId={label2}\n        ariaInvalid={false}\n    />\n</InputGroup>\n);\n};",sourceImports:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react"],sourceFileName:"account-selector/AccountSelector-showBalance.jsx"}),Tr={useState:o.useState,AccountSelector:Ie.Z,InputGroup:se.Z,SmallText:O.Z},Nr=Object.freeze({__proto__:null,scope:Tr,code:"() => {\n    const [selectedAccount, setSelectedAccount] = useState(null);\n    const label5 = 'label5';\n    const CustomListElementBody = ({ item, isHighlighted }) => {\n    return (\n        <div\n            style={{\n                padding: '8px',\n                background: isHighlighted ? '#ff9100' : 'white',\n            }}\n        >\n            <div>{item.name}</div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <SmallText>{item.accountNumber}</SmallText>\n                <SmallText>{item.amount}</SmallText>\n            </div>\n        </div>\n    );\n    };\n\n    return(\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label5}>\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'NOK',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={value => setSelectedAccount(value)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                labelId={label5}\n                listElementBody={CustomListElementBody}\n                ariaInvalid={false}\n            />\n        </InputGroup>\n    )\n}",sourceCode:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\nimport { SmallText } from '@sb1/ffe-core-react';\n\n() => {\n    const [selectedAccount, setSelectedAccount] = useState(null);\n    const label5 = 'label5';\n    const CustomListElementBody = ({ item, isHighlighted }) => {\n    return (\n        <div\n            style={{\n                padding: '8px',\n                background: isHighlighted ? '#ff9100' : 'white',\n            }}\n        >\n            <div>{item.name}</div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <SmallText>{item.accountNumber}</SmallText>\n                <SmallText>{item.amount}</SmallText>\n            </div>\n        </div>\n    );\n    };\n\n    return(\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label5}>\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'NOK',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={value => setSelectedAccount(value)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                labelId={label5}\n                listElementBody={CustomListElementBody}\n                ariaInvalid={false}\n            />\n        </InputGroup>\n    )\n}",sourceImports:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\nimport { SmallText } from '@sb1/ffe-core-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react","@sb1/ffe-core-react"],sourceFileName:"account-selector/AccountSelector-customListDesign.jsx"}),Gr={useState:o.useState,AccountSelector:Ie.Z,InputGroup:se.Z},Dr=Object.freeze({__proto__:null,scope:Gr,code:"() => {\n    const [selectedAccount, setSelectedAccount] = useState();\n\n    const label1 = 'label1';\n    return (\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label1} >\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'NOK',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={val => setSelectedAccount(val)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                labelId={label1}\n                ariaInvalid={false}\n            />\n        </InputGroup>);\n}",sourceCode:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';\n\n() => {\n    const [selectedAccount, setSelectedAccount] = useState();\n\n    const label1 = 'label1';\n    return (\n        <InputGroup label=\"Velg konto\" extraMargin={false} labelId={label1} >\n            <AccountSelector\n                accounts={[\n                    {\n                        accountNumber: '1234 56 789101',\n                        name: 'Brukskonto',\n                        currencyCode: 'NOK',\n                        balance: 1337,\n                    },\n                    {\n                        accountNumber: '1234 56 789102',\n                        name: 'Brukskonto2',\n                        currencyCode: 'NOK',\n                        balance: 13337,\n                    },\n                    {\n                        accountNumber: '2234 56 789102',\n                        name: 'Sparekonto1',\n                        currencyCode: 'NOK',\n                        balance: 109236,\n                    },\n                    {\n                        accountNumber: '1253 47 789102',\n                        name: 'Sparekonto2',\n                        currencyCode: 'NOK',\n                        balance: 0,\n                    },\n                ]}\n                id=\"account-selector-single\"\n                locale=\"nb\"\n                onAccountSelected={val => setSelectedAccount(val)}\n                onReset={() => setSelectedAccount(null)}\n                selectedAccount={selectedAccount}\n                labelId={label1}\n                ariaInvalid={false}\n            />\n        </InputGroup>);\n}\n",sourceImports:"import { useState } from 'react';\nimport { AccountSelector } from '@sb1/ffe-account-selector-react';\nimport { InputGroup } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-account-selector-react","@sb1/ffe-form-react"],sourceFileName:"account-selector/AccountSelector.jsx"}),Mr={Spinner:Be.Z},Lr=Object.freeze({__proto__:null,scope:Mr,code:"<>\n    <Spinner /> Vennligst vent litt\n</>;",sourceCode:"import Spinner from '@sb1/ffe-spinner-react';\n\n<>\n    <Spinner /> Vennligst vent litt\n</>;\n",sourceImports:"import Spinner from '@sb1/ffe-spinner-react';",dependencies:["@sb1/ffe-spinner-react"],sourceFileName:"spinner/Spinner.jsx"}),wr={Spinner:Be.Z,Paragraph:A.Z},Rr=Object.freeze({__proto__:null,scope:wr,code:"<>\n    <Spinner large={true} />\n    <Paragraph>Vennligst vent litt</Paragraph>\n</>;",sourceCode:"import Spinner from '@sb1/ffe-spinner-react';\nimport { Paragraph } from '@sb1/ffe-core-react';\n\n<>\n    <Spinner large={true} />\n    <Paragraph>Vennligst vent litt</Paragraph>\n</>;\n",sourceImports:"import Spinner from '@sb1/ffe-spinner-react';\nimport { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-spinner-react","@sb1/ffe-core-react"],sourceFileName:"spinner/Spinner-large.jsx"}),jr={DetailList:_e.Z,Detail:ve.Z,DetailContent:xe.Z,TertiaryButton:q.Z},Pr=Object.freeze({__proto__:null,scope:jr,code:'<DetailList>\n    <Detail label="Egenandel">\n        <DetailContent>4 000,-</DetailContent>\n    </Detail>\n\n    <Detail label="Egenandel">\n        <DetailContent>4 000,-</DetailContent>\n        <DetailContent cta={true}>\n            <TertiaryButton onClick={f => f}>ENDRE</TertiaryButton>\n        </DetailContent>\n    </Detail>\n\n    <Detail label="Kjørelengde per år">\n        <DetailContent>30 000 km</DetailContent>\n        <DetailContent className="ffe-small-text">\n            Kilometerstanden kan ikke overstige 80 100 km før 17.02.2017\n        </DetailContent>\n    </Detail>\n\n    <Detail label="Kjørelengde per år">\n        <DetailContent>30 000 km</DetailContent>\n        <DetailContent className="ffe-small-text">\n            Kilometerstanden kan ikke overstige 80 100 km før 17.02.2017\n        </DetailContent>\n        <DetailContent cta={true}>\n            <TertiaryButton onClick={f => f}>ENDRE</TertiaryButton>\n        </DetailContent>\n    </Detail>\n</DetailList>;',sourceCode:'import { DetailList, Detail, DetailContent } from \'@sb1/ffe-details-list-react\';\nimport { TertiaryButton } from \'@sb1/ffe-buttons-react\';\n\n<DetailList>\n    <Detail label="Egenandel">\n        <DetailContent>4 000,-</DetailContent>\n    </Detail>\n\n    <Detail label="Egenandel">\n        <DetailContent>4 000,-</DetailContent>\n        <DetailContent cta={true}>\n            <TertiaryButton onClick={f => f}>ENDRE</TertiaryButton>\n        </DetailContent>\n    </Detail>\n\n    <Detail label="Kjørelengde per år">\n        <DetailContent>30 000 km</DetailContent>\n        <DetailContent className="ffe-small-text">\n            Kilometerstanden kan ikke overstige 80 100 km før 17.02.2017\n        </DetailContent>\n    </Detail>\n\n    <Detail label="Kjørelengde per år">\n        <DetailContent>30 000 km</DetailContent>\n        <DetailContent className="ffe-small-text">\n            Kilometerstanden kan ikke overstige 80 100 km før 17.02.2017\n        </DetailContent>\n        <DetailContent cta={true}>\n            <TertiaryButton onClick={f => f}>ENDRE</TertiaryButton>\n        </DetailContent>\n    </Detail>\n</DetailList>;\n',sourceImports:"import { DetailList, Detail, DetailContent } from '@sb1/ffe-details-list-react';\nimport { TertiaryButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-details-list-react","@sb1/ffe-buttons-react"],sourceFileName:"details-list/DetailList.jsx"}),Ar={DescriptionList:ye.Z,DescriptionListTerm:Te.Z,DescriptionListDescription:Ne.Z},Or=Object.freeze({__proto__:null,scope:Ar,code:'<div>\n    <h3 className="ffe-h4">Personalia</h3>\n    <DescriptionList>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer og sted</DescriptionListTerm>\n        <DescriptionListDescription>1337 Sandvika</DescriptionListDescription>\n    </DescriptionList>\n</div>;',sourceCode:"import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Personalia</h3>\n    <DescriptionList>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer og sted</DescriptionListTerm>\n        <DescriptionListDescription>1337 Sandvika</DescriptionListDescription>\n    </DescriptionList>\n</div>;\n",sourceImports:"import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/DescriptionList.jsx"}),Er={CheckList:Ge.Z,CheckListItem:De.Z},Fr=Object.freeze({__proto__:null,scope:Er,code:'<div>\n    <h3 className="ffe-h4">Ved å bruke FFE får du</h3>\n    <CheckList columns={2}>\n        <CheckListItem>Massevis av ferdige, testede komponenter</CheckListItem>\n        <CheckListItem>Likt design som resten av SpareBank 1</CheckListItem>\n        <CheckListItem>Høyere utviklingshastighet</CheckListItem>\n        <CheckListItem isCross={true}>Flere bugs</CheckListItem>\n        <CheckListItem isCross={true}>Mindre tid</CheckListItem>\n    </CheckList>\n</div>;',sourceCode:"import { CheckList, CheckListItem } from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Ved å bruke FFE får du</h3>\n    <CheckList columns={2}>\n        <CheckListItem>Massevis av ferdige, testede komponenter</CheckListItem>\n        <CheckListItem>Likt design som resten av SpareBank 1</CheckListItem>\n        <CheckListItem>Høyere utviklingshastighet</CheckListItem>\n        <CheckListItem isCross={true}>Flere bugs</CheckListItem>\n        <CheckListItem isCross={true}>Mindre tid</CheckListItem>\n    </CheckList>\n</div>;\n",sourceImports:"import { CheckList, CheckListItem } from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/CheckList-columns.jsx"}),zr={DescriptionListMultiCol:Me.Z,DescriptionListTerm:Te.Z,DescriptionListDescription:Ne.Z},Zr=Object.freeze({__proto__:null,scope:zr,code:'<div>\n    <h3 className="ffe-h4">Personalia</h3>\n    <DescriptionListMultiCol>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer</DescriptionListTerm>\n        <DescriptionListDescription>0362</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Oslo</DescriptionListDescription>\n    </DescriptionListMultiCol>\n</div>;',sourceCode:"import {\n    DescriptionListMultiCol,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Personalia</h3>\n    <DescriptionListMultiCol>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer</DescriptionListTerm>\n        <DescriptionListDescription>0362</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Oslo</DescriptionListDescription>\n    </DescriptionListMultiCol>\n</div>;\n",sourceImports:"import {\n    DescriptionListMultiCol,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/DescriptionListMultiCol.jsx"}),Vr={BulletList:Le.Z,BulletListItem:we.Z},Hr=Object.freeze({__proto__:null,scope:Vr,code:'<div>\n    <h3 className="ffe-h4">Våre forsikringer</h3>\n    <BulletList>\n        <BulletListItem>Bilforsikring</BulletListItem>\n        <BulletListItem>Reiseforsikring</BulletListItem>\n        <BulletListItem>Innboforsikring</BulletListItem>\n    </BulletList>\n</div>;',sourceCode:"import { BulletList, BulletListItem } from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Våre forsikringer</h3>\n    <BulletList>\n        <BulletListItem>Bilforsikring</BulletListItem>\n        <BulletListItem>Reiseforsikring</BulletListItem>\n        <BulletListItem>Innboforsikring</BulletListItem>\n    </BulletList>\n</div>;\n",sourceImports:"import { BulletList, BulletListItem } from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/BulletList.jsx"}),Ur={CheckList:Ge.Z,CheckListItem:De.Z},Kr=Object.freeze({__proto__:null,scope:Ur,code:'<div>\n    <h3 className="ffe-h4">Ved å bruke FFE får du</h3>\n    <CheckList>\n        <CheckListItem>Massevis av ferdige, testede komponenter</CheckListItem>\n        <CheckListItem>Likt design som resten av SpareBank 1</CheckListItem>\n        <CheckListItem>Høyere utviklingshastighet</CheckListItem>\n        <CheckListItem isCross={true}>Flere bugs</CheckListItem>\n    </CheckList>\n</div>;',sourceCode:"import { CheckList, CheckListItem } from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Ved å bruke FFE får du</h3>\n    <CheckList>\n        <CheckListItem>Massevis av ferdige, testede komponenter</CheckListItem>\n        <CheckListItem>Likt design som resten av SpareBank 1</CheckListItem>\n        <CheckListItem>Høyere utviklingshastighet</CheckListItem>\n        <CheckListItem isCross={true}>Flere bugs</CheckListItem>\n    </CheckList>\n</div>;\n",sourceImports:"import { CheckList, CheckListItem } from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/CheckList.jsx"}),qr={NumberedList:Re.Z,NumberedListItem:je.Z},Jr=Object.freeze({__proto__:null,scope:qr,code:'<div>\n    <h3 className="ffe-h4">Å bruke FFE er enkelt!</h3>\n    <NumberedList>\n        <NumberedListItem>\n            Installer pakken du vil bruke via NPM\n        </NumberedListItem>\n        <NumberedListItem>Importer pakken i koden din</NumberedListItem>\n        <NumberedListItem>Profit!</NumberedListItem>\n    </NumberedList>\n</div>;',sourceCode:"import { NumberedList, NumberedListItem } from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Å bruke FFE er enkelt!</h3>\n    <NumberedList>\n        <NumberedListItem>\n            Installer pakken du vil bruke via NPM\n        </NumberedListItem>\n        <NumberedListItem>Importer pakken i koden din</NumberedListItem>\n        <NumberedListItem>Profit!</NumberedListItem>\n    </NumberedList>\n</div>;\n",sourceImports:"import { NumberedList, NumberedListItem } from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/NumberedList.jsx"}),Wr={DescriptionList:ye.Z,DescriptionListTerm:Te.Z,DescriptionListDescription:Ne.Z},$r=Object.freeze({__proto__:null,scope:Wr,code:'<div>\n    <h3 className="ffe-h5">Medium</h3>\n    <DescriptionList horizontal={true} medium={true}>\n        <DescriptionListTerm>\n            This is a very long term, so I might need some extra room\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n            Enlarging the term will of course be at the cost of space for the\n            description\n        </DescriptionListDescription>\n    </DescriptionList>\n\n    <h3 className="ffe-h5">Large</h3>\n    <DescriptionList horizontal={true} large={true}>\n        <DescriptionListTerm>\n            This is a very long description, so I might need some extra room\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n            Enlarging the term will of course be at the cost of space for the\n            description\n        </DescriptionListDescription>\n    </DescriptionList>\n</div>;',sourceCode:'import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from \'@sb1/ffe-lists-react\';\n\n<div>\n    <h3 className="ffe-h5">Medium</h3>\n    <DescriptionList horizontal={true} medium={true}>\n        <DescriptionListTerm>\n            This is a very long term, so I might need some extra room\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n            Enlarging the term will of course be at the cost of space for the\n            description\n        </DescriptionListDescription>\n    </DescriptionList>\n\n    <h3 className="ffe-h5">Large</h3>\n    <DescriptionList horizontal={true} large={true}>\n        <DescriptionListTerm>\n            This is a very long description, so I might need some extra room\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n            Enlarging the term will of course be at the cost of space for the\n            description\n        </DescriptionListDescription>\n    </DescriptionList>\n</div>;\n',sourceImports:"import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/DescriptionList-mediumlarge.jsx"}),Qr={DescriptionList:ye.Z,DescriptionListTerm:Te.Z,DescriptionListDescription:Ne.Z},Xr=Object.freeze({__proto__:null,scope:Qr,code:'<div>\n    <h3 className="ffe-h4">Personalia</h3>\n    <DescriptionList horizontal={true}>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer og sted</DescriptionListTerm>\n        <DescriptionListDescription>1337 Sandvika</DescriptionListDescription>\n    </DescriptionList>\n</div>;',sourceCode:"import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Personalia</h3>\n    <DescriptionList horizontal={true}>\n        <DescriptionListTerm>Navn</DescriptionListTerm>\n        <DescriptionListDescription>Navn Navnesen</DescriptionListDescription>\n        <DescriptionListTerm>Adresse</DescriptionListTerm>\n        <DescriptionListDescription>Husgata 14</DescriptionListDescription>\n        <DescriptionListTerm>Postnummer og sted</DescriptionListTerm>\n        <DescriptionListDescription>1337 Sandvika</DescriptionListDescription>\n    </DescriptionList>\n</div>;\n",sourceImports:"import {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListDescription,\n} from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/DescriptionList-horizontal.jsx"}),Yr={StylizedNumberedList:Pe.Z,StylizedNumberedListItem:Ae.Z},ea=Object.freeze({__proto__:null,scope:Yr,code:'<div>\n    <h3 className="ffe-h4">Å bruke FFE er enkelt!</h3>\n    <StylizedNumberedList>\n        <StylizedNumberedListItem>\n            Installer pakken du vil bruke via NPM\n        </StylizedNumberedListItem>\n        <StylizedNumberedListItem>\n            Importer pakken i koden din\n        </StylizedNumberedListItem>\n        <StylizedNumberedListItem>Profit!</StylizedNumberedListItem>\n    </StylizedNumberedList>\n</div>;',sourceCode:"import {\n    StylizedNumberedList,\n    StylizedNumberedListItem,\n} from '@sb1/ffe-lists-react';\n\n<div>\n    <h3 className=\"ffe-h4\">Å bruke FFE er enkelt!</h3>\n    <StylizedNumberedList>\n        <StylizedNumberedListItem>\n            Installer pakken du vil bruke via NPM\n        </StylizedNumberedListItem>\n        <StylizedNumberedListItem>\n            Importer pakken i koden din\n        </StylizedNumberedListItem>\n        <StylizedNumberedListItem>Profit!</StylizedNumberedListItem>\n    </StylizedNumberedList>\n</div>;\n",sourceImports:"import {\n    StylizedNumberedList,\n    StylizedNumberedListItem,\n} from '@sb1/ffe-lists-react';",dependencies:["@sb1/ffe-lists-react"],sourceFileName:"lists/StylizedNumberedList.jsx"}),na={useState:o.useState,Collapse:te.Z},ta=Object.freeze({__proto__:null,scope:na,code:"() => {\n    const [isOpen, setOpen] = useState(false);\n    const [rand, setRand] = useState(Math.random());\n\n    return (\n        <>\n            <button onClick={() => setOpen(!isOpen)}>\n                {isOpen ? 'Collapse' : 'Expand'}\n            </button>\n            <Collapse isOpen={isOpen} onRest={() => setRand(Math.random())}>\n                <div>\n                    <p>Hello world</p>\n                    <p>Hello world</p>\n                </div>\n            </Collapse>\n            <p>This number will change on transition complete: {rand}</p>\n        </>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport Collapse from '@sb1/ffe-collapse-react';\n\n() => {\n    const [isOpen, setOpen] = useState(false);\n    const [rand, setRand] = useState(Math.random());\n\n    return (\n        <>\n            <button onClick={() => setOpen(!isOpen)}>\n                {isOpen ? 'Collapse' : 'Expand'}\n            </button>\n            <Collapse isOpen={isOpen} onRest={() => setRand(Math.random())}>\n                <div>\n                    <p>Hello world</p>\n                    <p>Hello world</p>\n                </div>\n            </Collapse>\n            <p>This number will change on transition complete: {rand}</p>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Collapse from '@sb1/ffe-collapse-react';",dependencies:["react","@sb1/ffe-collapse-react"],sourceFileName:"collapse/Collapse-onRest.jsx"}),oa={useState:o.useState,Collapse:te.Z},ra=Object.freeze({__proto__:null,scope:oa,code:"() => {\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <>\n            <button onClick={() => setOpen(!isOpen)}>\n                {isOpen ? 'Collapse' : 'Expand'}\n            </button>\n            <Collapse isOpen={isOpen}>\n                <div>\n                    <p>Hello world</p>\n                    <p>Hello world</p>\n                </div>\n            </Collapse>\n        </>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport Collapse from '@sb1/ffe-collapse-react';\n\n() => {\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <>\n            <button onClick={() => setOpen(!isOpen)}>\n                {isOpen ? 'Collapse' : 'Expand'}\n            </button>\n            <Collapse isOpen={isOpen}>\n                <div>\n                    <p>Hello world</p>\n                    <p>Hello world</p>\n                </div>\n            </Collapse>\n        </>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport Collapse from '@sb1/ffe-collapse-react';",dependencies:["react","@sb1/ffe-collapse-react"],sourceFileName:"collapse/Collapse.jsx"}),aa={ContextTipMessage:Oe.Z},sa=Object.freeze({__proto__:null,scope:aa,code:"<ContextTipMessage compact={true}>Et lite tips</ContextTipMessage>;",sourceCode:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\n\n<ContextTipMessage compact={true}>Et lite tips</ContextTipMessage>;\n",sourceImports:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextTipMessage-compact.jsx"}),ia={ContextErrorMessage:Ee.Z},ca=Object.freeze({__proto__:null,scope:ia,code:"<ContextErrorMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextErrorMessage>;",sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\n\n<ContextErrorMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextErrorMessage-showCloseButton.jsx"}),la={ContextErrorMessage:Ee.Z},ua=Object.freeze({__proto__:null,scope:la,code:"<ContextErrorMessage>\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;",sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\n\n<ContextErrorMessage>\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextErrorMessage.jsx"}),da={ContextSuccessMessage:Fe.Z,HakeIkon:b.Z},pa=Object.freeze({__proto__:null,scope:da,code:"<ContextSuccessMessage icon={<HakeIkon />}>\n    Betalingen ble registrert!\n</ContextSuccessMessage>;",sourceCode:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\nimport { HakeIkon } from '@sb1/ffe-icons-react';\n\n<ContextSuccessMessage icon={<HakeIkon />}>\n    Betalingen ble registrert!\n</ContextSuccessMessage>;\n",sourceImports:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\nimport { HakeIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-context-message-react","@sb1/ffe-icons-react"],sourceFileName:"context-message/ContextSuccessMessage-icon.jsx"}),ma={ContextInfoMessage:ze.Z},fa=Object.freeze({__proto__:null,scope:ma,code:'<ContextInfoMessage headerText="Til info">\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;',sourceCode:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\n\n<ContextInfoMessage headerText=\"Til info\">\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;\n",sourceImports:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextInfoMessage-header.jsx"}),ba={ContextErrorMessage:Ee.Z},ga=Object.freeze({__proto__:null,scope:ba,code:"<ContextErrorMessage alert={false}>Slår av alert.</ContextErrorMessage>;",sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\n\n<ContextErrorMessage alert={false}>Slår av alert.</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextErrorMessage-alertFalse.jsx"}),ka={ContextInfoMessage:ze.Z,InfoIkon:g.Z},ha=Object.freeze({__proto__:null,scope:ka,code:"<ContextInfoMessage icon={<InfoIkon />}>\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;",sourceCode:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\nimport { InfoIkon } from '@sb1/ffe-icons-react';\n\n<ContextInfoMessage icon={<InfoIkon />}>\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;\n",sourceImports:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\nimport { InfoIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-context-message-react","@sb1/ffe-icons-react"],sourceFileName:"context-message/ContextInfoMessage-icon.jsx"}),Ca={ContextInfoMessage:ze.Z},Ia=Object.freeze({__proto__:null,scope:Ca,code:"<ContextInfoMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextInfoMessage>;",sourceCode:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\n\n<ContextInfoMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextInfoMessage>;\n",sourceImports:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextInfoMessage-showCloseButton.jsx"}),Sa={ContextInfoMessage:ze.Z},Ba=Object.freeze({__proto__:null,scope:Sa,code:"<ContextInfoMessage compact={true}>En liten beskjed</ContextInfoMessage>;",sourceCode:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\n\n<ContextInfoMessage compact={true}>En liten beskjed</ContextInfoMessage>;\n",sourceImports:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextInfoMessage-compact.jsx"}),_a={ContextTipMessage:Oe.Z,LyspareIkon:k.Z},va=Object.freeze({__proto__:null,scope:_a,code:"<ContextTipMessage icon={<LyspareIkon />}>\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;",sourceCode:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\nimport { LyspareIkon } from '@sb1/ffe-icons-react';\n\n<ContextTipMessage icon={<LyspareIkon />}>\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;\n",sourceImports:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\nimport { LyspareIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-context-message-react","@sb1/ffe-icons-react"],sourceFileName:"context-message/ContextTipMessage-icon.jsx"}),xa={ContextSuccessMessage:Fe.Z},ya=Object.freeze({__proto__:null,scope:xa,code:"<ContextSuccessMessage>Betalingen ble registrert!</ContextSuccessMessage>;",sourceCode:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\n\n<ContextSuccessMessage>Betalingen ble registrert!</ContextSuccessMessage>;\n",sourceImports:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextSuccessMessage.jsx"}),Ta={ContextErrorMessage:Ee.Z},Na=Object.freeze({__proto__:null,scope:Ta,code:'<ContextErrorMessage headerText="Opps...">\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;',sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\n\n<ContextErrorMessage headerText=\"Opps...\">\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextErrorMessage-header.jsx"}),Ga={ContextTipMessage:Oe.Z},Da=Object.freeze({__proto__:null,scope:Ga,code:"<ContextTipMessage>\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;",sourceCode:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\n\n<ContextTipMessage>\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;\n",sourceImports:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextTipMessage.jsx"}),Ma={ContextInfoMessage:ze.Z},La=Object.freeze({__proto__:null,scope:Ma,code:"<ContextInfoMessage>\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;",sourceCode:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';\n\n<ContextInfoMessage>\n    Nå har det kommet noe nytt og spennende fra SpareBank 1!\n</ContextInfoMessage>;\n",sourceImports:"import { ContextInfoMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextInfoMessage.jsx"}),wa={ContextSuccessMessage:Fe.Z},Ra=Object.freeze({__proto__:null,scope:wa,code:"<ContextSuccessMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextSuccessMessage>;",sourceCode:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\n\n<ContextSuccessMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextSuccessMessage>;\n",sourceImports:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextSuccessMessage-showCloseButton.jsx"}),ja={ContextErrorMessage:Ee.Z},Pa=Object.freeze({__proto__:null,scope:ja,code:"<ContextErrorMessage compact={true}>\n    Det skjedde en liten feil\n</ContextErrorMessage>;",sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\n\n<ContextErrorMessage compact={true}>\n    Det skjedde en liten feil\n</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextErrorMessage-compact.jsx"}),Aa={ContextSuccessMessage:Fe.Z},Oa=Object.freeze({__proto__:null,scope:Aa,code:'<ContextSuccessMessage headerText="Hurra!">\n    Betalingen ble registrert!\n</ContextSuccessMessage>;',sourceCode:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\n\n<ContextSuccessMessage headerText=\"Hurra!\">\n    Betalingen ble registrert!\n</ContextSuccessMessage>;\n",sourceImports:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextSuccessMessage-header.jsx"}),Ea={ContextTipMessage:Oe.Z},Fa=Object.freeze({__proto__:null,scope:Ea,code:"<ContextTipMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextTipMessage>;",sourceCode:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\n\n<ContextTipMessage showCloseButton={true}>\n    Jeg kan også lukkes\n</ContextTipMessage>;\n",sourceImports:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextTipMessage-showCloseButton.jsx"}),za={ContextTipMessage:Oe.Z},Za=Object.freeze({__proto__:null,scope:za,code:'<ContextTipMessage headerText="Tips">\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;',sourceCode:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';\n\n<ContextTipMessage headerText=\"Tips\">\n    Visste du at du kan få en skattefordel ved sparing i IPS?\n</ContextTipMessage>;\n",sourceImports:"import { ContextTipMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextTipMessage-header.jsx"}),Va={ContextErrorMessage:Ee.Z,UtropstegnIkon:h.Z},Ha=Object.freeze({__proto__:null,scope:Va,code:"<ContextErrorMessage icon={<UtropstegnIkon />}>\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;",sourceCode:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\nimport { UtropstegnIkon } from '@sb1/ffe-icons-react';\n\n<ContextErrorMessage icon={<UtropstegnIkon />}>\n    Dette gikk ikke som forventet i det hele tatt!\n</ContextErrorMessage>;\n",sourceImports:"import { ContextErrorMessage } from '@sb1/ffe-context-message-react';\nimport { UtropstegnIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-context-message-react","@sb1/ffe-icons-react"],sourceFileName:"context-message/ContextErrorMessage-icon.jsx"}),Ua={ContextSuccessMessage:Fe.Z},Ka=Object.freeze({__proto__:null,scope:Ua,code:"<ContextSuccessMessage compact={true}>\n    En liten seier er fortsatt en seier!\n</ContextSuccessMessage>;",sourceCode:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';\n\n<ContextSuccessMessage compact={true}>\n    En liten seier er fortsatt en seier!\n</ContextSuccessMessage>;\n",sourceImports:"import { ContextSuccessMessage } from '@sb1/ffe-context-message-react';",dependencies:["@sb1/ffe-context-message-react"],sourceFileName:"context-message/ContextSuccessMessage-compact.jsx"}),qa={useState:o.useState,Accordion:Ze.Z,AccordionItem:Ve.Z},Ja=Object.freeze({__proto__:null,scope:qa,code:'() => {\n    const [openElementId, setOpenElementId] = useState(0);\n\n    const createOnToggleOpenHandler = id => isOpen => {\n        if (isOpen) {\n            setOpenElementId(id);\n        }\n    };\n\n    return (\n        <Accordion headingLevel={3}>\n            <AccordionItem\n                isOpen={openElementId === 0}\n                onToggleOpen={createOnToggleOpenHandler(0)}\n                heading="Starter åpen"\n            >\n                Element med ID=0\n            </AccordionItem>\n            <AccordionItem\n                isOpen={openElementId === 1}\n                onToggleOpen={createOnToggleOpenHandler(1)}\n                heading="Starter lukket"\n            >\n                Element med ID=1\n            </AccordionItem>\n            <AccordionItem\n                isOpen={openElementId === 2}\n                onToggleOpen={createOnToggleOpenHandler(2)}\n                heading="Starter også lukket"\n            >\n                Element med ID=2\n            </AccordionItem>\n        </Accordion>\n    );\n};',sourceCode:'import { useState } from \'react\';\nimport { Accordion, AccordionItem } from \'@sb1/ffe-accordion-react\';\n\n() => {\n    const [openElementId, setOpenElementId] = useState(0);\n\n    const createOnToggleOpenHandler = id => isOpen => {\n        if (isOpen) {\n            setOpenElementId(id);\n        }\n    };\n\n    return (\n        <Accordion headingLevel={3}>\n            <AccordionItem\n                isOpen={openElementId === 0}\n                onToggleOpen={createOnToggleOpenHandler(0)}\n                heading="Starter åpen"\n            >\n                Element med ID=0\n            </AccordionItem>\n            <AccordionItem\n                isOpen={openElementId === 1}\n                onToggleOpen={createOnToggleOpenHandler(1)}\n                heading="Starter lukket"\n            >\n                Element med ID=1\n            </AccordionItem>\n            <AccordionItem\n                isOpen={openElementId === 2}\n                onToggleOpen={createOnToggleOpenHandler(2)}\n                heading="Starter også lukket"\n            >\n                Element med ID=2\n            </AccordionItem>\n        </Accordion>\n    );\n};\n',sourceImports:"import { useState } from 'react';\nimport { Accordion, AccordionItem } from '@sb1/ffe-accordion-react';",dependencies:["react","@sb1/ffe-accordion-react"],sourceFileName:"accordion/Accordion-managed.jsx"}),Wa={Accordion:Ze.Z,AccordionItem:Ve.Z},$a=Object.freeze({__proto__:null,scope:Wa,code:'<Accordion headingLevel={3}>\n    <AccordionItem defaultOpen={true} heading="Åpen!">\n        Her er info du kan se med EN gang!\n    </AccordionItem>\n    <AccordionItem heading="Lukket">Skjult innhold</AccordionItem>\n    <AccordionItem heading="Denne er også lukket">\n        Enda mer innhold\n    </AccordionItem>\n</Accordion>;',sourceCode:'import { Accordion, AccordionItem } from \'@sb1/ffe-accordion-react\';\n\n<Accordion headingLevel={3}>\n    <AccordionItem defaultOpen={true} heading="Åpen!">\n        Her er info du kan se med EN gang!\n    </AccordionItem>\n    <AccordionItem heading="Lukket">Skjult innhold</AccordionItem>\n    <AccordionItem heading="Denne er også lukket">\n        Enda mer innhold\n    </AccordionItem>\n</Accordion>;\n',sourceImports:"import { Accordion, AccordionItem } from '@sb1/ffe-accordion-react';",dependencies:["@sb1/ffe-accordion-react"],sourceFileName:"accordion/Accordion-open.jsx"}),Qa={Accordion:Ze.Z,AccordionItem:Ve.Z},Xa=Object.freeze({__proto__:null,scope:Qa,code:'<Accordion headingLevel={2}>\n    <AccordionItem heading="Tittel">Skjult innhold</AccordionItem>\n    <AccordionItem heading={<span>Enda en tittel</span>}>\n        Mer skjult innhold\n    </AccordionItem>\n    <AccordionItem heading="En siste tittel">Enda mer innhold</AccordionItem>\n</Accordion>;',sourceCode:'import { Accordion, AccordionItem } from \'@sb1/ffe-accordion-react\';\n\n<Accordion headingLevel={2}>\n    <AccordionItem heading="Tittel">Skjult innhold</AccordionItem>\n    <AccordionItem heading={<span>Enda en tittel</span>}>\n        Mer skjult innhold\n    </AccordionItem>\n    <AccordionItem heading="En siste tittel">Enda mer innhold</AccordionItem>\n</Accordion>;\n',sourceImports:"import { Accordion, AccordionItem } from '@sb1/ffe-accordion-react';",dependencies:["@sb1/ffe-accordion-react"],sourceFileName:"accordion/Accordion.jsx"}),Ya={ChartDonut:He.Z},es=Object.freeze({__proto__:null,scope:Ya,code:'<ChartDonut\n    firstLabel="First label"\n    lastLabel="Last label"\n    name="Name"\n    percentage={42}\n/>;',sourceCode:'import ChartDonut from \'@sb1/ffe-chart-donut-react\';\n\n<ChartDonut\n    firstLabel="First label"\n    lastLabel="Last label"\n    name="Name"\n    percentage={42}\n/>;\n',sourceImports:"import ChartDonut from '@sb1/ffe-chart-donut-react';",dependencies:["@sb1/ffe-chart-donut-react"],sourceFileName:"chart-donut/ChartDonut.jsx"}),ns={ChartDonut:He.Z},ts=Object.freeze({__proto__:null,scope:ns,code:"<ChartDonut\n    label={\n        <div\n            style={{\n                marginTop: 10,\n                textAlign: 'center',\n                width: '100%',\n            }}\n        >\n            Du har selv ansvar\n            <strong>for all styling</strong>\n        </div>\n    }\n    name=\"Name\"\n    percentage={42}\n/>",sourceCode:"import ChartDonut from '@sb1/ffe-chart-donut-react';\n\n<ChartDonut\n    label={\n        <div\n            style={{\n                marginTop: 10,\n                textAlign: 'center',\n                width: '100%',\n            }}\n        >\n            Du har selv ansvar\n            <strong>for all styling</strong>\n        </div>\n    }\n    name=\"Name\"\n    percentage={42}\n/>",sourceImports:"import ChartDonut from '@sb1/ffe-chart-donut-react';",dependencies:["@sb1/ffe-chart-donut-react"],sourceFileName:"chart-donut/ChartDonut-customLabel.jsx"}),os={ImageCard:x.Z},rs=Object.freeze({__proto__:null,scope:os,code:"<ImageCard\n    image={\n        <img\n            src=\"https://www.sparebank1.no/content/dam/SB1/foto/profilbilder-liggende/ung-i-sofa.jpg.thumb.1280.1280.jpg\"\n            alt=\"\"\n            style={{ position: 'relative', bottom: '50px' }}\n        />\n    }\n>\n    {({ Title }) => <Title>Tittel</Title>}\n</ImageCard>;",sourceCode:"import { ImageCard } from '@sb1/ffe-cards-react';\n\n<ImageCard\n    image={\n        <img\n            src=\"https://www.sparebank1.no/content/dam/SB1/foto/profilbilder-liggende/ung-i-sofa.jpg.thumb.1280.1280.jpg\"\n            alt=\"\"\n            style={{ position: 'relative', bottom: '50px' }}\n        />\n    }\n>\n    {({ Title }) => <Title>Tittel</Title>}\n</ImageCard>;\n",sourceImports:"import { ImageCard } from '@sb1/ffe-cards-react';",dependencies:["@sb1/ffe-cards-react"],sourceFileName:"cards/ImageCard-titleOnly.jsx"}),as={CardBase:y.Z},ss=Object.freeze({__proto__:null,scope:as,code:"<CardBase>Dette er basisen for alle kort</CardBase>;",sourceCode:"import { CardBase } from '@sb1/ffe-cards-react';\n\n<CardBase>Dette er basisen for alle kort</CardBase>;\n",sourceImports:"import { CardBase } from '@sb1/ffe-cards-react';",dependencies:["@sb1/ffe-cards-react"],sourceFileName:"cards/CardBase.jsx"}),is={ImageCard:x.Z},cs=Object.freeze({__proto__:null,scope:is,code:'<ImageCard\n    image={\n        <img\n            src="https://www.sparebank1.no/content/dam/SB1/foto/profilbilder-liggende/ung-i-sofa.jpg.thumb.1280.1280.jpg"\n            alt=""\n        />\n    }\n>\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext>En liten undertekst</Subtext>\n            <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat.\n            </Text>\n        </>\n    )}\n</ImageCard>;',sourceCode:'import { ImageCard } from \'@sb1/ffe-cards-react\';\n\n<ImageCard\n    image={\n        <img\n            src="https://www.sparebank1.no/content/dam/SB1/foto/profilbilder-liggende/ung-i-sofa.jpg.thumb.1280.1280.jpg"\n            alt=""\n        />\n    }\n>\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext>En liten undertekst</Subtext>\n            <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat.\n            </Text>\n        </>\n    )}\n</ImageCard>;\n',sourceImports:"import { ImageCard } from '@sb1/ffe-cards-react';",dependencies:["@sb1/ffe-cards-react"],sourceFileName:"cards/ImageCard.jsx"}),ls={IconCard:v.Z,SparegrisIkon:C.Z},us=Object.freeze({__proto__:null,scope:ls,code:"<IconCard icon={<SparegrisIkon />} condensed={true}>\n    {({ Title, Subtext }) => (\n        <>\n            <Title>Sparekonto voksen 25</Title>\n            <Subtext>7 004,00</Subtext>\n        </>\n    )}\n</IconCard>;",sourceCode:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { SparegrisIkon } from '@sb1/ffe-icons-react';\n\n<IconCard icon={<SparegrisIkon />} condensed={true}>\n    {({ Title, Subtext }) => (\n        <>\n            <Title>Sparekonto voksen 25</Title>\n            <Subtext>7 004,00</Subtext>\n        </>\n    )}\n</IconCard>;\n",sourceImports:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { SparegrisIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-cards-react","@sb1/ffe-icons-react"],sourceFileName:"cards/IconCard-condensed.jsx"}),ds={IconCard:v.Z,GrafOppIkon:I.Z},ps=Object.freeze({__proto__:null,scope:ds,code:"<IconCard icon={<GrafOppIkon />}>\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext>En liten undertekst</Subtext>\n            <Text>Her kan man ha tekst</Text>\n        </>\n    )}\n</IconCard>;",sourceCode:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { GrafOppIkon } from '@sb1/ffe-icons-react';\n\n<IconCard icon={<GrafOppIkon />}>\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext>En liten undertekst</Subtext>\n            <Text>Her kan man ha tekst</Text>\n        </>\n    )}\n</IconCard>;\n",sourceImports:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { GrafOppIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-cards-react","@sb1/ffe-icons-react"],sourceFileName:"cards/IconCard.jsx"}),ms={IconCard:v.Z,KryssSirkelIkon:S.Z},fs=Object.freeze({__proto__:null,scope:ms,code:"<IconCard\n    icon={<KryssSirkelIkon style={{ transform: 'rotate(45deg)' }} />}\n    greyCharcoal={true}\n    condensed={true}\n>\n    {({ Title, Subtext }) => (\n        <>\n            <Title>Start ny sparing</Title>\n            <Subtext>Det er mange måter å spare på</Subtext>\n        </>\n    )}\n</IconCard>;",sourceCode:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { KryssSirkelIkon } from '@sb1/ffe-icons-react';\n\n<IconCard\n    icon={<KryssSirkelIkon style={{ transform: 'rotate(45deg)' }} />}\n    greyCharcoal={true}\n    condensed={true}\n>\n    {({ Title, Subtext }) => (\n        <>\n            <Title>Start ny sparing</Title>\n            <Subtext>Det er mange måter å spare på</Subtext>\n        </>\n    )}\n</IconCard>;\n",sourceImports:"import { IconCard } from '@sb1/ffe-cards-react';\nimport { KryssSirkelIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-cards-react","@sb1/ffe-icons-react"],sourceFileName:"cards/IconCard-greyCharcoal.jsx"}),bs={TextCard:T.Z},gs=Object.freeze({__proto__:null,scope:bs,code:'<TextCard element="div">\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext element="span">Subtext er grå</Subtext>\n            <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat.\n            </Text>\n        </>\n    )}\n</TextCard>;',sourceCode:'import { TextCard } from \'@sb1/ffe-cards-react\';\n\n<TextCard element="div">\n    {({ CardName, Title, Subtext, Text }) => (\n        <>\n            <CardName>Kortnavn</CardName>\n            <Title>Tittel</Title>\n            <Subtext element="span">Subtext er grå</Subtext>\n            <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat.\n            </Text>\n        </>\n    )}\n</TextCard>;\n',sourceImports:"import { TextCard } from '@sb1/ffe-cards-react';",dependencies:["@sb1/ffe-cards-react"],sourceFileName:"cards/TextCard.jsx"}),ks={Grid:N.Z,GridRow:G.Z,GridCol:D.Z},hs=Object.freeze({__proto__:null,scope:ks,code:'<Grid>\n    <GridRow>\n        <GridCol sm="6">Litt innhold til venstre</GridCol>\n        <GridCol sm="6">Litt innhold til høyre</GridCol>\n    </GridRow>\n</Grid>;',sourceCode:'import { Grid, GridRow, GridCol } from \'@sb1/ffe-grid-react\';\n\n<Grid>\n    <GridRow>\n        <GridCol sm="6">Litt innhold til venstre</GridCol>\n        <GridCol sm="6">Litt innhold til høyre</GridCol>\n    </GridRow>\n</Grid>;\n',sourceImports:"import { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-grid-react"],sourceFileName:"grid/Grid.jsx"}),Cs={useState:o.useState,Grid:N.Z,GridRow:G.Z,GridCol:D.Z,Dropdown:ke.Z,Label:re.Z},Is=Object.freeze({__proto__:null,scope:Cs,code:"() => {\n    const backgroundColors = [\n        'blue-ice',\n        'blue-pale',\n        'green-mint',\n        'grey-cloud',\n        'sand',\n        'grey-warm',\n        'orange-salmon',\n        'red',\n        'blue-sky',\n    ];\n    const [bgColor, setBgColor] = useState(backgroundColors[0]);\n\n    return (\n        <Grid>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <Label htmlFor=\"select-gridrow-bg\">\n                        Du kan velge bakgrunnsfarge på grid-kolonnen under her:\n                    </Label>\n                    <Dropdown\n                        id=\"select-gridrow-bg\"\n                        onChange={e => setBgColor(e.target.value)}\n                        value={bgColor}\n                    >\n                        {backgroundColors.map(name => (\n                            <option key={name} value={name}>\n                                {name}\n                            </option>\n                        ))}\n                    </Dropdown>\n                </GridCol>\n            </GridRow>\n            <GridRow>\n                <GridCol\n                    sm={12}\n                    lg={{ cols: 6, offset: 3 }}\n                    background={bgColor}\n                    bottomPadding={false}\n                >\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Mauris sed est sit amet enim pretium finibus in id nibh.\n                        In orci massa, ultricies imperdiet laoreet et, rhoncus\n                        ut est. Integer nec magna ultricies, commodo urna ut,\n                        bibendum turpis. Curabitur nec ex sed lacus bibendum\n                        sollicitudin.\n                    </p>\n                </GridCol>\n            </GridRow>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    Merk at innholdet både over og under er i linje med grid-et.\n                </GridCol>\n            </GridRow>\n        </Grid>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { Label } from '@sb1/ffe-form-react';\n\n() => {\n    const backgroundColors = [\n        'blue-ice',\n        'blue-pale',\n        'green-mint',\n        'grey-cloud',\n        'sand',\n        'grey-warm',\n        'orange-salmon',\n        'red',\n        'blue-sky',\n    ];\n    const [bgColor, setBgColor] = useState(backgroundColors[0]);\n\n    return (\n        <Grid>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <Label htmlFor=\"select-gridrow-bg\">\n                        Du kan velge bakgrunnsfarge på grid-kolonnen under her:\n                    </Label>\n                    <Dropdown\n                        id=\"select-gridrow-bg\"\n                        onChange={e => setBgColor(e.target.value)}\n                        value={bgColor}\n                    >\n                        {backgroundColors.map(name => (\n                            <option key={name} value={name}>\n                                {name}\n                            </option>\n                        ))}\n                    </Dropdown>\n                </GridCol>\n            </GridRow>\n            <GridRow>\n                <GridCol\n                    sm={12}\n                    lg={{ cols: 6, offset: 3 }}\n                    background={bgColor}\n                    bottomPadding={false}\n                >\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Mauris sed est sit amet enim pretium finibus in id nibh.\n                        In orci massa, ultricies imperdiet laoreet et, rhoncus\n                        ut est. Integer nec magna ultricies, commodo urna ut,\n                        bibendum turpis. Curabitur nec ex sed lacus bibendum\n                        sollicitudin.\n                    </p>\n                </GridCol>\n            </GridRow>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    Merk at innholdet både over og under er i linje med grid-et.\n                </GridCol>\n            </GridRow>\n        </Grid>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { Label } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-grid-react","@sb1/ffe-dropdown-react","@sb1/ffe-form-react"],sourceFileName:"grid/GridCol-background.jsx"}),Ss={InlineGrid:M.Z,GridRow:G.Z,GridCol:D.Z},Bs=Object.freeze({__proto__:null,scope:Ss,code:'<InlineGrid>\n    <GridRow>\n        <GridCol sm="12" md="6" background="grey-warm">\n            Litt innhold til venstre\n        </GridCol>\n        <GridCol sm="12" md="6">\n            <InlineGrid>\n                <GridRow>\n                    <GridCol sm="6" background="blue-ice">\n                        Grid inni grid - venstre\n                    </GridCol>\n                    <GridCol sm="6" background="green-mint">\n                        Grid inni grid - høyre\n                    </GridCol>\n                </GridRow>\n            </InlineGrid>\n        </GridCol>\n    </GridRow>\n</InlineGrid>;',sourceCode:'import { InlineGrid, GridRow, GridCol } from \'@sb1/ffe-grid-react\';\n\n<InlineGrid>\n    <GridRow>\n        <GridCol sm="12" md="6" background="grey-warm">\n            Litt innhold til venstre\n        </GridCol>\n        <GridCol sm="12" md="6">\n            <InlineGrid>\n                <GridRow>\n                    <GridCol sm="6" background="blue-ice">\n                        Grid inni grid - venstre\n                    </GridCol>\n                    <GridCol sm="6" background="green-mint">\n                        Grid inni grid - høyre\n                    </GridCol>\n                </GridRow>\n            </InlineGrid>\n        </GridCol>\n    </GridRow>\n</InlineGrid>;\n',sourceImports:"import { InlineGrid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-grid-react"],sourceFileName:"grid/InlineGrid-nested.jsx"}),_s={InlineGrid:M.Z,GridRow:G.Z,GridCol:D.Z},vs=Object.freeze({__proto__:null,scope:_s,code:'<InlineGrid>\n    <GridRow>\n        <GridCol sm="6">Litt innhold til venstre</GridCol>\n        <GridCol sm="6">Litt innhold til høyre</GridCol>\n    </GridRow>\n</InlineGrid>;',sourceCode:'import { InlineGrid, GridRow, GridCol } from \'@sb1/ffe-grid-react\';\n\n<InlineGrid>\n    <GridRow>\n        <GridCol sm="6">Litt innhold til venstre</GridCol>\n        <GridCol sm="6">Litt innhold til høyre</GridCol>\n    </GridRow>\n</InlineGrid>;\n',sourceImports:"import { InlineGrid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-grid-react"],sourceFileName:"grid/InlineGrid.jsx"}),xs={Grid:N.Z,GridRow:G.Z,GridCol:D.Z},ys=Object.freeze({__proto__:null,scope:xs,code:'<Grid>\n    <GridRow>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n    </GridRow>\n</Grid>;',sourceCode:'import { Grid, GridRow, GridCol } from \'@sb1/ffe-grid-react\';\n\n<Grid>\n    <GridRow>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n        <GridCol sm="6" md="4" lg="3">\n            Litt innhold\n        </GridCol>\n    </GridRow>\n</Grid>;\n',sourceImports:"import { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';",dependencies:["@sb1/ffe-grid-react"],sourceFileName:"grid/Grid-4col.jsx"}),Ts={useState:o.useState,Grid:N.Z,GridRow:G.Z,GridCol:D.Z,Dropdown:ke.Z,Label:re.Z},Ns=Object.freeze({__proto__:null,scope:Ts,code:"() => {\n    const backgroundColors = [\n        'blue-ice',\n        'blue-pale',\n        'green-mint',\n        'grey-cloud',\n        'sand',\n        'grey-warm',\n        'orange-salmon',\n        'red',\n        'blue-sky',\n    ];\n    const [bgColor, setBgColor] = useState(backgroundColors[0]);\n\n    return (\n        <Grid>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <Label htmlFor=\"select-gridrow-bg\">\n                        Du kan velge bakgrunnsfarge på grid-raden under her:\n                    </Label>\n                    <Dropdown\n                        id=\"select-gridrow-bg\"\n                        onChange={e => setBgColor(e.target.value)}\n                        value={bgColor}\n                    >\n                        {backgroundColors.map(name => (\n                            <option key={name} value={name}>\n                                {name}\n                            </option>\n                        ))}\n                    </Dropdown>\n                </GridCol>\n            </GridRow>\n            <GridRow background={bgColor}>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Mauris sed est sit amet enim pretium finibus in id nibh.\n                        In orci massa, ultricies imperdiet laoreet et, rhoncus\n                        ut est.\n                    </p>\n                </GridCol>\n            </GridRow>\n        </Grid>\n    );\n};",sourceCode:"import { useState } from 'react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { Label } from '@sb1/ffe-form-react';\n\n() => {\n    const backgroundColors = [\n        'blue-ice',\n        'blue-pale',\n        'green-mint',\n        'grey-cloud',\n        'sand',\n        'grey-warm',\n        'orange-salmon',\n        'red',\n        'blue-sky',\n    ];\n    const [bgColor, setBgColor] = useState(backgroundColors[0]);\n\n    return (\n        <Grid>\n            <GridRow>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <Label htmlFor=\"select-gridrow-bg\">\n                        Du kan velge bakgrunnsfarge på grid-raden under her:\n                    </Label>\n                    <Dropdown\n                        id=\"select-gridrow-bg\"\n                        onChange={e => setBgColor(e.target.value)}\n                        value={bgColor}\n                    >\n                        {backgroundColors.map(name => (\n                            <option key={name} value={name}>\n                                {name}\n                            </option>\n                        ))}\n                    </Dropdown>\n                </GridCol>\n            </GridRow>\n            <GridRow background={bgColor}>\n                <GridCol sm={12} lg={{ cols: 6, offset: 3 }}>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Mauris sed est sit amet enim pretium finibus in id nibh.\n                        In orci massa, ultricies imperdiet laoreet et, rhoncus\n                        ut est.\n                    </p>\n                </GridCol>\n            </GridRow>\n        </Grid>\n    );\n};\n",sourceImports:"import { useState } from 'react';\nimport { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport Dropdown from '@sb1/ffe-dropdown-react';\nimport { Label } from '@sb1/ffe-form-react';",dependencies:["react","@sb1/ffe-grid-react","@sb1/ffe-dropdown-react","@sb1/ffe-form-react"],sourceFileName:"grid/GridRow-background.jsx"}),Gs={SmallText:O.Z},Ds=Object.freeze({__proto__:null,scope:Gs,code:'<>\n    <div>\n        <SmallText>Dette er en liten type</SmallText>\n    </div>\n\n    <SmallText element="p">Dette er en liten type</SmallText>\n</>;',sourceCode:"import { SmallText } from '@sb1/ffe-core-react';\n\n<>\n    <div>\n        <SmallText>Dette er en liten type</SmallText>\n    </div>\n\n    <SmallText element=\"p\">Dette er en liten type</SmallText>\n</>;\n",sourceImports:"import { SmallText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/SmallText.jsx"}),Ms={Grid:N.Z,GridRow:G.Z,GridCol:D.Z,DividerLine:E.Z,Paragraph:A.Z},Ls=Object.freeze({__proto__:null,scope:Ms,code:"<Grid>\n    <GridRow>\n        <GridCol>\n            <Paragraph>Noe over</Paragraph>\n        </GridCol>\n    </GridRow>\n    <GridRow>\n        <GridCol>\n            <DividerLine />\n        </GridCol>\n    </GridRow>\n    <GridRow>\n        <GridCol>\n            <Paragraph>Noe under</Paragraph>\n        </GridCol>\n    </GridRow>\n</Grid>;",sourceCode:"import { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport { DividerLine, Paragraph } from '@sb1/ffe-core-react';\n\n<Grid>\n    <GridRow>\n        <GridCol>\n            <Paragraph>Noe over</Paragraph>\n        </GridCol>\n    </GridRow>\n    <GridRow>\n        <GridCol>\n            <DividerLine />\n        </GridCol>\n    </GridRow>\n    <GridRow>\n        <GridCol>\n            <Paragraph>Noe under</Paragraph>\n        </GridCol>\n    </GridRow>\n</Grid>;\n",sourceImports:"import { Grid, GridRow, GridCol } from '@sb1/ffe-grid-react';\nimport { DividerLine, Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-grid-react","@sb1/ffe-core-react"],sourceFileName:"typography/DividerLine.jsx"}),ws={PreformattedText:F.Z},Rs=Object.freeze({__proto__:null,scope:ws,code:"<PreformattedText>\n    {`Gammal dam\nEin frosk hoppar\nLyden av vatnet`}\n</PreformattedText>;",sourceCode:"import { PreformattedText } from '@sb1/ffe-core-react';\n\n<PreformattedText>\n    {`Gammal dam\nEin frosk hoppar\nLyden av vatnet`}\n</PreformattedText>;\n",sourceImports:"import { PreformattedText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/PreformattedText.jsx"}),js={MicroText:z.Z},Ps=Object.freeze({__proto__:null,scope:js,code:"<MicroText>Dette er den minste typen vi har</MicroText>;",sourceCode:"import { MicroText } from '@sb1/ffe-core-react';\n\n<MicroText>Dette er den minste typen vi har</MicroText>;\n",sourceImports:"import { MicroText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/MicroText.jsx"}),As={LinkText:Z.Z},Os=Object.freeze({__proto__:null,scope:As,code:'<LinkText href="https://www.sparebank1.no">sparebank1.no</LinkText>;',sourceCode:"import { LinkText } from '@sb1/ffe-core-react';\n\n<LinkText href=\"https://www.sparebank1.no\">sparebank1.no</LinkText>;\n",sourceImports:"import { LinkText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/LinkText.jsx"}),Es={StrongText:V.Z},Fs=Object.freeze({__proto__:null,scope:Es,code:"<StrongText>Dette er en sterk type</StrongText>;",sourceCode:"import { StrongText } from '@sb1/ffe-core-react';\n\n<StrongText>Dette er en sterk type</StrongText>;\n",sourceImports:"import { StrongText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/StrongText.jsx"}),zs={Heading1:H.nL,Heading2:H.XJ,Heading3:H.aC,Heading4:H.k8,Heading5:H.by,Heading6:H.Cd},Zs=Object.freeze({__proto__:null,scope:zs,code:"<div>\n    <Heading1>Overskrift nivå 1</Heading1>\n    <Heading2>Overskrift nivå 2</Heading2>\n    <Heading3>Overskrift nivå 3</Heading3>\n    <Heading4>Overskrift nivå 4</Heading4>\n    <Heading5>Overskrift nivå 5</Heading5>\n    <Heading6>Overskrift nivå 6</Heading6>\n</div>;",sourceCode:"import {\n    Heading1,\n    Heading2,\n    Heading3,\n    Heading4,\n    Heading5,\n    Heading6,\n} from '@sb1/ffe-core-react';\n\n<div>\n    <Heading1>Overskrift nivå 1</Heading1>\n    <Heading2>Overskrift nivå 2</Heading2>\n    <Heading3>Overskrift nivå 3</Heading3>\n    <Heading4>Overskrift nivå 4</Heading4>\n    <Heading5>Overskrift nivå 5</Heading5>\n    <Heading6>Overskrift nivå 6</Heading6>\n</div>;\n",sourceImports:"import {\n    Heading1,\n    Heading2,\n    Heading3,\n    Heading4,\n    Heading5,\n    Heading6,\n} from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/Heading.jsx"}),Vs={EmphasizedText:U.Z},Hs=Object.freeze({__proto__:null,scope:Vs,code:"<EmphasizedText>Dette bør utheves</EmphasizedText>;",sourceCode:"import { EmphasizedText } from '@sb1/ffe-core-react';\n\n<EmphasizedText>Dette bør utheves</EmphasizedText>;\n",sourceImports:"import { EmphasizedText } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/EmphasizedText.jsx"}),Us={LinkText:Z.Z,SnakkebobleIkon:B.Z},Ks=Object.freeze({__proto__:null,scope:Us,code:"<LinkText href=\"https://www.sparebank1.no\" underline={false}>\n    <SnakkebobleIkon\n        alt=\"Snakk med oss\"\n        style={{ fill: 'darkblue', height: '80px' }}\n    />\n</LinkText>;",sourceCode:"import { LinkText } from '@sb1/ffe-core-react';\nimport { SnakkebobleIkon } from '@sb1/ffe-icons-react';\n\n<LinkText href=\"https://www.sparebank1.no\" underline={false}>\n    <SnakkebobleIkon\n        alt=\"Snakk med oss\"\n        style={{ fill: 'darkblue', height: '80px' }}\n    />\n</LinkText>;\n",sourceImports:"import { LinkText } from '@sb1/ffe-core-react';\nimport { SnakkebobleIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-core-react","@sb1/ffe-icons-react"],sourceFileName:"typography/LinkText-icon.jsx"}),qs={Paragraph:A.Z},Js=Object.freeze({__proto__:null,scope:qs,code:"<>\n    <Paragraph>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n\n    <Paragraph lead={true}>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n\n    <Paragraph subLead={true}>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n</>;",sourceCode:"import { Paragraph } from '@sb1/ffe-core-react';\n\n<>\n    <Paragraph>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n\n    <Paragraph lead={true}>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n\n    <Paragraph subLead={true}>\n        Velg en av bankene våre, og bruk BankID for å bli kunde. Nettbank og\n        mobilbank får du med en gang, og bankkortet kommer i posten om en ukes\n        tid.\n    </Paragraph>\n</>;\n",sourceImports:"import { Paragraph } from '@sb1/ffe-core-react';",dependencies:["@sb1/ffe-core-react"],sourceFileName:"typography/Paragraph.jsx"}),Ws={React:o,formatDate:Ue.Z},$s=Object.freeze({__proto__:null,scope:Ws,code:"<React.Fragment>\n    <div>{formatDate(new Date('2000', 0, 1))}</div>\n    <div>{formatDate(946681200000)}</div>\n</React.Fragment>;",sourceCode:"import React from 'react';\nimport formatDate from '@sb1/ffe-formatters/lib/formatDate';\n\n<React.Fragment>\n    <div>{formatDate(new Date('2000', 0, 1))}</div>\n    <div>{formatDate(946681200000)}</div>\n</React.Fragment>;",sourceImports:"import React from 'react';\nimport formatDate from '@sb1/ffe-formatters/lib/formatDate';",dependencies:["react","@sb1/ffe-formatters/lib/formatDate"],sourceFileName:"formatting/Date.jsx"}),Qs={React:o,formatDistance:Ke.Z},Xs=Object.freeze({__proto__:null,scope:Qs,code:"<React.Fragment>\n    <div>{formatDistance(160520)}</div>\n    <div>{formatDistance(12345, { unit: 'mi' })}</div>\n</React.Fragment>;",sourceCode:"import React from 'react';\nimport formatDistance from '@sb1/ffe-formatters/lib/formatDistance';\n\n<React.Fragment>\n    <div>{formatDistance(160520)}</div>\n    <div>{formatDistance(12345, { unit: 'mi' })}</div>\n</React.Fragment>;",sourceImports:"import React from 'react';\nimport formatDistance from '@sb1/ffe-formatters/lib/formatDistance';",dependencies:["react","@sb1/ffe-formatters/lib/formatDistance"],sourceFileName:"formatting/Distance.jsx"}),Ys={formatAccountNumber:qe.Z},ei=Object.freeze({__proto__:null,scope:Ys,code:"<span>{formatAccountNumber('90010012345')}</span>;",sourceCode:"import formatAccountNumber from '@sb1/ffe-formatters/lib/formatAccountNumber';\n\n<span>{formatAccountNumber('90010012345')}</span>;",sourceImports:"import formatAccountNumber from '@sb1/ffe-formatters/lib/formatAccountNumber';",dependencies:["@sb1/ffe-formatters/lib/formatAccountNumber"],sourceFileName:"formatting/Accountnumber.jsx"}),ni={React:o,formatCurrency:Je.Z},ti=Object.freeze({__proto__:null,scope:ni,code:"<React.Fragment>\n    <div>{formatCurrency(100)}</div>\n    <div>{formatCurrency(1000, { prefix: '', postfix: ' kroner' })}</div>\n</React.Fragment>;",sourceCode:"import React from 'react';\nimport formatCurrency from '@sb1/ffe-formatters/lib/formatCurrency';\n\n<React.Fragment>\n    <div>{formatCurrency(100)}</div>\n    <div>{formatCurrency(1000, { prefix: '', postfix: ' kroner' })}</div>\n</React.Fragment>;",sourceImports:"import React from 'react';\nimport formatCurrency from '@sb1/ffe-formatters/lib/formatCurrency';",dependencies:["react","@sb1/ffe-formatters/lib/formatCurrency"],sourceFileName:"formatting/Currency.jsx"}),oi={formatFodselsnummer:We.Z},ri=Object.freeze({__proto__:null,scope:oi,code:"<span>{formatFodselsnummer('01010112345')}</span>",sourceCode:"import formatFodselsnummer from '@sb1/ffe-formatters/lib/formatFodselsnummer';\n\n<span>{formatFodselsnummer('01010112345')}</span>",sourceImports:"import formatFodselsnummer from '@sb1/ffe-formatters/lib/formatFodselsnummer';",dependencies:["@sb1/ffe-formatters/lib/formatFodselsnummer"],sourceFileName:"formatting/Birthnumber.jsx"}),ai={React:o,formatPercentage:$e.Z},si=Object.freeze({__proto__:null,scope:ai,code:"<React.Fragment>\n    <div>{formatPercentage(10.00001)}</div>\n    <div>{formatPercentage(12.34567, { maxDecimals: 4 })}</div>\n    <div>{formatPercentage(1, { minDecimals: 2 })}</div>\n</React.Fragment>;",sourceCode:"import React from 'react';\nimport formatPercentage from '@sb1/ffe-formatters/lib/formatPercentage';\n\n<React.Fragment>\n    <div>{formatPercentage(10.00001)}</div>\n    <div>{formatPercentage(12.34567, { maxDecimals: 4 })}</div>\n    <div>{formatPercentage(1, { minDecimals: 2 })}</div>\n</React.Fragment>;",sourceImports:"import React from 'react';\nimport formatPercentage from '@sb1/ffe-formatters/lib/formatPercentage';",dependencies:["react","@sb1/ffe-formatters/lib/formatPercentage"],sourceFileName:"formatting/Percentage.jsx"}),ii={React:o,formatNumber:Qe.default},ci=Object.freeze({__proto__:null,scope:ii,code:"<React.Fragment>\n    <div>{formatNumber(1000000)}</div>\n    <div>{formatNumber(1234.567)}</div>\n    <div>{formatNumber(1234.567, { decimals: 2 })}</div>\n    <div>\n        {formatNumber(1234.567, {\n            decimals: 2,\n            thousandSeparator: ',',\n            decimalMark: '.',\n        })}\n    </div>\n</React.Fragment>;",sourceCode:"import React from 'react';\nimport formatNumber from '@sb1/ffe-formatters/lib/formatNumber';\n\n\n<React.Fragment>\n    <div>{formatNumber(1000000)}</div>\n    <div>{formatNumber(1234.567)}</div>\n    <div>{formatNumber(1234.567, { decimals: 2 })}</div>\n    <div>\n        {formatNumber(1234.567, {\n            decimals: 2,\n            thousandSeparator: ',',\n            decimalMark: '.',\n        })}\n    </div>\n</React.Fragment>;",sourceImports:"import React from 'react';\nimport formatNumber from '@sb1/ffe-formatters/lib/formatNumber';",dependencies:["react","@sb1/ffe-formatters/lib/formatNumber"],sourceFileName:"formatting/Numbers.jsx"}),li={SystemInfoMessage:Xe.Ot},ui=Object.freeze({__proto__:null,scope:li,code:"<SystemInfoMessage>\n    Mobilbanken vil være utilgjengelig førstkommende fredag kl 19-20.\n</SystemInfoMessage>;",sourceCode:"import { SystemInfoMessage } from '@sb1/ffe-system-message-react';\n\n<SystemInfoMessage>\n    Mobilbanken vil være utilgjengelig førstkommende fredag kl 19-20.\n</SystemInfoMessage>;\n",sourceImports:"import { SystemInfoMessage } from '@sb1/ffe-system-message-react';",dependencies:["@sb1/ffe-system-message-react"],sourceFileName:"system-message/SystemInfoMessage.jsx"}),di={SystemErrorMessage:Xe.M7},pi=Object.freeze({__proto__:null,scope:di,code:"<SystemErrorMessage alert={false}>\n    Noen av systemene våre er dessverre utilgjengelige akkurat nå.\n</SystemErrorMessage>;",sourceCode:"import { SystemErrorMessage } from '@sb1/ffe-system-message-react';\n\n<SystemErrorMessage alert={false}>\n    Noen av systemene våre er dessverre utilgjengelige akkurat nå.\n</SystemErrorMessage>;\n",sourceImports:"import { SystemErrorMessage } from '@sb1/ffe-system-message-react';",dependencies:["@sb1/ffe-system-message-react"],sourceFileName:"system-message/SystemErrorMessage-alertFalse.jsx"}),mi={SystemErrorMessage:Xe.M7},fi=Object.freeze({__proto__:null,scope:mi,code:"<SystemErrorMessage>\n    Noen av systemene våre er dessverre utilgjengelige akkurat nå.\n</SystemErrorMessage>;",sourceCode:"import { SystemErrorMessage } from '@sb1/ffe-system-message-react';\n\n<SystemErrorMessage>\n    Noen av systemene våre er dessverre utilgjengelige akkurat nå.\n</SystemErrorMessage>;\n",sourceImports:"import { SystemErrorMessage } from '@sb1/ffe-system-message-react';",dependencies:["@sb1/ffe-system-message-react"],sourceFileName:"system-message/SystemErrorMessage.jsx"}),bi={SystemNewsMessage:Xe.rQ},gi=Object.freeze({__proto__:null,scope:bi,code:"<SystemNewsMessage>\n    Velkommen til ny betaversjon av SpareBank 1!\n</SystemNewsMessage>;",sourceCode:"import { SystemNewsMessage } from '@sb1/ffe-system-message-react';\n\n<SystemNewsMessage>\n    Velkommen til ny betaversjon av SpareBank 1!\n</SystemNewsMessage>;\n",sourceImports:"import { SystemNewsMessage } from '@sb1/ffe-system-message-react';",dependencies:["@sb1/ffe-system-message-react"],sourceFileName:"system-message/SystemNewsMessage.jsx"}),ki={SystemSuccessMessage:Xe.nV},hi=Object.freeze({__proto__:null,scope:ki,code:"<SystemSuccessMessage>Alle systemene våre funker!</SystemSuccessMessage>;",sourceCode:"import { SystemSuccessMessage } from '@sb1/ffe-system-message-react';\n\n<SystemSuccessMessage>Alle systemene våre funker!</SystemSuccessMessage>;\n",sourceImports:"import { SystemSuccessMessage } from '@sb1/ffe-system-message-react';",dependencies:["@sb1/ffe-system-message-react"],sourceFileName:"system-message/SystemSuccessMessage.jsx"}),Ci={Table:Ye.Z},Ii=Object.freeze({__proto__:null,scope:Ci,code:"() => {\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            info: 'mer spennende info',\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            info: 'mer spennende info',\n            defaultExpanded: true,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            info: 'mer spennende info',\n        },\n    ];\n\n    const columns = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.info && <span>Info: {row.info}</span>;\n\n    return (\n        <Table\n            columns={columns}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data, med en rad som er ekspandert\"\n        />\n    );\n};",sourceCode:"import Table from '@sb1/ffe-tables-react';\n\n() => {\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            info: 'mer spennende info',\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            info: 'mer spennende info',\n            defaultExpanded: true,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            info: 'mer spennende info',\n        },\n    ];\n\n    const columns = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.info && <span>Info: {row.info}</span>;\n\n    return (\n        <Table\n            columns={columns}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data, med en rad som er ekspandert\"\n        />\n    );\n};\n",sourceImports:"import Table from '@sb1/ffe-tables-react';",dependencies:["@sb1/ffe-tables-react"],sourceFileName:"tables/Table-expandedContentMapper.jsx"}),Si={Table:Ye.Z,TertiaryButton:q.Z},Bi=Object.freeze({__proto__:null,scope:Si,code:"() => {\n    const Button = ({ children }) => (\n        // stopPropagation hindrer at raden ekspanderer/kollapser når vi trykker på knappen\n        <TertiaryButton onClick={e => e.stopPropagation()}>\n            {children}\n        </TertiaryButton>\n    );\n\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            address: 'Gateveien 2',\n            age: 23,\n            networth: '12 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            age: 45,\n            networth: '9 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n            address: <Button>legg til adresse</Button>,\n            age: 39,\n            networth: '8 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            address: <Button>legg til adresse</Button>,\n            age: 9,\n            networth: '23,12',\n            button: <Button>poke</Button>,\n        },\n    ];\n\n    const formatNumber = num =>\n        Number(\n            num\n                .toString()\n                .replace(/\\s/g, '')\n                .replace(/,/g, '.'),\n        );\n    const currencyCompare = (a, b) => formatNumber(a) - formatNumber(b);\n\n    const columns = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'age',\n            header: 'Alder',\n            footer: '29',\n            alignRight: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'networth',\n            header: 'Formue',\n            footer: '5 348 760,23',\n            alignRight: true,\n            compare: currencyCompare,\n        },\n        { key: 'button', header: 'Poke', notSortable: true },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.address && <span>Adresse: {row.address}</span>;\n\n    // function is called when table sorting changes.\n    const onSort = ({ sortBy, descending, tableData }) => {};\n\n    return (\n        <Table\n            columns={columns}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            sortable={true}\n            sortBy={'age'}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data\"\n            onSort={onSort}\n        />\n    );\n};",sourceCode:"import Table from '@sb1/ffe-tables-react';\nimport { TertiaryButton } from '@sb1/ffe-buttons-react';\n\n() => {\n    const Button = ({ children }) => (\n        // stopPropagation hindrer at raden ekspanderer/kollapser når vi trykker på knappen\n        <TertiaryButton onClick={e => e.stopPropagation()}>\n            {children}\n        </TertiaryButton>\n    );\n\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            address: 'Gateveien 2',\n            age: 23,\n            networth: '12 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            age: 45,\n            networth: '9 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n            address: <Button>legg til adresse</Button>,\n            age: 39,\n            networth: '8 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            address: <Button>legg til adresse</Button>,\n            age: 9,\n            networth: '23,12',\n            button: <Button>poke</Button>,\n        },\n    ];\n\n    const formatNumber = num =>\n        Number(\n            num\n                .toString()\n                .replace(/\\s/g, '')\n                .replace(/,/g, '.'),\n        );\n    const currencyCompare = (a, b) => formatNumber(a) - formatNumber(b);\n\n    const columns = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'age',\n            header: 'Alder',\n            footer: '29',\n            alignRight: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'networth',\n            header: 'Formue',\n            footer: '5 348 760,23',\n            alignRight: true,\n            compare: currencyCompare,\n        },\n        { key: 'button', header: 'Poke', notSortable: true },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.address && <span>Adresse: {row.address}</span>;\n\n    // function is called when table sorting changes.\n    const onSort = ({ sortBy, descending, tableData }) => {};\n\n    return (\n        <Table\n            columns={columns}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            sortable={true}\n            sortBy={'age'}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data\"\n            onSort={onSort}\n        />\n    );\n};\n",sourceImports:"import Table from '@sb1/ffe-tables-react';\nimport { TertiaryButton } from '@sb1/ffe-buttons-react';",dependencies:["@sb1/ffe-tables-react","@sb1/ffe-buttons-react"],sourceFileName:"tables/Table-advanced.jsx"}),_i={Table:Ye.Z,TertiaryButton:q.Z,HakeIkon:b.Z,KryssIkon:_.Z},vi=Object.freeze({__proto__:null,scope:_i,code:"() => {\n    const generateCheckbox = value => {\n        return (\n            <div style={{ width: '100%', textAlign: 'center' }}>\n                {value ? (\n                    <HakeIkon className=\"ffe-table__expand-icon\" />\n                ) : (\n                    <KryssIkon className=\"ffe-table__expand-icon\" />\n                )}\n            </div>\n        );\n    };\n\n    const Button = ({ children }) => (\n        // stopPropagation hindrer at raden ekspanderer/kollapser når vi trykker på knappen\n        <TertiaryButton onClick={e => e.stopPropagation()}>\n            {children}\n        </TertiaryButton>\n    );\n\n    const formatNumber = num =>\n        Number(\n            num\n                .toString()\n                .replace(/\\s/g, '')\n                .replace(/,/g, '.'),\n        );\n\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            address: 'Gateveien 2',\n            age: 23,\n            networth: '12 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            age: 45,\n            networth: '9 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n            address: <Button>legg til adresse</Button>,\n            age: 39,\n            networth: '8 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            address: <Button>legg til adresse</Button>,\n            age: 9,\n            networth: '23,12',\n            button: <Button>poke</Button>,\n        },\n    ].map(d => ({\n        syntetic: d.age > 18 && formatNumber(d.networth) > 10000,\n        ...d,\n    }));\n\n    const currencyCompare = (a, b) => formatNumber(a) - formatNumber(b);\n\n    const ageSum = data\n        .map(e => e.age)\n        .reduce((total, num) => {\n            return total + num;\n        });\n\n    const networthSum = data\n        .map(e => formatNumber(e.networth))\n        .reduce((total, num) => {\n            return total + num;\n        });\n\n    const columnsAdvanced = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'age',\n            header: 'Alder',\n            footer: ageSum / data.length,\n            alignRight: true,\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {value} {value > 18 ? ' (voksen)' : ''}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'syntetic',\n            header: 'Syntetisk felt',\n            alignRight: true,\n            notSortable: true,\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {props.cells.age > 18 &&\n                        formatNumber(props.cells.networth) > 10000\n                            ? 'voksen, formue > 10000'\n                            : ''}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'syntetic',\n            header: 'Sparing',\n            alignRight: true,\n            columnHeaderRender: (\n                value,\n                dataWindow,\n                spanProps,\n                thProps,\n                columns,\n            ) => {\n                const dataWindowSum = dataWindow\n                    .map(e => (e.syntetic ? 1 : 0))\n                    .reduce((total, num) => {\n                        return total + num;\n                    });\n                return (\n                    <th key={thProps.key} {...thProps}>\n                        <span {...spanProps}>\n                            {value} ({dataWindowSum})\n                        </span>\n                    </th>\n                );\n            },\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {' '}\n                        {value\n                            ? generateCheckbox(value)\n                            : generateCheckbox(false)}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'networth',\n            header: 'Formue',\n            footer: '5 348 760,23',\n            alignRight: true,\n            compare: currencyCompare,\n\n            columnFooterRender: (\n                value,\n                dataWindow,\n                tdPorps,\n                spanProps,\n                columns,\n                index,\n            ) => {\n                return (\n                    <th key={tdPorps.key} {...tdPorps}>\n                        <span {...spanProps}>\n                            {Number(networthSum / 4).toFixed(2)}\n                        </span>\n                    </th>\n                );\n            },\n        },\n        { key: 'button', header: 'Poke', notSortable: true },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.address && <span>Adresse: {row.address}</span>;\n\n    // function is called when table sorting changes.\n    const onSort = ({ sortBy, descending, tableData }) => {};\n\n    return (\n        <Table\n            columns={columnsAdvanced}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            sortable={true}\n            sortBy={'age'}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data\"\n            onSort={onSort}\n            headerRender={(trprops, columns) => {\n                return (\n                    <>\n                        <tr {...trprops}>\n                            <th\n                                colSpan={3}\n                                className=\"ffe-table__heading\"\n                                style={{ textAlign: 'center' }}\n                            >\n                                Personlig\n                            </th>\n                            <th colSpan={2} className=\"ffe-table__heading\" />\n                            <th colSpan={3} className=\"ffe-table__heading\">\n                                Overskrift\n                            </th>\n                        </tr>\n                        <tr {...trprops} />\n                    </>\n                );\n            }}\n            footerRender={(trprops, columns) => {\n                return (\n                    <>\n                        <tr {...trprops} />\n                        <tr {...trprops}>\n                            <td className=\"ffe-table__cell\" data-th=\"Navn\">\n                                <span className=\"ffe-table__content\">\n                                    Total\n                                </span>\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"E-post\">\n                                <span className=\"ffe-table__content\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"Alder\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                            <td\n                                className=\"ffe-table__cell\"\n                                data-th=\"Syntetisk felt\"\n                            >\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" />\n                            <th className=\"ffe-table__cell\" data-th=\"Formue\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\">\n                                    {networthSum}\n                                </span>\n                            </th>\n                            <td className=\"ffe-table__cell\" data-th=\"Poke\">\n                                <span className=\"ffe-table__content\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                        </tr>\n                    </>\n                );\n            }}\n            rowRender={(trprops, props, index) => {\n                const oddEvenClassName = index % 2 === 1 ? 'is-odd' : 'is-even';\n                return (\n                    <tr\n                        {...trprops}\n                        className={`${trprops.className} ffe-table__row-expandable ${oddEvenClassName}`}\n                        onClick={event => {\n                            console.log('rowRenderClick!', index);\n                            trprops.onClick && trprops.onClick(event);\n                        }}\n                        title={props.cells.name}\n                    >\n                        {trprops.children}\n                    </tr>\n                );\n            }}\n        />\n    );\n};",sourceCode:"import Table from '@sb1/ffe-tables-react';\nimport { TertiaryButton } from '@sb1/ffe-buttons-react';\nimport { HakeIkon, KryssIkon } from '@sb1/ffe-icons-react';\n\n() => {\n    const generateCheckbox = value => {\n        return (\n            <div style={{ width: '100%', textAlign: 'center' }}>\n                {value ? (\n                    <HakeIkon className=\"ffe-table__expand-icon\" />\n                ) : (\n                    <KryssIkon className=\"ffe-table__expand-icon\" />\n                )}\n            </div>\n        );\n    };\n\n    const Button = ({ children }) => (\n        // stopPropagation hindrer at raden ekspanderer/kollapser når vi trykker på knappen\n        <TertiaryButton onClick={e => e.stopPropagation()}>\n            {children}\n        </TertiaryButton>\n    );\n\n    const formatNumber = num =>\n        Number(\n            num\n                .toString()\n                .replace(/\\s/g, '')\n                .replace(/,/g, '.'),\n        );\n\n    const data = [\n        {\n            id: 0,\n            name: 'Ola Normann',\n            email: 'ola@normann.no',\n            address: 'Gateveien 2',\n            age: 23,\n            networth: '12 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 1,\n            name: 'Sivert Svenska',\n            email: 'sivert@svenska.se',\n            age: 45,\n            networth: '9 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 2,\n            name: 'Daniel Dansk',\n            email: 'daniel@dansk.dk',\n            address: <Button>legg til adresse</Button>,\n            age: 39,\n            networth: '8 693 005,93',\n            button: <Button>poke</Button>,\n        },\n        {\n            id: 3,\n            name: 'Lille Ole',\n            email: 'lilleole@gmail.com',\n            address: <Button>legg til adresse</Button>,\n            age: 9,\n            networth: '23,12',\n            button: <Button>poke</Button>,\n        },\n    ].map(d => ({\n        syntetic: d.age > 18 && formatNumber(d.networth) > 10000,\n        ...d,\n    }));\n\n    const currencyCompare = (a, b) => formatNumber(a) - formatNumber(b);\n\n    const ageSum = data\n        .map(e => e.age)\n        .reduce((total, num) => {\n            return total + num;\n        });\n\n    const networthSum = data\n        .map(e => formatNumber(e.networth))\n        .reduce((total, num) => {\n            return total + num;\n        });\n\n    const columnsAdvanced = [\n        { key: 'name', header: 'Navn', footer: 'Gjennomsnitt' },\n        {\n            key: 'email',\n            header: 'E-post',\n            hideOnTablet: true,\n            hideOnMobile: true,\n        },\n        {\n            key: 'age',\n            header: 'Alder',\n            footer: ageSum / data.length,\n            alignRight: true,\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {value} {value > 18 ? ' (voksen)' : ''}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'syntetic',\n            header: 'Syntetisk felt',\n            alignRight: true,\n            notSortable: true,\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {props.cells.age > 18 &&\n                        formatNumber(props.cells.networth) > 10000\n                            ? 'voksen, formue > 10000'\n                            : ''}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'syntetic',\n            header: 'Sparing',\n            alignRight: true,\n            columnHeaderRender: (\n                value,\n                dataWindow,\n                spanProps,\n                thProps,\n                columns,\n            ) => {\n                const dataWindowSum = dataWindow\n                    .map(e => (e.syntetic ? 1 : 0))\n                    .reduce((total, num) => {\n                        return total + num;\n                    });\n                return (\n                    <th key={thProps.key} {...thProps}>\n                        <span {...spanProps}>\n                            {value} ({dataWindowSum})\n                        </span>\n                    </th>\n                );\n            },\n            cellRender: (value, col, props) => {\n                return (\n                    <>\n                        {' '}\n                        {value\n                            ? generateCheckbox(value)\n                            : generateCheckbox(false)}\n                    </>\n                );\n            },\n        },\n        {\n            key: 'networth',\n            header: 'Formue',\n            footer: '5 348 760,23',\n            alignRight: true,\n            compare: currencyCompare,\n\n            columnFooterRender: (\n                value,\n                dataWindow,\n                tdPorps,\n                spanProps,\n                columns,\n                index,\n            ) => {\n                return (\n                    <th key={tdPorps.key} {...tdPorps}>\n                        <span {...spanProps}>\n                            {Number(networthSum / 4).toFixed(2)}\n                        </span>\n                    </th>\n                );\n            },\n        },\n        { key: 'button', header: 'Poke', notSortable: true },\n    ];\n\n    // Rader uten address vil ikke kunne ekspanderes fordi funksjonen returnerer falsy\n    const expandedContentMapper = row =>\n        row.address && <span>Adresse: {row.address}</span>;\n\n    // function is called when table sorting changes.\n    const onSort = ({ sortBy, descending, tableData }) => {};\n\n    return (\n        <Table\n            columns={columnsAdvanced}\n            data={data}\n            expandedContentMapper={expandedContentMapper}\n            sortable={true}\n            sortBy={'age'}\n            descending={true}\n            condensed={true}\n            smallHeader={true}\n            columnLayoutMobile={true}\n            breakpoint={'none'}\n            caption=\"Masse spennende data\"\n            onSort={onSort}\n            headerRender={(trprops, columns) => {\n                return (\n                    <>\n                        <tr {...trprops}>\n                            <th\n                                colSpan={3}\n                                className=\"ffe-table__heading\"\n                                style={{ textAlign: 'center' }}\n                            >\n                                Personlig\n                            </th>\n                            <th colSpan={2} className=\"ffe-table__heading\" />\n                            <th colSpan={3} className=\"ffe-table__heading\">\n                                Overskrift\n                            </th>\n                        </tr>\n                        <tr {...trprops} />\n                    </>\n                );\n            }}\n            footerRender={(trprops, columns) => {\n                return (\n                    <>\n                        <tr {...trprops} />\n                        <tr {...trprops}>\n                            <td className=\"ffe-table__cell\" data-th=\"Navn\">\n                                <span className=\"ffe-table__content\">\n                                    Total\n                                </span>\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"E-post\">\n                                <span className=\"ffe-table__content\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"Alder\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                            <td\n                                className=\"ffe-table__cell\"\n                                data-th=\"Syntetisk felt\"\n                            >\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" />\n                            <th className=\"ffe-table__cell\" data-th=\"Formue\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\">\n                                    {networthSum}\n                                </span>\n                            </th>\n                            <td className=\"ffe-table__cell\" data-th=\"Poke\">\n                                <span className=\"ffe-table__content\" />\n                            </td>\n                            <td className=\"ffe-table__cell\" data-th=\"\">\n                                <span className=\"ffe-table__content ffe-table__content--text-right\" />\n                            </td>\n                        </tr>\n                    </>\n                );\n            }}\n            rowRender={(trprops, props, index) => {\n                const oddEvenClassName = index % 2 === 1 ? 'is-odd' : 'is-even';\n                return (\n                    <tr\n                        {...trprops}\n                        className={`${trprops.className} ffe-table__row-expandable ${oddEvenClassName}`}\n                        onClick={event => {\n                            console.log('rowRenderClick!', index);\n                            trprops.onClick && trprops.onClick(event);\n                        }}\n                        title={props.cells.name}\n                    >\n                        {trprops.children}\n                    </tr>\n                );\n            }}\n        />\n    );\n};\n",sourceImports:"import Table from '@sb1/ffe-tables-react';\nimport { TertiaryButton } from '@sb1/ffe-buttons-react';\nimport { HakeIkon, KryssIkon } from '@sb1/ffe-icons-react';",dependencies:["@sb1/ffe-tables-react","@sb1/ffe-buttons-react","@sb1/ffe-icons-react"],sourceFileName:"tables/Table-customRender.jsx"}),xi={Table:Ye.Z},yi={datepicker_Datepicker_fullWidth:tn,datepicker_Datepicker_calendarAbove:rn,datepicker_Calendar_en:sn,datepicker_Datepicker_invalid:ln,datepicker_Calendar:dn,datepicker_Datepicker_en:mn,datepicker_Calendar_nn:bn,datepicker_Datepicker:kn,datepicker_Datepicker_nn:Cn,tabs_TabButton_selected:Sn,tabs_TabButton:_n,tabs_TabGroup_thin:xn,tabs_TabButtonGroup_thin:Tn,tabs_TabButtonGroup_advanced:Gn,tabs_TabButton_customProps:Mn,tabs_Tab_condensed:wn,tabs_Tab_selected:jn,tabs_Tab_customProps:An,tabs_TabButton_condensed:En,tabs_TabButtonGroup:zn,tabs_TabGroup:Vn,tabs_TabGroup_advanced:Un,tabs_Tab:qn,message_box_InfoMessage_customIcon:Wn,message_box_InfoMessage:Qn,message_box_InfoMessageList:Yn,message_box_SuccessMessage:nt,message_box_ErrorMessage:ot,message_box_ErrorMessage_alertFalse:at,message_box_TipsMessage:it,buttons_ExpandButton:lt,buttons_TertiaryButton:dt,buttons_InlineExpandButton:mt,buttons_ButtonGroup_thin:bt,buttons_TaskButton:kt,buttons_SecondaryButton:Ct,buttons_ActionButton:St,buttons_ShortcutButton:_t,buttons_ButtonGroup_inline:xt,buttons_PrimaryButton:Tt,buttons_ButtonGroup:Gt,buttons_BackButton:Mt,buttons_ariaLoadingMessage:wt,form_Input:jt,form_TextArea_ref:At,form_InputGroup_fieldMessage:Et,form_RadioBlock:zt,form_InfoFieldMessage:Vt,form_RadioSwitch_fieldMessageUnselected:Ut,form_RadioButton_tooltip:qt,form_RadioButton:Wt,form_InputGroup:Qt,form_Checkbox_onChange:Yt,form_Checkbox:no,form_InputGroup_extraMarginFalse:oo,form_InputGroup_multiChildren:ao,form_PhoneNumber_PhoneNumber_countryCode_invalid:io,form_Label:lo,form_RadioSwitch_selectedValue:po,form_Checkbox_invalid:fo,form_SuccessFieldMessage:go,form_PhoneNumber:ho,form_Checkbox_inlineFalse:Io,form_PhoneNumber_countryCode_invalid:Bo,form_InputGroup_description:vo,form_RadioButtonInputGroup_extraMarginFalse:yo,form_RadioSwitch:No,form_TextArea:Do,form_Tooltip_external:Lo,form_Checkbox_hiddenLabel:Ro,form_ErrorFieldMessage:Po,form_RadioSwitch_fieldMessage:Oo,form_RadioButton_inline:Fo,form_Input_textLike:Zo,form_PhoneNumber_PhoneNumber_invalid:Ho,form_Checkbox_renderProps:Ko,form_Input_ref:Jo,form_RadioButtonInputGroup:$o,form_Tooltip:Xo,dropdown_Dropdown_searchable_highCapacity:er,dropdown_Dropdown_searchable_selectedItem:tr,dropdown_Dropdown_searchable_2_attributes:rr,dropdown_Dropdown:sr,dropdown_Dropdown_searchable_customListElementBody:cr,dropdown_Dropdown_searchable_customMatchFunction:ur,dropdown_Dropdown_invalid:pr,dropdown_Dropdown_searchable_extraresults:fr,dropdown_Dropdown_searchable:gr,file_upload_FileUpload:hr,account_selector_AccountSelector_accountNumberFormatting_off:Ir,account_selector_AccountSelector_allowCustomAccount:Br,account_selector_AccountSelectorMulti:vr,account_selector_AccountSelector_showBalance:yr,account_selector_AccountSelector_customListDesign:Nr,account_selector_AccountSelector:Dr,spinner_Spinner:Lr,spinner_Spinner_large:Rr,details_list_DetailList:Pr,lists_DescriptionList:Or,lists_CheckList_columns:Fr,lists_DescriptionListMultiCol:Zr,lists_BulletList:Hr,lists_CheckList:Kr,lists_NumberedList:Jr,lists_DescriptionList_mediumlarge:$r,lists_DescriptionList_horizontal:Xr,lists_StylizedNumberedList:ea,collapse_Collapse_onRest:ta,collapse_Collapse:ra,context_message_ContextTipMessage_compact:sa,context_message_ContextErrorMessage_showCloseButton:ca,context_message_ContextErrorMessage:ua,context_message_ContextSuccessMessage_icon:pa,context_message_ContextInfoMessage_header:fa,context_message_ContextErrorMessage_alertFalse:ga,context_message_ContextInfoMessage_icon:ha,context_message_ContextInfoMessage_showCloseButton:Ia,context_message_ContextInfoMessage_compact:Ba,context_message_ContextTipMessage_icon:va,context_message_ContextSuccessMessage:ya,context_message_ContextErrorMessage_header:Na,context_message_ContextTipMessage:Da,context_message_ContextInfoMessage:La,context_message_ContextSuccessMessage_showCloseButton:Ra,context_message_ContextErrorMessage_compact:Pa,context_message_ContextSuccessMessage_header:Oa,context_message_ContextTipMessage_showCloseButton:Fa,context_message_ContextTipMessage_header:Za,context_message_ContextErrorMessage_icon:Ha,context_message_ContextSuccessMessage_compact:Ka,accordion_Accordion_managed:Ja,accordion_Accordion_open:$a,accordion_Accordion:Xa,chart_donut_ChartDonut:es,chart_donut_ChartDonut_customLabel:ts,cards_ImageCard_titleOnly:rs,cards_CardBase:ss,cards_ImageCard:cs,cards_IconCard_condensed:us,cards_IconCard:ps,cards_IconCard_greyCharcoal:fs,cards_TextCard:gs,grid_Grid:hs,grid_GridCol_background:Is,grid_InlineGrid_nested:Bs,grid_InlineGrid:vs,grid_Grid_4col:ys,grid_GridRow_background:Ns,typography_SmallText:Ds,typography_DividerLine:Ls,typography_PreformattedText:Rs,typography_MicroText:Ps,typography_LinkText:Os,typography_StrongText:Fs,typography_Heading:Zs,typography_EmphasizedText:Hs,typography_LinkText_icon:Ks,typography_Paragraph:Js,formatting_Date:$s,formatting_Distance:Xs,formatting_Accountnumber:ei,formatting_Currency:ti,formatting_Birthnumber:ri,formatting_Percentage:si,formatting_Numbers:ci,system_message_SystemInfoMessage:ui,system_message_SystemErrorMessage_alertFalse:pi,system_message_SystemErrorMessage:fi,system_message_SystemNewsMessage:gi,system_message_SystemSuccessMessage:hi,tables_Table_expandedContentMapper:Ii,tables_Table_advanced:Bi,tables_Table_customRender:vi,tables_Table:Object.freeze({__proto__:null,scope:xi,code:"() => {\n    const columns = [\n        { key: 'name', header: 'Navn' },\n        { key: 'age', header: 'Alder' },\n    ];\n    const data = [\n        { name: 'Anders', age: 32 },\n        { name: 'Erik', age: 25 },\n        { name: 'Gunn', age: 29 },\n        { name: 'Safi', age: 42 },\n        { name: 'Sandra', age: 42 },\n    ];\n\n    return <Table caption=\"Utviklere\" columns={columns} data={data} />;\n};",sourceCode:"import Table from '@sb1/ffe-tables-react';\n\n() => {\n    const columns = [\n        { key: 'name', header: 'Navn' },\n        { key: 'age', header: 'Alder' },\n    ];\n    const data = [\n        { name: 'Anders', age: 32 },\n        { name: 'Erik', age: 25 },\n        { name: 'Gunn', age: 29 },\n        { name: 'Safi', age: 42 },\n        { name: 'Sandra', age: 42 },\n    ];\n\n    return <Table caption=\"Utviklere\" columns={columns} data={data} />;\n};\n",sourceImports:"import Table from '@sb1/ffe-tables-react';",dependencies:["@sb1/ffe-tables-react"],sourceFileName:"tables/Table.jsx"})}}}]);
//# sourceMappingURL=2993d9ef-a810ea8a6d8c0a44d3a6.js.map