{"version":3,"file":"component---src-templates-react-package-page-jsx-65521d084f0c524b0ad0.js","mappings":"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","sources":["webpack://@sb1/designsystem-cms/./src/components/InPageNavigation.jsx","webpack://@sb1/designsystem-cms/./src/templates/Layout.jsx","webpack://@sb1/designsystem-cms/./src/templates/ReactPackagePage.jsx","webpack://@sb1/designsystem-cms/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport { useLocation } from '@reach/router';\n\nconst InPageNavigation = () => {\n  const { pathname: currentPath, hash: urlHash } = useLocation();\n  const data = useStaticQuery(graphql`\n    query getTableOfContents {\n      allMdx {\n        nodes {\n          fields {\n            slug\n          }\n          tableOfContents\n        }\n      }\n    }\n  `);\n\n  /* This is a workaround as Graphql don't allow variables to be used in queries, making it hard to do a filtered query on pathname */\n  const findHeadingsBelongingToPage = () => data.allMdx.nodes.find(content => content.fields.slug === currentPath);\n  const headers = findHeadingsBelongingToPage()?.tableOfContents.items || [];\n  const anchorIsActive = anchorUrl => decodeURIComponent(urlHash) === anchorUrl;\n\n  return (\n    <aside className=\"sb1ds-inpage-nav\">\n      <ul className=\"sb1ds-inpage-nav__list\">\n        {headers.map(heading =>\n          <li className=\"sb1ds-inpage-nav__list-item\" key={heading.url}>\n            <Link to={heading.url}\n              className={`sb1ds-inpage-nav__link ${anchorIsActive(heading.url) ? 'sb1ds-inpage-nav__link--active' : ''}`}\n            >{heading.title}</Link>\n          </li>\n        )}\n      </ul>\n    </aside>\n  );\n};\n\nexport default InPageNavigation;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { node, string } from 'prop-types';\nimport useSiteMetadata from '../util/useSiteMetadata';\nimport Navigation from '../components/Navigation';\nimport InPageNavigation from '../components/InPageNavigation';\n\n/**\n * Import assets\n */\nimport '../css-imports';\nimport favicon from '../../static/favicon.ico';\n\n/**\n * Common page layout\n *\n * Wraps a page with shared elements like navigation and sidebar, sets head\n * elements and provides an application context.\n */\nconst Layout = ({children, title, introtext, illustration}) => {\n    const site = useSiteMetadata();\n\n    return (<>\n        <Helmet\n            titleTemplate={`%s â€” ${site.title}`}\n            defaultTitle={site.title}\n        >\n            <html lang=\"no\" />\n            <title>{title}</title>\n            <link rel=\"shortcut icon\" href={favicon}></link>\n        </Helmet>\n\n      <div className=\"sb1ds-wave\">\n        <div className=\"sb1ds-layout\">\n            <Navigation/>\n\n            <main className='ffe-body-text sb1ds-main'>\n                <div className=\"sb1ds-intro\">\n                    <h1 className=\"ffe-h1 sb1ds-intro__heading\">\n                        {title}\n                    </h1>\n                    {introtext &&\n                        <p className=\"ffe-lead-paragraph sb1ds-intro__paragraph\">\n                            {introtext}\n                        </p>\n                    }\n                    {illustration &&\n                        <div className=\"sb1ds-intro__illustration\" role=\"presentation\">\n                            <img src={`/img/${illustration}`} alt=\"Illustrasjon\" />\n                        </div>\n                    }\n                </div>\n                {children}\n            </main>\n\n            <InPageNavigation />\n        </div>\n      </div>\n    </>);\n};\n\nLayout.propTypes = {\n    // page title, for headline and document title\n    title: string.isRequired,\n    // page content\n    children: node.isRequired,\n    introtext: string,\n    illustration: string\n};\n\nexport default Layout;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport Layout from './Layout';\n\nconst getUnionTypes = type => type.value.map(v => v.name).join(' | ');\nconst getEnumValues = type =>  type.value && type.value.map ?  `One of ${type.value.map(v => v.value).join(', ')}.` : type.value;\n\n// type column\nconst getPropType = prop => {\n    return prop.type.name === 'union' ? getUnionTypes(prop.type) : prop.type.name;\n};\n\n// default value column\nconst getPropDefault = prop => {\n    if (prop.required) {\n        return 'required';\n    } else if (prop.defaultValue) {\n        return <code>{prop.defaultValue.value}</code>;\n    }\n\n    return '';\n};\n\n// description column\nconst getPropDescription = prop => {\n    return <>\n        {prop.description}\n        {(prop.type.name === 'enum') && (<p>{getEnumValues(prop.type)}</p>)}\n        </>;\n};\n\n\n/**\n * Overview of the components `props`\n */\nconst PropsTable = ({props}) => {\n    const data = Object.keys(props).map(propName => {\n        const prop = props[propName];\n\n        return {\n            propName,\n            propType: getPropType(prop),\n            propDefault: getPropDefault(prop),\n            description: getPropDescription(prop)\n        };\n    });\n    return <table>\n        <thead>\n            <tr>\n                <th>Prop name</th>\n                <th>Type</th>\n                <th>Default</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            {data.map((d) => <tr key={d.propName}>\n                <td>{d.propName}</td>\n                <td>{d.propType}</td>\n                <td>{d.propDefault}</td>\n                <td>{d.description}</td>\n            </tr>)}\n        </tbody>\n    </table>;\n};\n\nPropsTable.propTypes = {\n    props: object.isRequired\n};\n\n\n/**\n * API documentation of React components\n */\nconst ReactPackagePage = ({pageContext: { packageName, reactDocs }}) => (\n    <Layout title={packageName}>\n        {reactDocs.map(({repoFile, displayName, sourceFile, ...reactDoc}) => {\n            return (\n                <div key={repoFile}>\n                    <h2>{displayName} ({sourceFile})</h2>\n                    <p>{reactDoc.description}</p>\n                    <h3>Props</h3>\n                    {reactDoc.props && <PropsTable props={reactDoc.props} />}\n                </div>\n            );\n        })}\n    </Layout>\n);\n\nReactPackagePage.propTypes = {\n    // data from react-docgen\n    pageContext: object.isRequired\n};\n\nexport default ReactPackagePage;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["useLocation","currentPath","pathname","urlHash","hash","headers","useStaticQuery","allMdx","nodes","find","content","fields","slug","tableOfContents","items","className","map","heading","key","url","to","anchorUrl","decodeURIComponent","title","children","introtext","illustration","site","useSiteMetadata","Helmet","titleTemplate","defaultTitle","lang","rel","href","favicon","Navigation","role","src","alt","getPropType","prop","type","name","value","v","join","getPropDefault","required","defaultValue","getPropDescription","description","PropsTable","props","data","Object","keys","propName","propType","propDefault","d","pageContext","packageName","reactDocs","repoFile","displayName","sourceFile","reactDoc","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","length","indexOf"],"sourceRoot":""}